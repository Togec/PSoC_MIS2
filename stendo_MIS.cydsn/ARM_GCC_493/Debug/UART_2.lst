ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_2_initVar
  19              		.bss
  20              		.type	UART_2_initVar, %object
  21              		.size	UART_2_initVar, 1
  22              	UART_2_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.UART_2_Start,"ax",%progbits
  25              		.align	2
  26              		.global	UART_2_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	UART_2_Start, %function
  30              	UART_2_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\UART_2.c"
   1:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_2.c **** * File Name: UART_2.c
   3:Generated_Source\PSoC5/UART_2.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_2.c **** *
   5:Generated_Source\PSoC5/UART_2.c **** * Description:
   6:Generated_Source\PSoC5/UART_2.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_2.c **** *
   8:Generated_Source\PSoC5/UART_2.c **** * Note:
   9:Generated_Source\PSoC5/UART_2.c **** *
  10:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_2.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_2.c **** 
  17:Generated_Source\PSoC5/UART_2.c **** #include "UART_2.h"
  18:Generated_Source\PSoC5/UART_2.c **** #if (UART_2_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_2.c ****     #include "UART_2_IntClock.h"
  20:Generated_Source\PSoC5/UART_2.c **** #endif /* End UART_2_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_2.c **** 
  22:Generated_Source\PSoC5/UART_2.c **** 
  23:Generated_Source\PSoC5/UART_2.c **** /***************************************
  24:Generated_Source\PSoC5/UART_2.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_2.c **** ***************************************/
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 2


  26:Generated_Source\PSoC5/UART_2.c **** 
  27:Generated_Source\PSoC5/UART_2.c **** uint8 UART_2_initVar = 0u;
  28:Generated_Source\PSoC5/UART_2.c **** 
  29:Generated_Source\PSoC5/UART_2.c **** #if (UART_2_TX_INTERRUPT_ENABLED && UART_2_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_txBuffer[UART_2_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_2.c **** #endif /* (UART_2_TX_INTERRUPT_ENABLED && UART_2_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_2.c **** 
  35:Generated_Source\PSoC5/UART_2.c **** #if (UART_2_RX_INTERRUPT_ENABLED && (UART_2_RX_ENABLED || UART_2_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBuffer[UART_2_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_2.c ****         volatile uint8 UART_2_rxAddressMode = UART_2_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_2.c ****         volatile uint8 UART_2_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_2.c **** #endif /* (UART_2_RX_INTERRUPT_ENABLED && (UART_2_RX_ENABLED || UART_2_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_2.c **** 
  48:Generated_Source\PSoC5/UART_2.c **** 
  49:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Start
  51:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_2.c **** *
  53:Generated_Source\PSoC5/UART_2.c **** * Summary:
  54:Generated_Source\PSoC5/UART_2.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_2.c **** *  UART_2_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_2.c **** *  UART_2_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_2.c **** *  UART_2_Enable() function.
  58:Generated_Source\PSoC5/UART_2.c **** *
  59:Generated_Source\PSoC5/UART_2.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_2.c **** *  None.
  61:Generated_Source\PSoC5/UART_2.c **** *
  62:Generated_Source\PSoC5/UART_2.c **** * Return:
  63:Generated_Source\PSoC5/UART_2.c **** *  None.
  64:Generated_Source\PSoC5/UART_2.c **** *
  65:Generated_Source\PSoC5/UART_2.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_2.c **** *  The UART_2_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_2.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_2.c **** *  and set to one (1u) the first time UART_2_Start() is called. This
  69:Generated_Source\PSoC5/UART_2.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_2.c **** *  subsequent calls to the UART_2_Start() routine.
  71:Generated_Source\PSoC5/UART_2.c **** *
  72:Generated_Source\PSoC5/UART_2.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_2.c **** *  No.
  74:Generated_Source\PSoC5/UART_2.c **** *
  75:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_2.c **** void UART_2_Start(void) 
  77:Generated_Source\PSoC5/UART_2.c **** {
  33              		.loc 1 77 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 3


  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_2.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_2.c ****     if(UART_2_initVar == 0u)
  43              		.loc 1 79 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_2.c ****     {
  81:Generated_Source\PSoC5/UART_2.c ****         UART_2_Init();
  48              		.loc 1 81 0
  49 000c FFF7FEFF 		bl	UART_2_Init
  82:Generated_Source\PSoC5/UART_2.c ****         UART_2_initVar = 1u;
  50              		.loc 1 82 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
  54              	.L2:
  83:Generated_Source\PSoC5/UART_2.c ****     }
  84:Generated_Source\PSoC5/UART_2.c **** 
  85:Generated_Source\PSoC5/UART_2.c ****     UART_2_Enable();
  55              		.loc 1 85 0
  56 0016 FFF7FEFF 		bl	UART_2_Enable
  86:Generated_Source\PSoC5/UART_2.c **** }
  57              		.loc 1 86 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	UART_2_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	UART_2_Start, .-UART_2_Start
  66              		.section	.text.UART_2_Init,"ax",%progbits
  67              		.align	2
  68              		.global	UART_2_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_2_Init, %function
  72              	UART_2_Init:
  73              	.LFB1:
  87:Generated_Source\PSoC5/UART_2.c **** 
  88:Generated_Source\PSoC5/UART_2.c **** 
  89:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Init
  91:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_2.c **** *
  93:Generated_Source\PSoC5/UART_2.c **** * Summary:
  94:Generated_Source\PSoC5/UART_2.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_2.c **** *  dialog settings. It is not necessary to call UART_2_Init() because
  96:Generated_Source\PSoC5/UART_2.c **** *  the UART_2_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_2.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_2.c **** *
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 4


  99:Generated_Source\PSoC5/UART_2.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_2.c **** *  None.
 101:Generated_Source\PSoC5/UART_2.c **** *
 102:Generated_Source\PSoC5/UART_2.c **** * Return:
 103:Generated_Source\PSoC5/UART_2.c **** *  None.
 104:Generated_Source\PSoC5/UART_2.c **** *
 105:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_2.c **** void UART_2_Init(void) 
 107:Generated_Source\PSoC5/UART_2.c **** {
  74              		.loc 1 107 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_2.c **** 
 110:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_2.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_2.c ****             (void) CyIntSetVector(UART_2_RX_VECT_NUM, &UART_2_RXISR);
 113:Generated_Source\PSoC5/UART_2.c ****             CyIntSetPriority(UART_2_RX_VECT_NUM, UART_2_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_2.c ****             UART_2_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_2.c **** 
 117:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddressMode(UART_2_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddress1(UART_2_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddress2(UART_2_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_2.c **** 
 123:Generated_Source\PSoC5/UART_2.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_PERIOD_REG = UART_2_RXBITCTR_INIT;
  84              		.loc 1 124 0
  85 0004 094B     		ldr	r3, .L6
  86 0006 7222     		movs	r2, #114
  87 0008 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_2.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_MASK_REG  = UART_2_INIT_RX_INTERRUPTS_MASK;
  88              		.loc 1 126 0
  89 000a 094B     		ldr	r3, .L6+4
  90 000c 2022     		movs	r2, #32
  91 000e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_RX_ENABLED || UART_2_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_2.c **** 
 129:Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_2.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_2.c ****             (void) CyIntSetVector(UART_2_TX_VECT_NUM, &UART_2_TXISR);
 133:Generated_Source\PSoC5/UART_2.c ****             CyIntSetPriority(UART_2_TX_VECT_NUM, UART_2_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_2.c **** 
 136:Generated_Source\PSoC5/UART_2.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TXCLKGEN_DP)
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 5


 138:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCLKGEN_CTR_REG = UART_2_BIT_CENTER;
  92              		.loc 1 138 0
  93 0010 084B     		ldr	r3, .L6+8
  94 0012 0622     		movs	r2, #6
  95 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCLKTX_COMPLETE_REG = ((UART_2_NUMBER_OF_DATA_BITS +
  96              		.loc 1 139 0
  97 0016 084B     		ldr	r3, .L6+12
  98 0018 4722     		movs	r2, #71
  99 001a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_2.c ****                         UART_2_NUMBER_OF_START_BIT) * UART_2_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_2.c ****         #else
 142:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_PERIOD_REG = ((UART_2_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_2.c ****                         UART_2_NUMBER_OF_START_BIT) * UART_2_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_2.c **** 
 146:Generated_Source\PSoC5/UART_2.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXSTATUS_MASK_REG = UART_2_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_2.c ****         #else
 150:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXSTATUS_MASK_REG = UART_2_INIT_TX_INTERRUPTS_MASK;
 100              		.loc 1 150 0
 101 001c 074B     		ldr	r3, .L6+16
 102 001e 0022     		movs	r2, #0
 103 0020 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/UART_2.c ****         #endif /*End UART_2_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_2.c **** 
 153:Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_2.c **** 
 155:Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_2.c ****         UART_2_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_2.c ****             (UART_2_ReadControlRegister() & (uint8)~UART_2_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_2.c ****             (uint8)(UART_2_PARITY_TYPE << UART_2_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_2.c **** }
 104              		.loc 1 160 0
 105 0022 BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 0024 5DF8047B 		ldr	r7, [sp], #4
 109              		.cfi_restore 7
 110              		.cfi_def_cfa_offset 0
 111 0028 7047     		bx	lr
 112              	.L7:
 113 002a 00BF     		.align	2
 114              	.L6:
 115 002c 8D640040 		.word	1073767565
 116 0030 8A640040 		.word	1073767562
 117 0034 25650040 		.word	1073767717
 118 0038 35650040 		.word	1073767733
 119 003c 85650040 		.word	1073767813
 120              		.cfi_endproc
 121              	.LFE1:
 122              		.size	UART_2_Init, .-UART_2_Init
 123              		.section	.text.UART_2_Enable,"ax",%progbits
 124              		.align	2
 125              		.global	UART_2_Enable
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 6


 126              		.thumb
 127              		.thumb_func
 128              		.type	UART_2_Enable, %function
 129              	UART_2_Enable:
 130              	.LFB2:
 161:Generated_Source\PSoC5/UART_2.c **** 
 162:Generated_Source\PSoC5/UART_2.c **** 
 163:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Enable
 165:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_2.c **** *
 167:Generated_Source\PSoC5/UART_2.c **** * Summary:
 168:Generated_Source\PSoC5/UART_2.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_2.c **** *  to call UART_2_Enable() because the UART_2_Start() API
 170:Generated_Source\PSoC5/UART_2.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_2.c **** *  operation.
 172:Generated_Source\PSoC5/UART_2.c **** 
 173:Generated_Source\PSoC5/UART_2.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_2.c **** *  None.
 175:Generated_Source\PSoC5/UART_2.c **** *
 176:Generated_Source\PSoC5/UART_2.c **** * Return:
 177:Generated_Source\PSoC5/UART_2.c **** *  None.
 178:Generated_Source\PSoC5/UART_2.c **** *
 179:Generated_Source\PSoC5/UART_2.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_2.c **** *  UART_2_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_2.c **** *
 182:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_2.c **** void UART_2_Enable(void) 
 184:Generated_Source\PSoC5/UART_2.c **** {
 131              		.loc 1 184 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 82B0     		sub	sp, sp, #8
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_2.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_2.c ****     enableInterrupts = CyEnterCriticalSection();
 143              		.loc 1 186 0
 144 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 145 000a 0346     		mov	r3, r0
 146 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_2.c **** 
 188:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_2.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_CONTROL_REG |= UART_2_CNTR_ENABLE;
 147              		.loc 1 190 0
 148 000e 104A     		ldr	r2, .L9
 149 0010 0F4B     		ldr	r3, .L9
 150 0012 1B78     		ldrb	r3, [r3]
 151 0014 DBB2     		uxtb	r3, r3
 152 0016 43F02003 		orr	r3, r3, #32
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 7


 153 001a DBB2     		uxtb	r3, r3
 154 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_2.c **** 
 192:Generated_Source\PSoC5/UART_2.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_ACTL_REG  |= UART_2_INT_ENABLE;
 155              		.loc 1 193 0
 156 001e 0D4A     		ldr	r2, .L9+4
 157 0020 0C4B     		ldr	r3, .L9+4
 158 0022 1B78     		ldrb	r3, [r3]
 159 0024 DBB2     		uxtb	r3, r3
 160 0026 43F01003 		orr	r3, r3, #16
 161 002a DBB2     		uxtb	r3, r3
 162 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_2.c **** 
 195:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableRxInt();
 197:Generated_Source\PSoC5/UART_2.c **** 
 198:Generated_Source\PSoC5/UART_2.c ****             #if (UART_2_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_2.c ****             #endif /* (UART_2_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_2.c **** 
 204:Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_2.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_2.c ****         #if(!UART_2_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_CONTROL_REG |= UART_2_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_2.c **** 
 210:Generated_Source\PSoC5/UART_2.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_ACTL_REG |= UART_2_INT_ENABLE;
 163              		.loc 1 211 0
 164 002e 0A4A     		ldr	r2, .L9+8
 165 0030 094B     		ldr	r3, .L9+8
 166 0032 1B78     		ldrb	r3, [r3]
 167 0034 DBB2     		uxtb	r3, r3
 168 0036 43F01003 		orr	r3, r3, #16
 169 003a DBB2     		uxtb	r3, r3
 170 003c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_2.c ****             UART_2_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
 215:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_2.c ****      #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_2.c **** 
 218:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_2.c ****         UART_2_IntClock_Start();  /* Enable the clock */
 171              		.loc 1 219 0
 172 003e FFF7FEFF 		bl	UART_2_IntClock_Start
 220:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_2.c **** 
 222:Generated_Source\PSoC5/UART_2.c ****     CyExitCriticalSection(enableInterrupts);
 173              		.loc 1 222 0
 174 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 175 0044 1846     		mov	r0, r3
 176 0046 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_2.c **** }
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 8


 177              		.loc 1 223 0
 178 004a 0837     		adds	r7, r7, #8
 179              		.cfi_def_cfa_offset 8
 180 004c BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 004e 80BD     		pop	{r7, pc}
 184              	.L10:
 185              		.align	2
 186              	.L9:
 187 0050 9D640040 		.word	1073767581
 188 0054 9A640040 		.word	1073767578
 189 0058 95650040 		.word	1073767829
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	UART_2_Enable, .-UART_2_Enable
 193              		.section	.text.UART_2_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	UART_2_Stop
 196              		.thumb
 197              		.thumb_func
 198              		.type	UART_2_Stop, %function
 199              	UART_2_Stop:
 200              	.LFB3:
 224:Generated_Source\PSoC5/UART_2.c **** 
 225:Generated_Source\PSoC5/UART_2.c **** 
 226:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Stop
 228:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_2.c **** *
 230:Generated_Source\PSoC5/UART_2.c **** * Summary:
 231:Generated_Source\PSoC5/UART_2.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_2.c **** *
 233:Generated_Source\PSoC5/UART_2.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_2.c **** *  None.
 235:Generated_Source\PSoC5/UART_2.c **** *
 236:Generated_Source\PSoC5/UART_2.c **** * Return:
 237:Generated_Source\PSoC5/UART_2.c **** *  None.
 238:Generated_Source\PSoC5/UART_2.c **** *
 239:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_2.c **** void UART_2_Stop(void) 
 241:Generated_Source\PSoC5/UART_2.c **** {
 201              		.loc 1 241 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_2.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_2.c ****     enableInterrupts = CyEnterCriticalSection();
 213              		.loc 1 243 0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 9


 214 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 215 000a 0346     		mov	r3, r0
 216 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_2.c **** 
 245:Generated_Source\PSoC5/UART_2.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_CONTROL_REG &= (uint8) ~UART_2_CNTR_ENABLE;
 217              		.loc 1 247 0
 218 000e 104A     		ldr	r2, .L12
 219 0010 0F4B     		ldr	r3, .L12
 220 0012 1B78     		ldrb	r3, [r3]
 221 0014 DBB2     		uxtb	r3, r3
 222 0016 23F02003 		bic	r3, r3, #32
 223 001a DBB2     		uxtb	r3, r3
 224 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_2.c **** 
 250:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_2.c ****         #if(!UART_2_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_CONTROL_REG &= (uint8) ~UART_2_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_2.c ****         #endif /* (!UART_2_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_2.c **** 
 256:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_2.c ****         UART_2_IntClock_Stop();   /* Disable the clock */
 225              		.loc 1 257 0
 226 001e FFF7FEFF 		bl	UART_2_IntClock_Stop
 258:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_2.c **** 
 260:Generated_Source\PSoC5/UART_2.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_ACTL_REG  &= (uint8) ~UART_2_INT_ENABLE;
 227              		.loc 1 262 0
 228 0022 0C4A     		ldr	r2, .L12+4
 229 0024 0B4B     		ldr	r3, .L12+4
 230 0026 1B78     		ldrb	r3, [r3]
 231 0028 DBB2     		uxtb	r3, r3
 232 002a 23F01003 		bic	r3, r3, #16
 233 002e DBB2     		uxtb	r3, r3
 234 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_2.c **** 
 264:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableRxInt();
 266:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_2.c **** 
 269:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_ACTL_REG &= (uint8) ~UART_2_INT_ENABLE;
 235              		.loc 1 270 0
 236 0032 094A     		ldr	r2, .L12+8
 237 0034 084B     		ldr	r3, .L12+8
 238 0036 1B78     		ldrb	r3, [r3]
 239 0038 DBB2     		uxtb	r3, r3
 240 003a 23F01003 		bic	r3, r3, #16
 241 003e DBB2     		uxtb	r3, r3
 242 0040 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 10


 272:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
 274:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_2.c **** 
 277:Generated_Source\PSoC5/UART_2.c ****     CyExitCriticalSection(enableInterrupts);
 243              		.loc 1 277 0
 244 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 245 0044 1846     		mov	r0, r3
 246 0046 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_2.c **** }
 247              		.loc 1 278 0
 248 004a 0837     		adds	r7, r7, #8
 249              		.cfi_def_cfa_offset 8
 250 004c BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 004e 80BD     		pop	{r7, pc}
 254              	.L13:
 255              		.align	2
 256              	.L12:
 257 0050 9D640040 		.word	1073767581
 258 0054 9A640040 		.word	1073767578
 259 0058 95650040 		.word	1073767829
 260              		.cfi_endproc
 261              	.LFE3:
 262              		.size	UART_2_Stop, .-UART_2_Stop
 263              		.section	.text.UART_2_ReadControlRegister,"ax",%progbits
 264              		.align	2
 265              		.global	UART_2_ReadControlRegister
 266              		.thumb
 267              		.thumb_func
 268              		.type	UART_2_ReadControlRegister, %function
 269              	UART_2_ReadControlRegister:
 270              	.LFB4:
 279:Generated_Source\PSoC5/UART_2.c **** 
 280:Generated_Source\PSoC5/UART_2.c **** 
 281:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_ReadControlRegister
 283:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_2.c **** *
 285:Generated_Source\PSoC5/UART_2.c **** * Summary:
 286:Generated_Source\PSoC5/UART_2.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_2.c **** *
 288:Generated_Source\PSoC5/UART_2.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_2.c **** *  None.
 290:Generated_Source\PSoC5/UART_2.c **** *
 291:Generated_Source\PSoC5/UART_2.c **** * Return:
 292:Generated_Source\PSoC5/UART_2.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_2.c **** *
 294:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_2.c **** uint8 UART_2_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_2.c **** {
 271              		.loc 1 296 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 11


 275              		@ link register save eliminated.
 276 0000 80B4     		push	{r7}
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_2.c ****         return(0u);
 281              		.loc 1 298 0
 282 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_2.c ****     #else
 300:Generated_Source\PSoC5/UART_2.c ****         return(UART_2_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_2.c **** }
 283              		.loc 1 302 0
 284 0006 1846     		mov	r0, r3
 285 0008 BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 000a 5DF8047B 		ldr	r7, [sp], #4
 289              		.cfi_restore 7
 290              		.cfi_def_cfa_offset 0
 291 000e 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	UART_2_ReadControlRegister, .-UART_2_ReadControlRegister
 295              		.section	.text.UART_2_WriteControlRegister,"ax",%progbits
 296              		.align	2
 297              		.global	UART_2_WriteControlRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	UART_2_WriteControlRegister, %function
 301              	UART_2_WriteControlRegister:
 302              	.LFB5:
 303:Generated_Source\PSoC5/UART_2.c **** 
 304:Generated_Source\PSoC5/UART_2.c **** 
 305:Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_WriteControlRegister
 307:Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_2.c **** *
 309:Generated_Source\PSoC5/UART_2.c **** * Summary:
 310:Generated_Source\PSoC5/UART_2.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_2.c **** *
 312:Generated_Source\PSoC5/UART_2.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_2.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_2.c **** *
 315:Generated_Source\PSoC5/UART_2.c **** * Return:
 316:Generated_Source\PSoC5/UART_2.c **** *  None.
 317:Generated_Source\PSoC5/UART_2.c **** *
 318:Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_2.c **** void  UART_2_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_2.c **** {
 303              		.loc 1 320 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 12


 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 83B0     		sub	sp, sp, #12
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 0006 0346     		mov	r3, r0
 316 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_2.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_2.c ****         {
 324:Generated_Source\PSoC5/UART_2.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_2.c ****         }
 326:Generated_Source\PSoC5/UART_2.c ****     #else
 327:Generated_Source\PSoC5/UART_2.c ****        UART_2_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_2.c **** }
 317              		.loc 1 329 0
 318 000a 0C37     		adds	r7, r7, #12
 319              		.cfi_def_cfa_offset 4
 320 000c BD46     		mov	sp, r7
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 000e 5DF8047B 		ldr	r7, [sp], #4
 324              		.cfi_restore 7
 325              		.cfi_def_cfa_offset 0
 326 0012 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE5:
 329              		.size	UART_2_WriteControlRegister, .-UART_2_WriteControlRegister
 330              		.section	.text.UART_2_SetRxInterruptMode,"ax",%progbits
 331              		.align	2
 332              		.global	UART_2_SetRxInterruptMode
 333              		.thumb
 334              		.thumb_func
 335              		.type	UART_2_SetRxInterruptMode, %function
 336              	UART_2_SetRxInterruptMode:
 337              	.LFB6:
 330:Generated_Source\PSoC5/UART_2.c **** 
 331:Generated_Source\PSoC5/UART_2.c **** 
 332:Generated_Source\PSoC5/UART_2.c **** #if(UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_2.c ****     *
 337:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_2.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_2.c ****     *
 340:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_2.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_2.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_2.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_BREAK            Interrupt on break.
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 13


 348:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_2.c ****     *
 352:Generated_Source\PSoC5/UART_2.c ****     * Return:
 353:Generated_Source\PSoC5/UART_2.c ****     *  None.
 354:Generated_Source\PSoC5/UART_2.c ****     *
 355:Generated_Source\PSoC5/UART_2.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_2.c ****     *
 358:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_2.c ****     {
 338              		.loc 1 360 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 83B0     		sub	sp, sp, #12
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 350 0006 0346     		mov	r3, r0
 351 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_MASK_REG  = intSrc;
 352              		.loc 1 361 0
 353 000a 044A     		ldr	r2, .L18
 354 000c FB79     		ldrb	r3, [r7, #7]
 355 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART_2.c ****     }
 356              		.loc 1 362 0
 357 0010 0C37     		adds	r7, r7, #12
 358              		.cfi_def_cfa_offset 4
 359 0012 BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 0014 5DF8047B 		ldr	r7, [sp], #4
 363              		.cfi_restore 7
 364              		.cfi_def_cfa_offset 0
 365 0018 7047     		bx	lr
 366              	.L19:
 367 001a 00BF     		.align	2
 368              	.L18:
 369 001c 8A640040 		.word	1073767562
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	UART_2_SetRxInterruptMode, .-UART_2_SetRxInterruptMode
 373              		.section	.text.UART_2_ReadRxData,"ax",%progbits
 374              		.align	2
 375              		.global	UART_2_ReadRxData
 376              		.thumb
 377              		.thumb_func
 378              		.type	UART_2_ReadRxData, %function
 379              	UART_2_ReadRxData:
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 14


 380              	.LFB7:
 363:Generated_Source\PSoC5/UART_2.c **** 
 364:Generated_Source\PSoC5/UART_2.c **** 
 365:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadRxData
 367:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_2.c ****     *
 369:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_2.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_2.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_2.c ****     *
 373:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_2.c ****     *  None.
 375:Generated_Source\PSoC5/UART_2.c ****     *
 376:Generated_Source\PSoC5/UART_2.c ****     * Return:
 377:Generated_Source\PSoC5/UART_2.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_2.c ****     *
 379:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_2.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_2.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_2.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_2.c ****     *
 388:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_2.c ****     *  No.
 390:Generated_Source\PSoC5/UART_2.c ****     *
 391:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_2.c ****     {
 381              		.loc 1 393 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 83B0     		sub	sp, sp, #12
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART_2.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_2.c **** 
 396:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_2.c **** 
 398:Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_2.c **** 
 401:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 403:Generated_Source\PSoC5/UART_2.c **** 
 404:Generated_Source\PSoC5/UART_2.c ****         locRxBufferRead  = UART_2_rxBufferRead;
 405:Generated_Source\PSoC5/UART_2.c ****         locRxBufferWrite = UART_2_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 15


 407:Generated_Source\PSoC5/UART_2.c ****         if( (UART_2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_2.c ****         {
 409:Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_2.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_2.c **** 
 412:Generated_Source\PSoC5/UART_2.c ****             if(locRxBufferRead >= UART_2_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_2.c ****             {
 414:Generated_Source\PSoC5/UART_2.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_2.c ****             }
 416:Generated_Source\PSoC5/UART_2.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_2.c **** 
 419:Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_2.c ****             {
 421:Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_2.c ****                 #if ((UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_2.c ****                     #if( UART_2_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_2.c ****                         if((UART_2_CONTROL_REG & UART_2_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_2.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_2.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_2.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_2.c ****                             */
 430:Generated_Source\PSoC5/UART_2.c ****                             UART_2_RXSTATUS_MASK_REG  |= UART_2_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_2.c ****                         }
 432:Generated_Source\PSoC5/UART_2.c ****                     #else
 433:Generated_Source\PSoC5/UART_2.c ****                         UART_2_RXSTATUS_MASK_REG  |= UART_2_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_2.c ****                     #endif /* end UART_2_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_2.c ****                 #endif /* ((UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_2.c ****             }
 437:Generated_Source\PSoC5/UART_2.c ****         }
 438:Generated_Source\PSoC5/UART_2.c ****         else
 439:Generated_Source\PSoC5/UART_2.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_2.c ****         }
 442:Generated_Source\PSoC5/UART_2.c **** 
 443:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 444:Generated_Source\PSoC5/UART_2.c **** 
 445:Generated_Source\PSoC5/UART_2.c ****     #else
 446:Generated_Source\PSoC5/UART_2.c **** 
 447:Generated_Source\PSoC5/UART_2.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_2.c ****         rxData = UART_2_RXDATA_REG;
 393              		.loc 1 448 0
 394 0006 054B     		ldr	r3, .L22
 395 0008 1B78     		ldrb	r3, [r3]
 396 000a FB71     		strb	r3, [r7, #7]
 449:Generated_Source\PSoC5/UART_2.c **** 
 450:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_2.c **** 
 452:Generated_Source\PSoC5/UART_2.c ****         return(rxData);
 397              		.loc 1 452 0
 398 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART_2.c ****     }
 399              		.loc 1 453 0
 400 000e 1846     		mov	r0, r3
 401 0010 0C37     		adds	r7, r7, #12
 402              		.cfi_def_cfa_offset 4
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 16


 403 0012 BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 0014 5DF8047B 		ldr	r7, [sp], #4
 407              		.cfi_restore 7
 408              		.cfi_def_cfa_offset 0
 409 0018 7047     		bx	lr
 410              	.L23:
 411 001a 00BF     		.align	2
 412              	.L22:
 413 001c 4A640040 		.word	1073767498
 414              		.cfi_endproc
 415              	.LFE7:
 416              		.size	UART_2_ReadRxData, .-UART_2_ReadRxData
 417              		.section	.text.UART_2_ReadRxStatus,"ax",%progbits
 418              		.align	2
 419              		.global	UART_2_ReadRxStatus
 420              		.thumb
 421              		.thumb_func
 422              		.type	UART_2_ReadRxStatus, %function
 423              	UART_2_ReadRxStatus:
 424              	.LFB8:
 454:Generated_Source\PSoC5/UART_2.c **** 
 455:Generated_Source\PSoC5/UART_2.c **** 
 456:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadRxStatus
 458:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_2.c ****     *
 460:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_2.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_2.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_2.c ****     *
 464:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_2.c ****     *  None.
 466:Generated_Source\PSoC5/UART_2.c ****     *
 467:Generated_Source\PSoC5/UART_2.c ****     * Return:
 468:Generated_Source\PSoC5/UART_2.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_2.c ****     *
 470:Generated_Source\PSoC5/UART_2.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_2.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_2.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_2.c ****     *
 476:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_2.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_2.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_2.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_2.c ****     *
 484:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_2.c ****     {
 425              		.loc 1 486 0
 426              		.cfi_startproc
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 17


 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART_2.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_2.c **** 
 489:Generated_Source\PSoC5/UART_2.c ****         status = UART_2_RXSTATUS_REG & UART_2_RX_HW_MASK;
 437              		.loc 1 489 0
 438 0006 064B     		ldr	r3, .L26
 439 0008 1B78     		ldrb	r3, [r3]
 440 000a DBB2     		uxtb	r3, r3
 441 000c 03F07F03 		and	r3, r3, #127
 442 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART_2.c **** 
 491:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_2.c ****         {
 494:Generated_Source\PSoC5/UART_2.c ****             status |= UART_2_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_2.c ****         }
 497:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_2.c **** 
 499:Generated_Source\PSoC5/UART_2.c ****         return(status);
 443              		.loc 1 499 0
 444 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART_2.c ****     }
 445              		.loc 1 500 0
 446 0014 1846     		mov	r0, r3
 447 0016 0C37     		adds	r7, r7, #12
 448              		.cfi_def_cfa_offset 4
 449 0018 BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 001a 5DF8047B 		ldr	r7, [sp], #4
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 001e 7047     		bx	lr
 456              	.L27:
 457              		.align	2
 458              	.L26:
 459 0020 6A640040 		.word	1073767530
 460              		.cfi_endproc
 461              	.LFE8:
 462              		.size	UART_2_ReadRxStatus, .-UART_2_ReadRxStatus
 463              		.section	.text.UART_2_GetChar,"ax",%progbits
 464              		.align	2
 465              		.global	UART_2_GetChar
 466              		.thumb
 467              		.thumb_func
 468              		.type	UART_2_GetChar, %function
 469              	UART_2_GetChar:
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 18


 470              	.LFB9:
 501:Generated_Source\PSoC5/UART_2.c **** 
 502:Generated_Source\PSoC5/UART_2.c **** 
 503:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetChar
 505:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_2.c ****     *
 507:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_2.c ****     *  Returns the last received byte of data. UART_2_GetChar() is
 509:Generated_Source\PSoC5/UART_2.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_2.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_2.c ****     *
 512:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_2.c ****     *  None.
 514:Generated_Source\PSoC5/UART_2.c ****     *
 515:Generated_Source\PSoC5/UART_2.c ****     * Return:
 516:Generated_Source\PSoC5/UART_2.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_2.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_2.c ****     *
 519:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_2.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_2.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_2.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_2.c ****     *
 528:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_2.c ****     *  No.
 530:Generated_Source\PSoC5/UART_2.c ****     *
 531:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetChar(void) 
 533:Generated_Source\PSoC5/UART_2.c ****     {
 471              		.loc 1 533 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART_2.c ****         uint8 rxData = 0u;
 483              		.loc 1 534 0
 484 0006 0023     		movs	r3, #0
 485 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART_2.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_2.c **** 
 537:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_2.c **** 
 541:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 19


 542:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 543:Generated_Source\PSoC5/UART_2.c **** 
 544:Generated_Source\PSoC5/UART_2.c ****         locRxBufferRead  = UART_2_rxBufferRead;
 545:Generated_Source\PSoC5/UART_2.c ****         locRxBufferWrite = UART_2_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_2.c **** 
 547:Generated_Source\PSoC5/UART_2.c ****         if( (UART_2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_2.c ****         {
 549:Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_2.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_2.c ****             if(locRxBufferRead >= UART_2_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_2.c ****             {
 553:Generated_Source\PSoC5/UART_2.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_2.c ****             }
 555:Generated_Source\PSoC5/UART_2.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_2.c **** 
 558:Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_2.c ****             {
 560:Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_2.c ****                 #if( (UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_2.c ****                     #if( UART_2_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_2.c ****                         if((UART_2_CONTROL_REG & UART_2_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_2.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_2.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_2.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_2.c ****                             */
 569:Generated_Source\PSoC5/UART_2.c ****                             UART_2_RXSTATUS_MASK_REG |= UART_2_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_2.c ****                         }
 571:Generated_Source\PSoC5/UART_2.c ****                     #else
 572:Generated_Source\PSoC5/UART_2.c ****                         UART_2_RXSTATUS_MASK_REG |= UART_2_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_2.c ****                     #endif /* end UART_2_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_2.c ****                 #endif /* UART_2_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_2.c ****             }
 576:Generated_Source\PSoC5/UART_2.c **** 
 577:Generated_Source\PSoC5/UART_2.c ****         }
 578:Generated_Source\PSoC5/UART_2.c ****         else
 579:Generated_Source\PSoC5/UART_2.c ****         {   rxStatus = UART_2_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_2.c ****             if((rxStatus & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_2.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_2.c ****                 rxData = UART_2_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_2.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_2.c ****                 if((rxStatus & (UART_2_RX_STS_BREAK | UART_2_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_2.c ****                                 UART_2_RX_STS_STOP_ERROR | UART_2_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_2.c ****                 {
 587:Generated_Source\PSoC5/UART_2.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_2.c ****                 }
 589:Generated_Source\PSoC5/UART_2.c ****             }
 590:Generated_Source\PSoC5/UART_2.c ****         }
 591:Generated_Source\PSoC5/UART_2.c **** 
 592:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 593:Generated_Source\PSoC5/UART_2.c **** 
 594:Generated_Source\PSoC5/UART_2.c ****     #else
 595:Generated_Source\PSoC5/UART_2.c **** 
 596:Generated_Source\PSoC5/UART_2.c ****         rxStatus =UART_2_RXSTATUS_REG;
 486              		.loc 1 596 0
 487 000a 0C4B     		ldr	r3, .L31
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 20


 488 000c 1B78     		ldrb	r3, [r3]
 489 000e BB71     		strb	r3, [r7, #6]
 597:Generated_Source\PSoC5/UART_2.c ****         if((rxStatus & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 490              		.loc 1 597 0
 491 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 492 0012 03F02003 		and	r3, r3, #32
 493 0016 002B     		cmp	r3, #0
 494 0018 09D0     		beq	.L29
 598:Generated_Source\PSoC5/UART_2.c ****         {
 599:Generated_Source\PSoC5/UART_2.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_RXDATA_REG;
 495              		.loc 1 600 0
 496 001a 094B     		ldr	r3, .L31+4
 497 001c 1B78     		ldrb	r3, [r3]
 498 001e FB71     		strb	r3, [r7, #7]
 601:Generated_Source\PSoC5/UART_2.c **** 
 602:Generated_Source\PSoC5/UART_2.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_2.c ****             if((rxStatus & (UART_2_RX_STS_BREAK | UART_2_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_2.c ****                             UART_2_RX_STS_STOP_ERROR | UART_2_RX_STS_OVERRUN)) != 0u)
 499              		.loc 1 604 0
 500 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 501 0022 03F01E03 		and	r3, r3, #30
 603:Generated_Source\PSoC5/UART_2.c ****                             UART_2_RX_STS_STOP_ERROR | UART_2_RX_STS_OVERRUN)) != 0u)
 502              		.loc 1 603 0
 503 0026 002B     		cmp	r3, #0
 504 0028 01D0     		beq	.L29
 605:Generated_Source\PSoC5/UART_2.c ****             {
 606:Generated_Source\PSoC5/UART_2.c ****                 rxData = 0u;
 505              		.loc 1 606 0
 506 002a 0023     		movs	r3, #0
 507 002c FB71     		strb	r3, [r7, #7]
 508              	.L29:
 607:Generated_Source\PSoC5/UART_2.c ****             }
 608:Generated_Source\PSoC5/UART_2.c ****         }
 609:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_2.c **** 
 611:Generated_Source\PSoC5/UART_2.c ****         return(rxData);
 509              		.loc 1 611 0
 510 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART_2.c ****     }
 511              		.loc 1 612 0
 512 0030 1846     		mov	r0, r3
 513 0032 0C37     		adds	r7, r7, #12
 514              		.cfi_def_cfa_offset 4
 515 0034 BD46     		mov	sp, r7
 516              		.cfi_def_cfa_register 13
 517              		@ sp needed
 518 0036 5DF8047B 		ldr	r7, [sp], #4
 519              		.cfi_restore 7
 520              		.cfi_def_cfa_offset 0
 521 003a 7047     		bx	lr
 522              	.L32:
 523              		.align	2
 524              	.L31:
 525 003c 6A640040 		.word	1073767530
 526 0040 4A640040 		.word	1073767498
 527              		.cfi_endproc
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 21


 528              	.LFE9:
 529              		.size	UART_2_GetChar, .-UART_2_GetChar
 530              		.section	.text.UART_2_GetByte,"ax",%progbits
 531              		.align	2
 532              		.global	UART_2_GetByte
 533              		.thumb
 534              		.thumb_func
 535              		.type	UART_2_GetByte, %function
 536              	UART_2_GetByte:
 537              	.LFB10:
 613:Generated_Source\PSoC5/UART_2.c **** 
 614:Generated_Source\PSoC5/UART_2.c **** 
 615:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetByte
 617:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_2.c ****     *
 619:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_2.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_2.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_2.c ****     *
 623:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_2.c ****     *  None.
 625:Generated_Source\PSoC5/UART_2.c ****     *
 626:Generated_Source\PSoC5/UART_2.c ****     * Return:
 627:Generated_Source\PSoC5/UART_2.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_2.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_2.c ****     *
 630:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_2.c ****     *  No.
 632:Generated_Source\PSoC5/UART_2.c ****     *
 633:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_2.c ****     uint16 UART_2_GetByte(void) 
 635:Generated_Source\PSoC5/UART_2.c ****     {
 538              		.loc 1 635 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 98B5     		push	{r3, r4, r7, lr}
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 3, -16
 545              		.cfi_offset 4, -12
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART_2.c ****         
 637:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_2.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 641:Generated_Source\PSoC5/UART_2.c ****         locErrorStatus = (uint16)UART_2_errorStatus;
 642:Generated_Source\PSoC5/UART_2.c ****         UART_2_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 644:Generated_Source\PSoC5/UART_2.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_2_ReadRxData() );
 645:Generated_Source\PSoC5/UART_2.c ****     #else
 646:Generated_Source\PSoC5/UART_2.c ****         return ( ((uint16)UART_2_ReadRxStatus() << 8u) | UART_2_ReadRxData() );
 550              		.loc 1 646 0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 22


 551 0004 FFF7FEFF 		bl	UART_2_ReadRxStatus
 552 0008 0346     		mov	r3, r0
 553 000a 1B02     		lsls	r3, r3, #8
 554 000c 9CB2     		uxth	r4, r3
 555 000e FFF7FEFF 		bl	UART_2_ReadRxData
 556 0012 0346     		mov	r3, r0
 557 0014 9BB2     		uxth	r3, r3
 558 0016 2246     		mov	r2, r4	@ movhi
 559 0018 1343     		orrs	r3, r3, r2
 560 001a 9BB2     		uxth	r3, r3
 561 001c 9BB2     		uxth	r3, r3
 647:Generated_Source\PSoC5/UART_2.c ****     #endif /* UART_2_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_2.c ****         
 649:Generated_Source\PSoC5/UART_2.c ****     }
 562              		.loc 1 649 0
 563 001e 1846     		mov	r0, r3
 564 0020 98BD     		pop	{r3, r4, r7, pc}
 565              		.cfi_endproc
 566              	.LFE10:
 567              		.size	UART_2_GetByte, .-UART_2_GetByte
 568 0022 00BF     		.section	.text.UART_2_GetRxBufferSize,"ax",%progbits
 569              		.align	2
 570              		.global	UART_2_GetRxBufferSize
 571              		.thumb
 572              		.thumb_func
 573              		.type	UART_2_GetRxBufferSize, %function
 574              	UART_2_GetRxBufferSize:
 575              	.LFB11:
 650:Generated_Source\PSoC5/UART_2.c **** 
 651:Generated_Source\PSoC5/UART_2.c **** 
 652:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_2.c ****     *
 656:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_2.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_2.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_2.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_2.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_2.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_2.c ****     *    account.
 663:Generated_Source\PSoC5/UART_2.c ****     *
 664:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_2.c ****     *  None.
 666:Generated_Source\PSoC5/UART_2.c ****     *
 667:Generated_Source\PSoC5/UART_2.c ****     * Return:
 668:Generated_Source\PSoC5/UART_2.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_2.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_2.c ****     *
 671:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_2.c ****     *
 676:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_2.c ****     *  No.
 678:Generated_Source\PSoC5/UART_2.c ****     *
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 23


 679:Generated_Source\PSoC5/UART_2.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_2.c ****     *
 682:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_2.c ****                                                             
 685:Generated_Source\PSoC5/UART_2.c ****     {
 576              		.loc 1 685 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581 0000 80B4     		push	{r7}
 582              		.cfi_def_cfa_offset 4
 583              		.cfi_offset 7, -4
 584 0002 83B0     		sub	sp, sp, #12
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART_2.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_2.c **** 
 688:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_2.c **** 
 690:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 692:Generated_Source\PSoC5/UART_2.c **** 
 693:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_rxBufferRead == UART_2_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_2.c ****         {
 695:Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_2.c ****             {
 697:Generated_Source\PSoC5/UART_2.c ****                 size = UART_2_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_2.c ****             }
 699:Generated_Source\PSoC5/UART_2.c ****             else
 700:Generated_Source\PSoC5/UART_2.c ****             {
 701:Generated_Source\PSoC5/UART_2.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_2.c ****             }
 703:Generated_Source\PSoC5/UART_2.c ****         }
 704:Generated_Source\PSoC5/UART_2.c ****         else if(UART_2_rxBufferRead < UART_2_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_2.c ****         {
 706:Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_rxBufferWrite - UART_2_rxBufferRead);
 707:Generated_Source\PSoC5/UART_2.c ****         }
 708:Generated_Source\PSoC5/UART_2.c ****         else
 709:Generated_Source\PSoC5/UART_2.c ****         {
 710:Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_RX_BUFFER_SIZE - UART_2_rxBufferRead) + UART_2_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_2.c ****         }
 712:Generated_Source\PSoC5/UART_2.c **** 
 713:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 714:Generated_Source\PSoC5/UART_2.c **** 
 715:Generated_Source\PSoC5/UART_2.c ****     #else
 716:Generated_Source\PSoC5/UART_2.c **** 
 717:Generated_Source\PSoC5/UART_2.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_2.c ****         size = ((UART_2_RXSTATUS_REG & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 588              		.loc 1 718 0
 589 0006 094B     		ldr	r3, .L39
 590 0008 1B78     		ldrb	r3, [r3]
 591 000a DBB2     		uxtb	r3, r3
 592 000c 03F02003 		and	r3, r3, #32
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 24


 593 0010 002B     		cmp	r3, #0
 594 0012 01D0     		beq	.L36
 595              		.loc 1 718 0 is_stmt 0 discriminator 1
 596 0014 0123     		movs	r3, #1
 597 0016 00E0     		b	.L37
 598              	.L36:
 599              		.loc 1 718 0 discriminator 2
 600 0018 0023     		movs	r3, #0
 601              	.L37:
 602              		.loc 1 718 0 discriminator 4
 603 001a FB71     		strb	r3, [r7, #7]
 719:Generated_Source\PSoC5/UART_2.c **** 
 720:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_2.c **** 
 722:Generated_Source\PSoC5/UART_2.c ****         return(size);
 604              		.loc 1 722 0 is_stmt 1 discriminator 4
 605 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART_2.c ****     }
 606              		.loc 1 723 0 discriminator 4
 607 001e 1846     		mov	r0, r3
 608 0020 0C37     		adds	r7, r7, #12
 609              		.cfi_def_cfa_offset 4
 610 0022 BD46     		mov	sp, r7
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 0024 5DF8047B 		ldr	r7, [sp], #4
 614              		.cfi_restore 7
 615              		.cfi_def_cfa_offset 0
 616 0028 7047     		bx	lr
 617              	.L40:
 618 002a 00BF     		.align	2
 619              	.L39:
 620 002c 6A640040 		.word	1073767530
 621              		.cfi_endproc
 622              	.LFE11:
 623              		.size	UART_2_GetRxBufferSize, .-UART_2_GetRxBufferSize
 624              		.section	.text.UART_2_ClearRxBuffer,"ax",%progbits
 625              		.align	2
 626              		.global	UART_2_ClearRxBuffer
 627              		.thumb
 628              		.thumb_func
 629              		.type	UART_2_ClearRxBuffer, %function
 630              	UART_2_ClearRxBuffer:
 631              	.LFB12:
 724:Generated_Source\PSoC5/UART_2.c **** 
 725:Generated_Source\PSoC5/UART_2.c **** 
 726:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_2.c ****     *
 730:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_2.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_2.c ****     *
 733:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_2.c ****     *  None.
 735:Generated_Source\PSoC5/UART_2.c ****     *
 736:Generated_Source\PSoC5/UART_2.c ****     * Return:
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 25


 737:Generated_Source\PSoC5/UART_2.c ****     *  None.
 738:Generated_Source\PSoC5/UART_2.c ****     *
 739:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_2.c ****     *
 745:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_2.c ****     *  No.
 747:Generated_Source\PSoC5/UART_2.c ****     *
 748:Generated_Source\PSoC5/UART_2.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_2.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_2.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_2.c ****     *
 753:Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_2.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_2.c ****     *
 756:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_2.c ****     void UART_2_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_2.c ****     {
 632              		.loc 1 758 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 8
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 82B0     		sub	sp, sp, #8
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART_2.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_2.c **** 
 761:Generated_Source\PSoC5/UART_2.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_2.c ****         enableInterrupts = CyEnterCriticalSection();
 644              		.loc 1 762 0
 645 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 646 000a 0346     		mov	r3, r0
 647 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXDATA_AUX_CTL_REG |= (uint8)  UART_2_RX_FIFO_CLR;
 648              		.loc 1 763 0
 649 000e 0B4A     		ldr	r2, .L42
 650 0010 0A4B     		ldr	r3, .L42
 651 0012 1B78     		ldrb	r3, [r3]
 652 0014 DBB2     		uxtb	r3, r3
 653 0016 43F00103 		orr	r3, r3, #1
 654 001a DBB2     		uxtb	r3, r3
 655 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXDATA_AUX_CTL_REG &= (uint8) ~UART_2_RX_FIFO_CLR;
 656              		.loc 1 764 0
 657 001e 074A     		ldr	r2, .L42
 658 0020 064B     		ldr	r3, .L42
 659 0022 1B78     		ldrb	r3, [r3]
 660 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 26


 661 0026 23F00103 		bic	r3, r3, #1
 662 002a DBB2     		uxtb	r3, r3
 663 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART_2.c ****         CyExitCriticalSection(enableInterrupts);
 664              		.loc 1 765 0
 665 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 666 0030 1846     		mov	r0, r3
 667 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART_2.c **** 
 767:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_2.c **** 
 769:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 771:Generated_Source\PSoC5/UART_2.c **** 
 772:Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_2.c **** 
 777:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 778:Generated_Source\PSoC5/UART_2.c **** 
 779:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_2.c **** 
 781:Generated_Source\PSoC5/UART_2.c ****     }
 668              		.loc 1 781 0
 669 0036 0837     		adds	r7, r7, #8
 670              		.cfi_def_cfa_offset 8
 671 0038 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 003a 80BD     		pop	{r7, pc}
 675              	.L43:
 676              		.align	2
 677              	.L42:
 678 003c 9A640040 		.word	1073767578
 679              		.cfi_endproc
 680              	.LFE12:
 681              		.size	UART_2_ClearRxBuffer, .-UART_2_ClearRxBuffer
 682              		.section	.text.UART_2_SetRxAddressMode,"ax",%progbits
 683              		.align	2
 684              		.global	UART_2_SetRxAddressMode
 685              		.thumb
 686              		.thumb_func
 687              		.type	UART_2_SetRxAddressMode, %function
 688              	UART_2_SetRxAddressMode:
 689              	.LFB13:
 782:Generated_Source\PSoC5/UART_2.c **** 
 783:Generated_Source\PSoC5/UART_2.c **** 
 784:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_2.c ****     *
 788:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_2.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_2.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_2.c ****     *
 792:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 27


 793:Generated_Source\PSoC5/UART_2.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_2.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_2.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_2.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_2.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_2.c ****     *
 804:Generated_Source\PSoC5/UART_2.c ****     * Return:
 805:Generated_Source\PSoC5/UART_2.c ****     *  None.
 806:Generated_Source\PSoC5/UART_2.c ****     *
 807:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_2.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_2.c ****     *
 812:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_2.c ****                                                         
 815:Generated_Source\PSoC5/UART_2.c ****     {
 690              		.loc 1 815 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 0000 80B4     		push	{r7}
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 7, -4
 698 0002 83B0     		sub	sp, sp, #12
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 702 0006 0346     		mov	r3, r0
 703 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART_2.c ****         #if(UART_2_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_2.c ****             #if(UART_2_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_2.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_2.c ****                 {
 820:Generated_Source\PSoC5/UART_2.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_2.c ****                 }
 822:Generated_Source\PSoC5/UART_2.c ****             #else /* UART_2_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_2.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_2.c ****                 tmpCtrl = UART_2_CONTROL_REG & (uint8)~UART_2_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_2.c ****                 tmpCtrl |= (uint8)(addressMode << UART_2_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_2.c ****                 UART_2_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_2.c **** 
 828:Generated_Source\PSoC5/UART_2.c ****                 #if(UART_2_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_2.c ****                    (UART_2_RXBUFFERSIZE > UART_2_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_2.c ****                     UART_2_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_2.c ****                     UART_2_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_RXBUFFERSIZE > UART_2_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_2.c ****         #else /* UART_2_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_2.c ****             if(0u != addressMode)
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 28


 836:Generated_Source\PSoC5/UART_2.c ****             {
 837:Generated_Source\PSoC5/UART_2.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_2.c ****             }
 839:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_2.c ****     }
 704              		.loc 1 840 0
 705 000a 0C37     		adds	r7, r7, #12
 706              		.cfi_def_cfa_offset 4
 707 000c BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 000e 5DF8047B 		ldr	r7, [sp], #4
 711              		.cfi_restore 7
 712              		.cfi_def_cfa_offset 0
 713 0012 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE13:
 716              		.size	UART_2_SetRxAddressMode, .-UART_2_SetRxAddressMode
 717              		.section	.text.UART_2_SetRxAddress1,"ax",%progbits
 718              		.align	2
 719              		.global	UART_2_SetRxAddress1
 720              		.thumb
 721              		.thumb_func
 722              		.type	UART_2_SetRxAddress1, %function
 723              	UART_2_SetRxAddress1:
 724              	.LFB14:
 841:Generated_Source\PSoC5/UART_2.c **** 
 842:Generated_Source\PSoC5/UART_2.c **** 
 843:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddress1
 845:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_2.c ****     *
 847:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_2.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_2.c ****     *
 850:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_2.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_2.c ****     *
 853:Generated_Source\PSoC5/UART_2.c ****     * Return:
 854:Generated_Source\PSoC5/UART_2.c ****     *  None.
 855:Generated_Source\PSoC5/UART_2.c ****     *
 856:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_2.c ****     {
 725              		.loc 1 858 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              		.cfi_def_cfa_offset 4
 732              		.cfi_offset 7, -4
 733 0002 83B0     		sub	sp, sp, #12
 734              		.cfi_def_cfa_offset 16
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 0346     		mov	r3, r0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 29


 738 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXADDRESS1_REG = address;
 739              		.loc 1 859 0
 740 000a 044A     		ldr	r2, .L46
 741 000c FB79     		ldrb	r3, [r7, #7]
 742 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART_2.c ****     }
 743              		.loc 1 860 0
 744 0010 0C37     		adds	r7, r7, #12
 745              		.cfi_def_cfa_offset 4
 746 0012 BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 0014 5DF8047B 		ldr	r7, [sp], #4
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 0018 7047     		bx	lr
 753              	.L47:
 754 001a 00BF     		.align	2
 755              	.L46:
 756 001c 2A640040 		.word	1073767466
 757              		.cfi_endproc
 758              	.LFE14:
 759              		.size	UART_2_SetRxAddress1, .-UART_2_SetRxAddress1
 760              		.section	.text.UART_2_SetRxAddress2,"ax",%progbits
 761              		.align	2
 762              		.global	UART_2_SetRxAddress2
 763              		.thumb
 764              		.thumb_func
 765              		.type	UART_2_SetRxAddress2, %function
 766              	UART_2_SetRxAddress2:
 767              	.LFB15:
 861:Generated_Source\PSoC5/UART_2.c **** 
 862:Generated_Source\PSoC5/UART_2.c **** 
 863:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddress2
 865:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_2.c ****     *
 867:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_2.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_2.c ****     *
 870:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_2.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_2.c ****     *
 873:Generated_Source\PSoC5/UART_2.c ****     * Return:
 874:Generated_Source\PSoC5/UART_2.c ****     *  None.
 875:Generated_Source\PSoC5/UART_2.c ****     *
 876:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_2.c ****     {
 768              		.loc 1 878 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773 0000 80B4     		push	{r7}
 774              		.cfi_def_cfa_offset 4
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 30


 775              		.cfi_offset 7, -4
 776 0002 83B0     		sub	sp, sp, #12
 777              		.cfi_def_cfa_offset 16
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 780 0006 0346     		mov	r3, r0
 781 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART_2.c ****         UART_2_RXADDRESS2_REG = address;
 782              		.loc 1 879 0
 783 000a 044A     		ldr	r2, .L49
 784 000c FB79     		ldrb	r3, [r7, #7]
 785 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART_2.c ****     }
 786              		.loc 1 880 0
 787 0010 0C37     		adds	r7, r7, #12
 788              		.cfi_def_cfa_offset 4
 789 0012 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 0014 5DF8047B 		ldr	r7, [sp], #4
 793              		.cfi_restore 7
 794              		.cfi_def_cfa_offset 0
 795 0018 7047     		bx	lr
 796              	.L50:
 797 001a 00BF     		.align	2
 798              	.L49:
 799 001c 3A640040 		.word	1073767482
 800              		.cfi_endproc
 801              	.LFE15:
 802              		.size	UART_2_SetRxAddress2, .-UART_2_SetRxAddress2
 803              		.section	.text.UART_2_SetTxInterruptMode,"ax",%progbits
 804              		.align	2
 805              		.global	UART_2_SetTxInterruptMode
 806              		.thumb
 807              		.thumb_func
 808              		.type	UART_2_SetTxInterruptMode, %function
 809              	UART_2_SetTxInterruptMode:
 810              	.LFB16:
 881:Generated_Source\PSoC5/UART_2.c **** 
 882:Generated_Source\PSoC5/UART_2.c **** #endif  /* UART_2_RX_ENABLED || UART_2_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_2.c **** 
 884:Generated_Source\PSoC5/UART_2.c **** 
 885:Generated_Source\PSoC5/UART_2.c **** #if( (UART_2_TX_ENABLED) || (UART_2_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_2.c ****     *
 890:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_2.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_2.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_2.c ****     *
 894:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_2.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 31


 900:Generated_Source\PSoC5/UART_2.c ****     *
 901:Generated_Source\PSoC5/UART_2.c ****     * Return:
 902:Generated_Source\PSoC5/UART_2.c ****     *  None.
 903:Generated_Source\PSoC5/UART_2.c ****     *
 904:Generated_Source\PSoC5/UART_2.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_2.c ****     *
 907:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_2.c ****     {
 811              		.loc 1 909 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 823 0006 0346     		mov	r3, r0
 824 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_MASK_REG = intSrc;
 825              		.loc 1 910 0
 826 000a 044A     		ldr	r2, .L52
 827 000c FB79     		ldrb	r3, [r7, #7]
 828 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_2.c ****     }
 829              		.loc 1 911 0
 830 0010 0C37     		adds	r7, r7, #12
 831              		.cfi_def_cfa_offset 4
 832 0012 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 0014 5DF8047B 		ldr	r7, [sp], #4
 836              		.cfi_restore 7
 837              		.cfi_def_cfa_offset 0
 838 0018 7047     		bx	lr
 839              	.L53:
 840 001a 00BF     		.align	2
 841              	.L52:
 842 001c 85650040 		.word	1073767813
 843              		.cfi_endproc
 844              	.LFE16:
 845              		.size	UART_2_SetTxInterruptMode, .-UART_2_SetTxInterruptMode
 846              		.section	.text.UART_2_WriteTxData,"ax",%progbits
 847              		.align	2
 848              		.global	UART_2_WriteTxData
 849              		.thumb
 850              		.thumb_func
 851              		.type	UART_2_WriteTxData, %function
 852              	UART_2_WriteTxData:
 853              	.LFB17:
 912:Generated_Source\PSoC5/UART_2.c **** 
 913:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 32


 914:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_WriteTxData
 916:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_2.c ****     *
 918:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_2.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_2.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_2.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_2.c ****     *
 923:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_2.c ****     *
 926:Generated_Source\PSoC5/UART_2.c ****     * Return:
 927:Generated_Source\PSoC5/UART_2.c ****     * None.
 928:Generated_Source\PSoC5/UART_2.c ****     *
 929:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_2.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_2.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_2.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_2.c ****     *
 938:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_2.c ****     *  No.
 940:Generated_Source\PSoC5/UART_2.c ****     *
 941:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_2.c ****     void UART_2_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_2.c ****     {
 854              		.loc 1 943 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0002 83B0     		sub	sp, sp, #12
 863              		.cfi_def_cfa_offset 16
 864 0004 00AF     		add	r7, sp, #0
 865              		.cfi_def_cfa_register 7
 866 0006 0346     		mov	r3, r0
 867 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 868              		.loc 1 945 0
 869 000a 064B     		ldr	r3, .L56
 870 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 871 000e 002B     		cmp	r3, #0
 872 0010 02D0     		beq	.L54
 946:Generated_Source\PSoC5/UART_2.c ****         {
 947:Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_2.c **** 
 949:Generated_Source\PSoC5/UART_2.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
 951:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 33


 952:Generated_Source\PSoC5/UART_2.c ****             if( (UART_2_txBufferRead == UART_2_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_2.c ****                 ((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_2.c ****             {
 955:Generated_Source\PSoC5/UART_2.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_2.c ****             }
 958:Generated_Source\PSoC5/UART_2.c ****             else
 959:Generated_Source\PSoC5/UART_2.c ****             {
 960:Generated_Source\PSoC5/UART_2.c ****                 if(UART_2_txBufferWrite >= UART_2_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_2.c ****                 {
 962:Generated_Source\PSoC5/UART_2.c ****                     UART_2_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_2.c ****                 }
 964:Generated_Source\PSoC5/UART_2.c **** 
 965:Generated_Source\PSoC5/UART_2.c ****                 UART_2_txBuffer[UART_2_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_2.c **** 
 967:Generated_Source\PSoC5/UART_2.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_2.c ****                 UART_2_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_2.c ****             }
 970:Generated_Source\PSoC5/UART_2.c **** 
 971:Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
 972:Generated_Source\PSoC5/UART_2.c **** 
 973:Generated_Source\PSoC5/UART_2.c ****         #else
 974:Generated_Source\PSoC5/UART_2.c **** 
 975:Generated_Source\PSoC5/UART_2.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXDATA_REG = txDataByte;
 873              		.loc 1 976 0
 874 0012 054A     		ldr	r2, .L56+4
 875 0014 FB79     		ldrb	r3, [r7, #7]
 876 0016 1370     		strb	r3, [r2]
 877              	.L54:
 977:Generated_Source\PSoC5/UART_2.c **** 
 978:Generated_Source\PSoC5/UART_2.c ****         #endif /*(UART_2_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_2.c ****         }
 980:Generated_Source\PSoC5/UART_2.c ****     }
 878              		.loc 1 980 0
 879 0018 0C37     		adds	r7, r7, #12
 880              		.cfi_def_cfa_offset 4
 881 001a BD46     		mov	sp, r7
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed
 884 001c 5DF8047B 		ldr	r7, [sp], #4
 885              		.cfi_restore 7
 886              		.cfi_def_cfa_offset 0
 887 0020 7047     		bx	lr
 888              	.L57:
 889 0022 00BF     		.align	2
 890              	.L56:
 891 0024 00000000 		.word	UART_2_initVar
 892 0028 44650040 		.word	1073767748
 893              		.cfi_endproc
 894              	.LFE17:
 895              		.size	UART_2_WriteTxData, .-UART_2_WriteTxData
 896              		.section	.text.UART_2_ReadTxStatus,"ax",%progbits
 897              		.align	2
 898              		.global	UART_2_ReadTxStatus
 899              		.thumb
 900              		.thumb_func
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 34


 901              		.type	UART_2_ReadTxStatus, %function
 902              	UART_2_ReadTxStatus:
 903              	.LFB18:
 981:Generated_Source\PSoC5/UART_2.c **** 
 982:Generated_Source\PSoC5/UART_2.c **** 
 983:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadTxStatus
 985:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_2.c ****     *
 987:Generated_Source\PSoC5/UART_2.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_2.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_2.c ****     *
 990:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_2.c ****     *  None.
 992:Generated_Source\PSoC5/UART_2.c ****     *
 993:Generated_Source\PSoC5/UART_2.c ****     * Return:
 994:Generated_Source\PSoC5/UART_2.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_2.c ****     *
 996:Generated_Source\PSoC5/UART_2.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_2.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_2.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_2.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_2.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_2.c ****     *
1002:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_2.c ****     {
 904              		.loc 1 1004 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 0000 80B4     		push	{r7}
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 7, -4
 912 0002 00AF     		add	r7, sp, #0
 913              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_2.c ****         return(UART_2_TXSTATUS_REG);
 914              		.loc 1 1005 0
 915 0004 034B     		ldr	r3, .L60
 916 0006 1B78     		ldrb	r3, [r3]
 917 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_2.c ****     }
 918              		.loc 1 1006 0
 919 000a 1846     		mov	r0, r3
 920 000c BD46     		mov	sp, r7
 921              		.cfi_def_cfa_register 13
 922              		@ sp needed
 923 000e 5DF8047B 		ldr	r7, [sp], #4
 924              		.cfi_restore 7
 925              		.cfi_def_cfa_offset 0
 926 0012 7047     		bx	lr
 927              	.L61:
 928              		.align	2
 929              	.L60:
 930 0014 65650040 		.word	1073767781
 931              		.cfi_endproc
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 35


 932              	.LFE18:
 933              		.size	UART_2_ReadTxStatus, .-UART_2_ReadTxStatus
 934              		.section	.text.UART_2_PutChar,"ax",%progbits
 935              		.align	2
 936              		.global	UART_2_PutChar
 937              		.thumb
 938              		.thumb_func
 939              		.type	UART_2_PutChar, %function
 940              	UART_2_PutChar:
 941              	.LFB19:
1007:Generated_Source\PSoC5/UART_2.c **** 
1008:Generated_Source\PSoC5/UART_2.c **** 
1009:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutChar
1011:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_2.c ****     *
1013:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_2.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_2.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_2.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_2.c ****     *
1018:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_2.c ****     *
1021:Generated_Source\PSoC5/UART_2.c ****     * Return:
1022:Generated_Source\PSoC5/UART_2.c ****     *  None.
1023:Generated_Source\PSoC5/UART_2.c ****     *
1024:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_2.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_2.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_2.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_2.c ****     *
1034:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_2.c ****     *  No.
1036:Generated_Source\PSoC5/UART_2.c ****     *
1037:Generated_Source\PSoC5/UART_2.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_2.c ****     *
1040:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_2.c ****     {
 942              		.loc 1 1042 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947 0000 80B4     		push	{r7}
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 0002 83B0     		sub	sp, sp, #12
 951              		.cfi_def_cfa_offset 16
 952 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 36


 953              		.cfi_def_cfa_register 7
 954 0006 0346     		mov	r3, r0
 955 0008 FB71     		strb	r3, [r7, #7]
1043:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_2.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_2.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_2.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_2.c ****         */
1048:Generated_Source\PSoC5/UART_2.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_2.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_2.c **** 
1051:Generated_Source\PSoC5/UART_2.c ****         do
1052:Generated_Source\PSoC5/UART_2.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_2.c **** 
1054:Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_2.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
1057:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_2.c **** 
1059:Generated_Source\PSoC5/UART_2.c ****             locTxBufferWrite = UART_2_txBufferWrite;
1060:Generated_Source\PSoC5/UART_2.c ****             locTxBufferRead  = UART_2_txBufferRead;
1061:Generated_Source\PSoC5/UART_2.c **** 
1062:Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_2.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
1065:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_2.c ****         }
1067:Generated_Source\PSoC5/UART_2.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_2.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_2.c ****                                 (uint8)(UART_2_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_2.c **** 
1071:Generated_Source\PSoC5/UART_2.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_2.c ****             ((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_2.c ****         {
1074:Generated_Source\PSoC5/UART_2.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_2.c ****             UART_2_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_2.c ****         }
1077:Generated_Source\PSoC5/UART_2.c ****         else
1078:Generated_Source\PSoC5/UART_2.c ****         {
1079:Generated_Source\PSoC5/UART_2.c ****             if(locTxBufferWrite >= UART_2_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_2.c ****             {
1081:Generated_Source\PSoC5/UART_2.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_2.c ****             }
1083:Generated_Source\PSoC5/UART_2.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_2.c ****             UART_2_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_2.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_2.c **** 
1087:Generated_Source\PSoC5/UART_2.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
1090:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_2.c **** 
1092:Generated_Source\PSoC5/UART_2.c ****             UART_2_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_2.c **** 
1094:Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
1096:Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 37


1097:Generated_Source\PSoC5/UART_2.c **** 
1098:Generated_Source\PSoC5/UART_2.c ****             if(0u != (UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_2.c ****             {
1100:Generated_Source\PSoC5/UART_2.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_2.c ****                 UART_2_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_2.c ****             }
1103:Generated_Source\PSoC5/UART_2.c ****         }
1104:Generated_Source\PSoC5/UART_2.c **** 
1105:Generated_Source\PSoC5/UART_2.c ****     #else
1106:Generated_Source\PSoC5/UART_2.c **** 
1107:Generated_Source\PSoC5/UART_2.c ****         while((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) != 0u)
 956              		.loc 1 1107 0
 957 000a 00BF     		nop
 958              	.L63:
 959              		.loc 1 1107 0 is_stmt 0 discriminator 1
 960 000c 074B     		ldr	r3, .L64
 961 000e 1B78     		ldrb	r3, [r3]
 962 0010 DBB2     		uxtb	r3, r3
 963 0012 03F00403 		and	r3, r3, #4
 964 0016 002B     		cmp	r3, #0
 965 0018 F8D1     		bne	.L63
1108:Generated_Source\PSoC5/UART_2.c ****         {
1109:Generated_Source\PSoC5/UART_2.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_2.c ****         }
1111:Generated_Source\PSoC5/UART_2.c **** 
1112:Generated_Source\PSoC5/UART_2.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_REG = txDataByte;
 966              		.loc 1 1113 0 is_stmt 1
 967 001a 054A     		ldr	r2, .L64+4
 968 001c FB79     		ldrb	r3, [r7, #7]
 969 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/UART_2.c **** 
1115:Generated_Source\PSoC5/UART_2.c ****     #endif /* UART_2_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_2.c ****     }
 970              		.loc 1 1116 0
 971 0020 0C37     		adds	r7, r7, #12
 972              		.cfi_def_cfa_offset 4
 973 0022 BD46     		mov	sp, r7
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0024 5DF8047B 		ldr	r7, [sp], #4
 977              		.cfi_restore 7
 978              		.cfi_def_cfa_offset 0
 979 0028 7047     		bx	lr
 980              	.L65:
 981 002a 00BF     		.align	2
 982              	.L64:
 983 002c 65650040 		.word	1073767781
 984 0030 44650040 		.word	1073767748
 985              		.cfi_endproc
 986              	.LFE19:
 987              		.size	UART_2_PutChar, .-UART_2_PutChar
 988              		.section	.text.UART_2_PutString,"ax",%progbits
 989              		.align	2
 990              		.global	UART_2_PutString
 991              		.thumb
 992              		.thumb_func
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 38


 993              		.type	UART_2_PutString, %function
 994              	UART_2_PutString:
 995              	.LFB20:
1117:Generated_Source\PSoC5/UART_2.c **** 
1118:Generated_Source\PSoC5/UART_2.c **** 
1119:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutString
1121:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_2.c ****     *
1123:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_2.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_2.c ****     *
1126:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_2.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_2.c ****     *
1129:Generated_Source\PSoC5/UART_2.c ****     * Return:
1130:Generated_Source\PSoC5/UART_2.c ****     *  None.
1131:Generated_Source\PSoC5/UART_2.c ****     *
1132:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_2.c ****     *
1136:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_2.c ****     *  No.
1138:Generated_Source\PSoC5/UART_2.c ****     *
1139:Generated_Source\PSoC5/UART_2.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_2.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_2.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_2.c ****     *
1144:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_2.c ****     {
 996              		.loc 1 1146 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 16
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 84B0     		sub	sp, sp, #16
 1005              		.cfi_def_cfa_offset 24
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_2.c ****         uint16 bufIndex = 0u;
 1009              		.loc 1 1147 0
 1010 0008 0023     		movs	r3, #0
 1011 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_2.c **** 
1149:Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 1012              		.loc 1 1150 0
 1013 000c 0B4B     		ldr	r3, .L70
 1014 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 0010 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 39


 1016 0012 10D0     		beq	.L66
1151:Generated_Source\PSoC5/UART_2.c ****         {
1152:Generated_Source\PSoC5/UART_2.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_2.c ****             while(string[bufIndex] != (char8) 0)
 1017              		.loc 1 1153 0
 1018 0014 09E0     		b	.L68
 1019              	.L69:
1154:Generated_Source\PSoC5/UART_2.c ****             {
1155:Generated_Source\PSoC5/UART_2.c ****                 UART_2_PutChar((uint8)string[bufIndex]);
 1020              		.loc 1 1155 0
 1021 0016 FB89     		ldrh	r3, [r7, #14]
 1022 0018 7A68     		ldr	r2, [r7, #4]
 1023 001a 1344     		add	r3, r3, r2
 1024 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 001e 1846     		mov	r0, r3
 1026 0020 FFF7FEFF 		bl	UART_2_PutChar
1156:Generated_Source\PSoC5/UART_2.c ****                 bufIndex++;
 1027              		.loc 1 1156 0
 1028 0024 FB89     		ldrh	r3, [r7, #14]
 1029 0026 0133     		adds	r3, r3, #1
 1030 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1031              	.L68:
1153:Generated_Source\PSoC5/UART_2.c ****             {
 1032              		.loc 1 1153 0
 1033 002a FB89     		ldrh	r3, [r7, #14]
 1034 002c 7A68     		ldr	r2, [r7, #4]
 1035 002e 1344     		add	r3, r3, r2
 1036 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 0032 002B     		cmp	r3, #0
 1038 0034 EFD1     		bne	.L69
 1039              	.L66:
1157:Generated_Source\PSoC5/UART_2.c ****             }
1158:Generated_Source\PSoC5/UART_2.c ****         }
1159:Generated_Source\PSoC5/UART_2.c ****     }
 1040              		.loc 1 1159 0
 1041 0036 1037     		adds	r7, r7, #16
 1042              		.cfi_def_cfa_offset 8
 1043 0038 BD46     		mov	sp, r7
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 003a 80BD     		pop	{r7, pc}
 1047              	.L71:
 1048              		.align	2
 1049              	.L70:
 1050 003c 00000000 		.word	UART_2_initVar
 1051              		.cfi_endproc
 1052              	.LFE20:
 1053              		.size	UART_2_PutString, .-UART_2_PutString
 1054              		.section	.text.UART_2_PutArray,"ax",%progbits
 1055              		.align	2
 1056              		.global	UART_2_PutArray
 1057              		.thumb
 1058              		.thumb_func
 1059              		.type	UART_2_PutArray, %function
 1060              	UART_2_PutArray:
 1061              	.LFB21:
1160:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 40


1161:Generated_Source\PSoC5/UART_2.c **** 
1162:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutArray
1164:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_2.c ****     *
1166:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_2.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_2.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_2.c ****     *
1170:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_2.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_2.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_2.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_2.c ****     *
1175:Generated_Source\PSoC5/UART_2.c ****     * Return:
1176:Generated_Source\PSoC5/UART_2.c ****     *  None.
1177:Generated_Source\PSoC5/UART_2.c ****     *
1178:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_2.c ****     *
1182:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_2.c ****     *  No.
1184:Generated_Source\PSoC5/UART_2.c ****     *
1185:Generated_Source\PSoC5/UART_2.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_2.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_2.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_2.c ****     *
1190:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_2.c ****                                                                     
1193:Generated_Source\PSoC5/UART_2.c ****     {
 1062              		.loc 1 1193 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 16
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066 0000 80B5     		push	{r7, lr}
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 84B0     		sub	sp, sp, #16
 1071              		.cfi_def_cfa_offset 24
 1072 0004 00AF     		add	r7, sp, #0
 1073              		.cfi_def_cfa_register 7
 1074 0006 7860     		str	r0, [r7, #4]
 1075 0008 0B46     		mov	r3, r1
 1076 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART_2.c ****         uint8 bufIndex = 0u;
 1077              		.loc 1 1194 0
 1078 000c 0023     		movs	r3, #0
 1079 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART_2.c **** 
1196:Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 1080              		.loc 1 1197 0
 1081 0010 0A4B     		ldr	r3, .L76
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 41


 1082 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0014 002B     		cmp	r3, #0
 1084 0016 0ED0     		beq	.L72
1198:Generated_Source\PSoC5/UART_2.c ****         {
1199:Generated_Source\PSoC5/UART_2.c ****             while(bufIndex < byteCount)
 1085              		.loc 1 1199 0
 1086 0018 09E0     		b	.L74
 1087              	.L75:
1200:Generated_Source\PSoC5/UART_2.c ****             {
1201:Generated_Source\PSoC5/UART_2.c ****                 UART_2_PutChar(string[bufIndex]);
 1088              		.loc 1 1201 0
 1089 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1090 001c 7A68     		ldr	r2, [r7, #4]
 1091 001e 1344     		add	r3, r3, r2
 1092 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 0022 1846     		mov	r0, r3
 1094 0024 FFF7FEFF 		bl	UART_2_PutChar
1202:Generated_Source\PSoC5/UART_2.c ****                 bufIndex++;
 1095              		.loc 1 1202 0
 1096 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1097 002a 0133     		adds	r3, r3, #1
 1098 002c FB73     		strb	r3, [r7, #15]
 1099              	.L74:
1199:Generated_Source\PSoC5/UART_2.c ****             {
 1100              		.loc 1 1199 0
 1101 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1102 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1103 0032 9A42     		cmp	r2, r3
 1104 0034 F1D3     		bcc	.L75
 1105              	.L72:
1203:Generated_Source\PSoC5/UART_2.c ****             }
1204:Generated_Source\PSoC5/UART_2.c ****         }
1205:Generated_Source\PSoC5/UART_2.c ****     }
 1106              		.loc 1 1205 0
 1107 0036 1037     		adds	r7, r7, #16
 1108              		.cfi_def_cfa_offset 8
 1109 0038 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 003a 80BD     		pop	{r7, pc}
 1113              	.L77:
 1114              		.align	2
 1115              	.L76:
 1116 003c 00000000 		.word	UART_2_initVar
 1117              		.cfi_endproc
 1118              	.LFE21:
 1119              		.size	UART_2_PutArray, .-UART_2_PutArray
 1120              		.section	.text.UART_2_PutCRLF,"ax",%progbits
 1121              		.align	2
 1122              		.global	UART_2_PutCRLF
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	UART_2_PutCRLF, %function
 1126              	UART_2_PutCRLF:
 1127              	.LFB22:
1206:Generated_Source\PSoC5/UART_2.c **** 
1207:Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 42


1208:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutCRLF
1210:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_2.c ****     *
1212:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_2.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_2.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_2.c ****     *
1216:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_2.c ****     *
1219:Generated_Source\PSoC5/UART_2.c ****     * Return:
1220:Generated_Source\PSoC5/UART_2.c ****     *  None.
1221:Generated_Source\PSoC5/UART_2.c ****     *
1222:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_2.c ****     *
1226:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_2.c ****     *  No.
1228:Generated_Source\PSoC5/UART_2.c ****     *
1229:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_2.c ****     {
 1128              		.loc 1 1231 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 8
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 80B5     		push	{r7, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 7, -8
 1135              		.cfi_offset 14, -4
 1136 0002 82B0     		sub	sp, sp, #8
 1137              		.cfi_def_cfa_offset 16
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 0006 0346     		mov	r3, r0
 1141 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 1142              		.loc 1 1233 0
 1143 000a 084B     		ldr	r3, .L80
 1144 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1145 000e 002B     		cmp	r3, #0
 1146 0010 09D0     		beq	.L78
1234:Generated_Source\PSoC5/UART_2.c ****         {
1235:Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(txDataByte);
 1147              		.loc 1 1235 0
 1148 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1149 0014 1846     		mov	r0, r3
 1150 0016 FFF7FEFF 		bl	UART_2_PutChar
1236:Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(0x0Du);
 1151              		.loc 1 1236 0
 1152 001a 0D20     		movs	r0, #13
 1153 001c FFF7FEFF 		bl	UART_2_PutChar
1237:Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(0x0Au);
 1154              		.loc 1 1237 0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 43


 1155 0020 0A20     		movs	r0, #10
 1156 0022 FFF7FEFF 		bl	UART_2_PutChar
 1157              	.L78:
1238:Generated_Source\PSoC5/UART_2.c ****         }
1239:Generated_Source\PSoC5/UART_2.c ****     }
 1158              		.loc 1 1239 0
 1159 0026 0837     		adds	r7, r7, #8
 1160              		.cfi_def_cfa_offset 8
 1161 0028 BD46     		mov	sp, r7
 1162              		.cfi_def_cfa_register 13
 1163              		@ sp needed
 1164 002a 80BD     		pop	{r7, pc}
 1165              	.L81:
 1166              		.align	2
 1167              	.L80:
 1168 002c 00000000 		.word	UART_2_initVar
 1169              		.cfi_endproc
 1170              	.LFE22:
 1171              		.size	UART_2_PutCRLF, .-UART_2_PutCRLF
 1172              		.section	.text.UART_2_GetTxBufferSize,"ax",%progbits
 1173              		.align	2
 1174              		.global	UART_2_GetTxBufferSize
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	UART_2_GetTxBufferSize, %function
 1178              	UART_2_GetTxBufferSize:
 1179              	.LFB23:
1240:Generated_Source\PSoC5/UART_2.c **** 
1241:Generated_Source\PSoC5/UART_2.c **** 
1242:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_2.c ****     *
1246:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_2.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_2.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_2.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_2.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_2.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_2.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_2.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_2.c ****     *
1255:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_2.c ****     *  None.
1257:Generated_Source\PSoC5/UART_2.c ****     *
1258:Generated_Source\PSoC5/UART_2.c ****     * Return:
1259:Generated_Source\PSoC5/UART_2.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_2.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_2.c ****     *
1262:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_2.c ****     *
1266:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_2.c ****     *  No.
1268:Generated_Source\PSoC5/UART_2.c ****     *
1269:Generated_Source\PSoC5/UART_2.c ****     * Theory:
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 44


1270:Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_2.c ****     *
1272:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_2.c ****                                                             
1275:Generated_Source\PSoC5/UART_2.c ****     {
 1180              		.loc 1 1275 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 8
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185 0000 80B4     		push	{r7}
 1186              		.cfi_def_cfa_offset 4
 1187              		.cfi_offset 7, -4
 1188 0002 83B0     		sub	sp, sp, #12
 1189              		.cfi_def_cfa_offset 16
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_2.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_2.c **** 
1278:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_2.c **** 
1280:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableTxInt();
1282:Generated_Source\PSoC5/UART_2.c **** 
1283:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_txBufferRead == UART_2_txBufferWrite)
1284:Generated_Source\PSoC5/UART_2.c ****         {
1285:Generated_Source\PSoC5/UART_2.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_2.c ****         }
1287:Generated_Source\PSoC5/UART_2.c ****         else if(UART_2_txBufferRead < UART_2_txBufferWrite)
1288:Generated_Source\PSoC5/UART_2.c ****         {
1289:Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_txBufferWrite - UART_2_txBufferRead);
1290:Generated_Source\PSoC5/UART_2.c ****         }
1291:Generated_Source\PSoC5/UART_2.c ****         else
1292:Generated_Source\PSoC5/UART_2.c ****         {
1293:Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_TX_BUFFER_SIZE - UART_2_txBufferRead) +
1294:Generated_Source\PSoC5/UART_2.c ****                     UART_2_txBufferWrite;
1295:Generated_Source\PSoC5/UART_2.c ****         }
1296:Generated_Source\PSoC5/UART_2.c **** 
1297:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableTxInt();
1298:Generated_Source\PSoC5/UART_2.c **** 
1299:Generated_Source\PSoC5/UART_2.c ****     #else
1300:Generated_Source\PSoC5/UART_2.c **** 
1301:Generated_Source\PSoC5/UART_2.c ****         size = UART_2_TXSTATUS_REG;
 1192              		.loc 1 1301 0
 1193 0006 0E4B     		ldr	r3, .L87
 1194 0008 1B78     		ldrb	r3, [r3]
 1195 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/UART_2.c **** 
1303:Generated_Source\PSoC5/UART_2.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_2.c ****         if((size & UART_2_TX_STS_FIFO_FULL) != 0u)
 1196              		.loc 1 1304 0
 1197 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1198 000e 03F00403 		and	r3, r3, #4
 1199 0012 002B     		cmp	r3, #0
 1200 0014 02D0     		beq	.L83
1305:Generated_Source\PSoC5/UART_2.c ****         {
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 45


1306:Generated_Source\PSoC5/UART_2.c ****             size = UART_2_FIFO_LENGTH;
 1201              		.loc 1 1306 0
 1202 0016 0423     		movs	r3, #4
 1203 0018 FB71     		strb	r3, [r7, #7]
 1204 001a 09E0     		b	.L84
 1205              	.L83:
1307:Generated_Source\PSoC5/UART_2.c ****         }
1308:Generated_Source\PSoC5/UART_2.c ****         else if((size & UART_2_TX_STS_FIFO_EMPTY) != 0u)
 1206              		.loc 1 1308 0
 1207 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 001e 03F00203 		and	r3, r3, #2
 1209 0022 002B     		cmp	r3, #0
 1210 0024 02D0     		beq	.L85
1309:Generated_Source\PSoC5/UART_2.c ****         {
1310:Generated_Source\PSoC5/UART_2.c ****             size = 0u;
 1211              		.loc 1 1310 0
 1212 0026 0023     		movs	r3, #0
 1213 0028 FB71     		strb	r3, [r7, #7]
 1214 002a 01E0     		b	.L84
 1215              	.L85:
1311:Generated_Source\PSoC5/UART_2.c ****         }
1312:Generated_Source\PSoC5/UART_2.c ****         else
1313:Generated_Source\PSoC5/UART_2.c ****         {
1314:Generated_Source\PSoC5/UART_2.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_2.c ****             size = 1u;
 1216              		.loc 1 1315 0
 1217 002c 0123     		movs	r3, #1
 1218 002e FB71     		strb	r3, [r7, #7]
 1219              	.L84:
1316:Generated_Source\PSoC5/UART_2.c ****         }
1317:Generated_Source\PSoC5/UART_2.c **** 
1318:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_2.c **** 
1320:Generated_Source\PSoC5/UART_2.c ****     return(size);
 1220              		.loc 1 1320 0
 1221 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART_2.c ****     }
 1222              		.loc 1 1321 0
 1223 0032 1846     		mov	r0, r3
 1224 0034 0C37     		adds	r7, r7, #12
 1225              		.cfi_def_cfa_offset 4
 1226 0036 BD46     		mov	sp, r7
 1227              		.cfi_def_cfa_register 13
 1228              		@ sp needed
 1229 0038 5DF8047B 		ldr	r7, [sp], #4
 1230              		.cfi_restore 7
 1231              		.cfi_def_cfa_offset 0
 1232 003c 7047     		bx	lr
 1233              	.L88:
 1234 003e 00BF     		.align	2
 1235              	.L87:
 1236 0040 65650040 		.word	1073767781
 1237              		.cfi_endproc
 1238              	.LFE23:
 1239              		.size	UART_2_GetTxBufferSize, .-UART_2_GetTxBufferSize
 1240              		.section	.text.UART_2_ClearTxBuffer,"ax",%progbits
 1241              		.align	2
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 46


 1242              		.global	UART_2_ClearTxBuffer
 1243              		.thumb
 1244              		.thumb_func
 1245              		.type	UART_2_ClearTxBuffer, %function
 1246              	UART_2_ClearTxBuffer:
 1247              	.LFB24:
1322:Generated_Source\PSoC5/UART_2.c **** 
1323:Generated_Source\PSoC5/UART_2.c **** 
1324:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_2.c ****     *
1328:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_2.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_2.c ****     *
1331:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_2.c ****     *  None.
1333:Generated_Source\PSoC5/UART_2.c ****     *
1334:Generated_Source\PSoC5/UART_2.c ****     * Return:
1335:Generated_Source\PSoC5/UART_2.c ****     *  None.
1336:Generated_Source\PSoC5/UART_2.c ****     *
1337:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_2.c ****     *
1341:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_2.c ****     *  No.
1343:Generated_Source\PSoC5/UART_2.c ****     *
1344:Generated_Source\PSoC5/UART_2.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_2.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_2.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_2.c ****     *
1349:Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_2.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_2.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_2.c ****     *
1353:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_2.c ****     void UART_2_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_2.c ****     {
 1248              		.loc 1 1355 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 8
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252 0000 80B5     		push	{r7, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 82B0     		sub	sp, sp, #8
 1257              		.cfi_def_cfa_offset 16
 1258 0004 00AF     		add	r7, sp, #0
 1259              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_2.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_2.c **** 
1358:Generated_Source\PSoC5/UART_2.c ****         enableInterrupts = CyEnterCriticalSection();
 1260              		.loc 1 1358 0
 1261 0006 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 47


 1262 000a 0346     		mov	r3, r0
 1263 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_2.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_AUX_CTL_REG |= (uint8)  UART_2_TX_FIFO_CLR;
 1264              		.loc 1 1360 0
 1265 000e 0B4A     		ldr	r2, .L90
 1266 0010 0A4B     		ldr	r3, .L90
 1267 0012 1B78     		ldrb	r3, [r3]
 1268 0014 DBB2     		uxtb	r3, r3
 1269 0016 43F00103 		orr	r3, r3, #1
 1270 001a DBB2     		uxtb	r3, r3
 1271 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_AUX_CTL_REG &= (uint8) ~UART_2_TX_FIFO_CLR;
 1272              		.loc 1 1361 0
 1273 001e 074A     		ldr	r2, .L90
 1274 0020 064B     		ldr	r3, .L90
 1275 0022 1B78     		ldrb	r3, [r3]
 1276 0024 DBB2     		uxtb	r3, r3
 1277 0026 23F00103 		bic	r3, r3, #1
 1278 002a DBB2     		uxtb	r3, r3
 1279 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_2.c ****         CyExitCriticalSection(enableInterrupts);
 1280              		.loc 1 1362 0
 1281 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1282 0030 1846     		mov	r0, r3
 1283 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_2.c **** 
1364:Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_2.c **** 
1366:Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableTxInt();
1368:Generated_Source\PSoC5/UART_2.c **** 
1369:Generated_Source\PSoC5/UART_2.c ****         UART_2_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_2.c ****         UART_2_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_2.c **** 
1372:Generated_Source\PSoC5/UART_2.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableTxInt();
1374:Generated_Source\PSoC5/UART_2.c **** 
1375:Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_2.c ****     }
 1284              		.loc 1 1376 0
 1285 0036 0837     		adds	r7, r7, #8
 1286              		.cfi_def_cfa_offset 8
 1287 0038 BD46     		mov	sp, r7
 1288              		.cfi_def_cfa_register 13
 1289              		@ sp needed
 1290 003a 80BD     		pop	{r7, pc}
 1291              	.L91:
 1292              		.align	2
 1293              	.L90:
 1294 003c 94650040 		.word	1073767828
 1295              		.cfi_endproc
 1296              	.LFE24:
 1297              		.size	UART_2_ClearTxBuffer, .-UART_2_ClearTxBuffer
 1298              		.section	.text.UART_2_SendBreak,"ax",%progbits
 1299              		.align	2
 1300              		.global	UART_2_SendBreak
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 48


 1301              		.thumb
 1302              		.thumb_func
 1303              		.type	UART_2_SendBreak, %function
 1304              	UART_2_SendBreak:
 1305              	.LFB25:
1377:Generated_Source\PSoC5/UART_2.c **** 
1378:Generated_Source\PSoC5/UART_2.c **** 
1379:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SendBreak
1381:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_2.c ****     *
1383:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_2.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_2.c ****     *
1386:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_2.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_2.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_2.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_2.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_2.c ****     *   UART_2_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_2.c ****     *      UART_2_SEND_BREAK and UART_2_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_2.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_2.c ****     *
1398:Generated_Source\PSoC5/UART_2.c ****     * Return:
1399:Generated_Source\PSoC5/UART_2.c ****     *  None.
1400:Generated_Source\PSoC5/UART_2.c ****     *
1401:Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_2.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_2.c ****     *
1406:Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_2.c ****     *  No.
1408:Generated_Source\PSoC5/UART_2.c ****     *
1409:Generated_Source\PSoC5/UART_2.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_2.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_2.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_2.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_2.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_2.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_2.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_2.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_2.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_2.c ****     *     operation
1419:Generated_Source\PSoC5/UART_2.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_2.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_2.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_2.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_2.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_2.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_2.c ****     *         Add your code here to use CPU time
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 49


1429:Generated_Source\PSoC5/UART_2.c ****     *     When interrupt appear with UART_2_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_2.c ****     *
1432:Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_2.c ****     *  The UART_2_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_2.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_2.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_2.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_2.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_2.c ****     *
1439:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_2.c ****     {
 1306              		.loc 1 1441 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 84B0     		sub	sp, sp, #16
 1315              		.cfi_def_cfa_offset 24
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 0346     		mov	r3, r0
 1319 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_2.c **** 
1443:Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 1320              		.loc 1 1444 0
 1321 000a 274B     		ldr	r3, .L100
 1322 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1323 000e 002B     		cmp	r3, #0
 1324 0010 47D0     		beq	.L92
 1325              	.LBB2:
1445:Generated_Source\PSoC5/UART_2.c ****         {
1446:Generated_Source\PSoC5/UART_2.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_2.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_2.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_2.c **** 
1450:Generated_Source\PSoC5/UART_2.c ****         #if(UART_2_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_2.c **** 
1452:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_2.c ****             {
1455:Generated_Source\PSoC5/UART_2.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_2.c ****                                                       UART_2_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_2.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_2.c **** 
1461:Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_2.c ****                 {
1463:Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_2.c ****                 }
1465:Generated_Source\PSoC5/UART_2.c ****                 while((tmpStat & UART_2_TX_STS_FIFO_EMPTY) != 0u);
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 50


1466:Generated_Source\PSoC5/UART_2.c ****             }
1467:Generated_Source\PSoC5/UART_2.c **** 
1468:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_2.c ****             {
1471:Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_2.c ****                 {
1473:Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_2.c ****                 }
1475:Generated_Source\PSoC5/UART_2.c ****                 while(((uint8)~tmpStat & UART_2_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_2.c ****             }
1477:Generated_Source\PSoC5/UART_2.c **** 
1478:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_REINIT) ||
1480:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_2.c ****             {
1482:Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_2.c ****                                               (uint8)~UART_2_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_2.c ****             }
1485:Generated_Source\PSoC5/UART_2.c **** 
1486:Generated_Source\PSoC5/UART_2.c ****         #else /* UART_2_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_2.c **** 
1488:Generated_Source\PSoC5/UART_2.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_2.c **** 
1490:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_SEND_BREAK) ||
 1326              		.loc 1 1490 0
 1327 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1328 0014 002B     		cmp	r3, #0
 1329 0016 02D0     		beq	.L94
 1330              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1331 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1332 001a 032B     		cmp	r3, #3
 1333 001c 1BD1     		bne	.L95
 1334              	.L94:
1491:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_2.c ****             {
1493:Generated_Source\PSoC5/UART_2.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_2.c ****                 #if( (UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_2.c ****                                     (UART_2_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_2.c ****                     UART_2_WriteControlRegister(UART_2_ReadControlRegister() |
 1335              		.loc 1 1496 0 is_stmt 1
 1336 001e FFF7FEFF 		bl	UART_2_ReadControlRegister
 1337 0022 0346     		mov	r3, r0
 1338 0024 43F00203 		orr	r3, r3, #2
 1339 0028 DBB2     		uxtb	r3, r3
 1340 002a 1846     		mov	r0, r3
 1341 002c FFF7FEFF 		bl	UART_2_WriteControlRegister
1497:Generated_Source\PSoC5/UART_2.c ****                                                           UART_2_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_2.c **** 
1500:Generated_Source\PSoC5/UART_2.c ****                 #if(UART_2_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_2.c ****                     txPeriod = UART_2_TXBITCLKTX_COMPLETE_REG;
 1342              		.loc 1 1501 0
 1343 0030 1E4B     		ldr	r3, .L100+4
 1344 0032 1B78     		ldrb	r3, [r3]
 1345 0034 DAB2     		uxtb	r2, r3
 1346 0036 1E4B     		ldr	r3, .L100+8
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 51


 1347 0038 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_2.c ****                     UART_2_TXBITCLKTX_COMPLETE_REG = UART_2_TXBITCTR_BREAKBITS;
 1348              		.loc 1 1502 0
 1349 003a 1C4B     		ldr	r3, .L100+4
 1350 003c 6722     		movs	r2, #103
 1351 003e 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_2.c ****                 #else
1504:Generated_Source\PSoC5/UART_2.c ****                     txPeriod = UART_2_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_2.c ****                     UART_2_TXBITCTR_PERIOD_REG = UART_2_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_2.c **** 
1508:Generated_Source\PSoC5/UART_2.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = 0u;
 1352              		.loc 1 1509 0
 1353 0040 1C4B     		ldr	r3, .L100+12
 1354 0042 0022     		movs	r2, #0
 1355 0044 1A70     		strb	r2, [r3]
 1356              	.L96:
1510:Generated_Source\PSoC5/UART_2.c **** 
1511:Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_2.c ****                 {
1513:Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
 1357              		.loc 1 1513 0 discriminator 1
 1358 0046 1C4B     		ldr	r3, .L100+16
 1359 0048 1B78     		ldrb	r3, [r3]
 1360 004a FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_2.c ****                 }
1515:Generated_Source\PSoC5/UART_2.c ****                 while((tmpStat & UART_2_TX_STS_FIFO_EMPTY) != 0u);
 1361              		.loc 1 1515 0 discriminator 1
 1362 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1363 004e 03F00203 		and	r3, r3, #2
 1364 0052 002B     		cmp	r3, #0
 1365 0054 F7D1     		bne	.L96
 1366              	.L95:
1516:Generated_Source\PSoC5/UART_2.c ****             }
1517:Generated_Source\PSoC5/UART_2.c **** 
1518:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
 1367              		.loc 1 1518 0
 1368 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1369 0058 012B     		cmp	r3, #1
 1370 005a 02D0     		beq	.L97
 1371              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1372 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1373 005e 032B     		cmp	r3, #3
 1374 0060 09D1     		bne	.L98
 1375              	.L97:
1519:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_2.c ****             {
1521:Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_2.c ****                 {
1523:Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
 1376              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1377 0062 154B     		ldr	r3, .L100+16
 1378 0064 1B78     		ldrb	r3, [r3]
 1379 0066 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_2.c ****                 }
1525:Generated_Source\PSoC5/UART_2.c ****                 while(((uint8)~tmpStat & UART_2_TX_STS_COMPLETE) != 0u);
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 52


 1380              		.loc 1 1525 0 discriminator 1
 1381 0068 FB7B     		ldrb	r3, [r7, #15]
 1382 006a DB43     		mvns	r3, r3
 1383 006c DBB2     		uxtb	r3, r3
 1384 006e 03F00103 		and	r3, r3, #1
 1385 0072 002B     		cmp	r3, #0
 1386 0074 F5D1     		bne	.L97
 1387              	.L98:
1526:Generated_Source\PSoC5/UART_2.c ****             }
1527:Generated_Source\PSoC5/UART_2.c **** 
1528:Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
 1388              		.loc 1 1528 0
 1389 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1390 0078 012B     		cmp	r3, #1
 1391 007a 05D0     		beq	.L99
 1392              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1393 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1394 007e 022B     		cmp	r3, #2
 1395 0080 02D0     		beq	.L99
1529:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_REINIT) ||
 1396              		.loc 1 1529 0 is_stmt 1
 1397 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1398 0084 032B     		cmp	r3, #3
 1399 0086 0CD1     		bne	.L92
 1400              	.L99:
1530:Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_2.c ****             {
1532:Generated_Source\PSoC5/UART_2.c **** 
1533:Generated_Source\PSoC5/UART_2.c ****             #if(UART_2_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1401              		.loc 1 1534 0
 1402 0088 084B     		ldr	r3, .L100+4
 1403 008a 094A     		ldr	r2, .L100+8
 1404 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1405 008e 1A70     		strb	r2, [r3]
1535:Generated_Source\PSoC5/UART_2.c ****             #else
1536:Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_2.c **** 
1539:Generated_Source\PSoC5/UART_2.c ****             #if( (UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_2.c ****                  (UART_2_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() &
 1406              		.loc 1 1541 0
 1407 0090 FFF7FEFF 		bl	UART_2_ReadControlRegister
 1408 0094 0346     		mov	r3, r0
 1409 0096 23F00203 		bic	r3, r3, #2
 1410 009a DBB2     		uxtb	r3, r3
 1411 009c 1846     		mov	r0, r3
 1412 009e FFF7FEFF 		bl	UART_2_WriteControlRegister
 1413              	.L92:
 1414              	.LBE2:
1542:Generated_Source\PSoC5/UART_2.c ****                                                       (uint8) ~UART_2_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_2.c ****             }
1545:Generated_Source\PSoC5/UART_2.c ****         #endif    /* End UART_2_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_2.c ****         }
1547:Generated_Source\PSoC5/UART_2.c ****     }
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 53


 1415              		.loc 1 1547 0
 1416 00a2 1037     		adds	r7, r7, #16
 1417              		.cfi_def_cfa_offset 8
 1418 00a4 BD46     		mov	sp, r7
 1419              		.cfi_def_cfa_register 13
 1420              		@ sp needed
 1421 00a6 80BD     		pop	{r7, pc}
 1422              	.L101:
 1423              		.align	2
 1424              	.L100:
 1425 00a8 00000000 		.word	UART_2_initVar
 1426 00ac 35650040 		.word	1073767733
 1427 00b0 01000000 		.word	txPeriod.4989
 1428 00b4 44650040 		.word	1073767748
 1429 00b8 65650040 		.word	1073767781
 1430              		.cfi_endproc
 1431              	.LFE25:
 1432              		.size	UART_2_SendBreak, .-UART_2_SendBreak
 1433              		.section	.text.UART_2_SetTxAddressMode,"ax",%progbits
 1434              		.align	2
 1435              		.global	UART_2_SetTxAddressMode
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	UART_2_SetTxAddressMode, %function
 1439              	UART_2_SetTxAddressMode:
 1440              	.LFB26:
1548:Generated_Source\PSoC5/UART_2.c **** 
1549:Generated_Source\PSoC5/UART_2.c **** 
1550:Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_2.c ****     *
1554:Generated_Source\PSoC5/UART_2.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_2.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_2.c ****     *
1557:Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_2.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_2.c ****     *       UART_2_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_2.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_2.c ****     *       UART_2_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_2.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_2.c ****     *
1564:Generated_Source\PSoC5/UART_2.c ****     * Return:
1565:Generated_Source\PSoC5/UART_2.c ****     *  None.
1566:Generated_Source\PSoC5/UART_2.c ****     *
1567:Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_2.c ****     *  This function sets and clears UART_2_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_2.c ****     *  register.
1570:Generated_Source\PSoC5/UART_2.c ****     *
1571:Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_2.c ****     {
 1441              		.loc 1 1573 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 8
 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445              		@ link register save eliminated.
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 54


 1446 0000 80B4     		push	{r7}
 1447              		.cfi_def_cfa_offset 4
 1448              		.cfi_offset 7, -4
 1449 0002 83B0     		sub	sp, sp, #12
 1450              		.cfi_def_cfa_offset 16
 1451 0004 00AF     		add	r7, sp, #0
 1452              		.cfi_def_cfa_register 7
 1453 0006 0346     		mov	r3, r0
 1454 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_2.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_2.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_2.c ****         {
1577:Generated_Source\PSoC5/UART_2.c ****         #if( UART_2_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_2.c ****             UART_2_WriteControlRegister(UART_2_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_2.c ****                                                   UART_2_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_2.c ****         }
1582:Generated_Source\PSoC5/UART_2.c ****         else
1583:Generated_Source\PSoC5/UART_2.c ****         {
1584:Generated_Source\PSoC5/UART_2.c ****         #if( UART_2_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_2.c ****             UART_2_WriteControlRegister(UART_2_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_2.c ****                                                   (uint8) ~UART_2_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_2.c ****         }
1589:Generated_Source\PSoC5/UART_2.c ****     }
 1455              		.loc 1 1589 0
 1456 000a 0C37     		adds	r7, r7, #12
 1457              		.cfi_def_cfa_offset 4
 1458 000c BD46     		mov	sp, r7
 1459              		.cfi_def_cfa_register 13
 1460              		@ sp needed
 1461 000e 5DF8047B 		ldr	r7, [sp], #4
 1462              		.cfi_restore 7
 1463              		.cfi_def_cfa_offset 0
 1464 0012 7047     		bx	lr
 1465              		.cfi_endproc
 1466              	.LFE26:
 1467              		.size	UART_2_SetTxAddressMode, .-UART_2_SetTxAddressMode
 1468              		.bss
 1469              	txPeriod.4989:
 1470 0001 00       		.space	1
 1471              		.text
 1472              	.Letext0:
 1473              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1474              		.section	.debug_info,"",%progbits
 1475              	.Ldebug_info0:
 1476 0000 FF040000 		.4byte	0x4ff
 1477 0004 0400     		.2byte	0x4
 1478 0006 00000000 		.4byte	.Ldebug_abbrev0
 1479 000a 04       		.byte	0x4
 1480 000b 01       		.uleb128 0x1
 1481 000c 22020000 		.4byte	.LASF60
 1482 0010 01       		.byte	0x1
 1483 0011 B3030000 		.4byte	.LASF61
 1484 0015 86010000 		.4byte	.LASF62
 1485 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1486 001d 00000000 		.4byte	0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 55


 1487 0021 00000000 		.4byte	.Ldebug_line0
 1488 0025 02       		.uleb128 0x2
 1489 0026 01       		.byte	0x1
 1490 0027 06       		.byte	0x6
 1491 0028 AD000000 		.4byte	.LASF0
 1492 002c 02       		.uleb128 0x2
 1493 002d 01       		.byte	0x1
 1494 002e 08       		.byte	0x8
 1495 002f 11030000 		.4byte	.LASF1
 1496 0033 02       		.uleb128 0x2
 1497 0034 02       		.byte	0x2
 1498 0035 05       		.byte	0x5
 1499 0036 1F030000 		.4byte	.LASF2
 1500 003a 02       		.uleb128 0x2
 1501 003b 02       		.byte	0x2
 1502 003c 07       		.byte	0x7
 1503 003d 73010000 		.4byte	.LASF3
 1504 0041 02       		.uleb128 0x2
 1505 0042 04       		.byte	0x4
 1506 0043 05       		.byte	0x5
 1507 0044 E5000000 		.4byte	.LASF4
 1508 0048 02       		.uleb128 0x2
 1509 0049 04       		.byte	0x4
 1510 004a 07       		.byte	0x7
 1511 004b 45010000 		.4byte	.LASF5
 1512 004f 02       		.uleb128 0x2
 1513 0050 08       		.byte	0x8
 1514 0051 05       		.byte	0x5
 1515 0052 9F000000 		.4byte	.LASF6
 1516 0056 02       		.uleb128 0x2
 1517 0057 08       		.byte	0x8
 1518 0058 07       		.byte	0x7
 1519 0059 54000000 		.4byte	.LASF7
 1520 005d 03       		.uleb128 0x3
 1521 005e 04       		.byte	0x4
 1522 005f 05       		.byte	0x5
 1523 0060 696E7400 		.ascii	"int\000"
 1524 0064 02       		.uleb128 0x2
 1525 0065 04       		.byte	0x4
 1526 0066 07       		.byte	0x7
 1527 0067 38010000 		.4byte	.LASF8
 1528 006b 04       		.uleb128 0x4
 1529 006c EE000000 		.4byte	.LASF9
 1530 0070 02       		.byte	0x2
 1531 0071 9201     		.2byte	0x192
 1532 0073 2C000000 		.4byte	0x2c
 1533 0077 04       		.uleb128 0x4
 1534 0078 2A000000 		.4byte	.LASF10
 1535 007c 02       		.byte	0x2
 1536 007d 9301     		.2byte	0x193
 1537 007f 3A000000 		.4byte	0x3a
 1538 0083 02       		.uleb128 0x2
 1539 0084 04       		.byte	0x4
 1540 0085 04       		.byte	0x4
 1541 0086 DD020000 		.4byte	.LASF11
 1542 008a 02       		.uleb128 0x2
 1543 008b 08       		.byte	0x8
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 56


 1544 008c 04       		.byte	0x4
 1545 008d F4000000 		.4byte	.LASF12
 1546 0091 04       		.uleb128 0x4
 1547 0092 87030000 		.4byte	.LASF13
 1548 0096 02       		.byte	0x2
 1549 0097 A301     		.2byte	0x1a3
 1550 0099 9D000000 		.4byte	0x9d
 1551 009d 02       		.uleb128 0x2
 1552 009e 01       		.byte	0x1
 1553 009f 08       		.byte	0x8
 1554 00a0 6A030000 		.4byte	.LASF14
 1555 00a4 04       		.uleb128 0x4
 1556 00a5 0C030000 		.4byte	.LASF15
 1557 00a9 02       		.byte	0x2
 1558 00aa 3C02     		.2byte	0x23c
 1559 00ac B0000000 		.4byte	0xb0
 1560 00b0 05       		.uleb128 0x5
 1561 00b1 6B000000 		.4byte	0x6b
 1562 00b5 02       		.uleb128 0x2
 1563 00b6 04       		.byte	0x4
 1564 00b7 07       		.byte	0x7
 1565 00b8 11020000 		.4byte	.LASF16
 1566 00bc 06       		.uleb128 0x6
 1567 00bd 5D030000 		.4byte	.LASF17
 1568 00c1 01       		.byte	0x1
 1569 00c2 4C       		.byte	0x4c
 1570 00c3 00000000 		.4byte	.LFB0
 1571 00c7 20000000 		.4byte	.LFE0-.LFB0
 1572 00cb 01       		.uleb128 0x1
 1573 00cc 9C       		.byte	0x9c
 1574 00cd 07       		.uleb128 0x7
 1575 00ce 4B040000 		.4byte	.LASF18
 1576 00d2 01       		.byte	0x1
 1577 00d3 6A       		.byte	0x6a
 1578 00d4 00000000 		.4byte	.LFB1
 1579 00d8 40000000 		.4byte	.LFE1-.LFB1
 1580 00dc 01       		.uleb128 0x1
 1581 00dd 9C       		.byte	0x9c
 1582 00de 08       		.uleb128 0x8
 1583 00df 7A000000 		.4byte	.LASF19
 1584 00e3 01       		.byte	0x1
 1585 00e4 B7       		.byte	0xb7
 1586 00e5 00000000 		.4byte	.LFB2
 1587 00e9 5C000000 		.4byte	.LFE2-.LFB2
 1588 00ed 01       		.uleb128 0x1
 1589 00ee 9C       		.byte	0x9c
 1590 00ef 02010000 		.4byte	0x102
 1591 00f3 09       		.uleb128 0x9
 1592 00f4 FD030000 		.4byte	.LASF21
 1593 00f8 01       		.byte	0x1
 1594 00f9 B9       		.byte	0xb9
 1595 00fa 6B000000 		.4byte	0x6b
 1596 00fe 02       		.uleb128 0x2
 1597 00ff 91       		.byte	0x91
 1598 0100 77       		.sleb128 -9
 1599 0101 00       		.byte	0
 1600 0102 08       		.uleb128 0x8
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 57


 1601 0103 B9020000 		.4byte	.LASF20
 1602 0107 01       		.byte	0x1
 1603 0108 F0       		.byte	0xf0
 1604 0109 00000000 		.4byte	.LFB3
 1605 010d 5C000000 		.4byte	.LFE3-.LFB3
 1606 0111 01       		.uleb128 0x1
 1607 0112 9C       		.byte	0x9c
 1608 0113 26010000 		.4byte	0x126
 1609 0117 09       		.uleb128 0x9
 1610 0118 FD030000 		.4byte	.LASF21
 1611 011c 01       		.byte	0x1
 1612 011d F2       		.byte	0xf2
 1613 011e 6B000000 		.4byte	0x6b
 1614 0122 02       		.uleb128 0x2
 1615 0123 91       		.byte	0x91
 1616 0124 77       		.sleb128 -9
 1617 0125 00       		.byte	0
 1618 0126 0A       		.uleb128 0xa
 1619 0127 E2030000 		.4byte	.LASF32
 1620 012b 01       		.byte	0x1
 1621 012c 2701     		.2byte	0x127
 1622 012e 6B000000 		.4byte	0x6b
 1623 0132 00000000 		.4byte	.LFB4
 1624 0136 10000000 		.4byte	.LFE4-.LFB4
 1625 013a 01       		.uleb128 0x1
 1626 013b 9C       		.byte	0x9c
 1627 013c 0B       		.uleb128 0xb
 1628 013d 0E040000 		.4byte	.LASF22
 1629 0141 01       		.byte	0x1
 1630 0142 3F01     		.2byte	0x13f
 1631 0144 00000000 		.4byte	.LFB5
 1632 0148 14000000 		.4byte	.LFE5-.LFB5
 1633 014c 01       		.uleb128 0x1
 1634 014d 9C       		.byte	0x9c
 1635 014e 62010000 		.4byte	0x162
 1636 0152 0C       		.uleb128 0xc
 1637 0153 07010000 		.4byte	.LASF24
 1638 0157 01       		.byte	0x1
 1639 0158 3F01     		.2byte	0x13f
 1640 015a 6B000000 		.4byte	0x6b
 1641 015e 02       		.uleb128 0x2
 1642 015f 91       		.byte	0x91
 1643 0160 77       		.sleb128 -9
 1644 0161 00       		.byte	0
 1645 0162 0B       		.uleb128 0xb
 1646 0163 F2020000 		.4byte	.LASF23
 1647 0167 01       		.byte	0x1
 1648 0168 6701     		.2byte	0x167
 1649 016a 00000000 		.4byte	.LFB6
 1650 016e 20000000 		.4byte	.LFE6-.LFB6
 1651 0172 01       		.uleb128 0x1
 1652 0173 9C       		.byte	0x9c
 1653 0174 88010000 		.4byte	0x188
 1654 0178 0C       		.uleb128 0xc
 1655 0179 EE010000 		.4byte	.LASF25
 1656 017d 01       		.byte	0x1
 1657 017e 6701     		.2byte	0x167
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 58


 1658 0180 6B000000 		.4byte	0x6b
 1659 0184 02       		.uleb128 0x2
 1660 0185 91       		.byte	0x91
 1661 0186 77       		.sleb128 -9
 1662 0187 00       		.byte	0
 1663 0188 0D       		.uleb128 0xd
 1664 0189 0F010000 		.4byte	.LASF27
 1665 018d 01       		.byte	0x1
 1666 018e 8801     		.2byte	0x188
 1667 0190 6B000000 		.4byte	0x6b
 1668 0194 00000000 		.4byte	.LFB7
 1669 0198 20000000 		.4byte	.LFE7-.LFB7
 1670 019c 01       		.uleb128 0x1
 1671 019d 9C       		.byte	0x9c
 1672 019e B2010000 		.4byte	0x1b2
 1673 01a2 0E       		.uleb128 0xe
 1674 01a3 56030000 		.4byte	.LASF26
 1675 01a7 01       		.byte	0x1
 1676 01a8 8A01     		.2byte	0x18a
 1677 01aa 6B000000 		.4byte	0x6b
 1678 01ae 02       		.uleb128 0x2
 1679 01af 91       		.byte	0x91
 1680 01b0 77       		.sleb128 -9
 1681 01b1 00       		.byte	0
 1682 01b2 0D       		.uleb128 0xd
 1683 01b3 F5010000 		.4byte	.LASF28
 1684 01b7 01       		.byte	0x1
 1685 01b8 E501     		.2byte	0x1e5
 1686 01ba 6B000000 		.4byte	0x6b
 1687 01be 00000000 		.4byte	.LFB8
 1688 01c2 24000000 		.4byte	.LFE8-.LFB8
 1689 01c6 01       		.uleb128 0x1
 1690 01c7 9C       		.byte	0x9c
 1691 01c8 DC010000 		.4byte	0x1dc
 1692 01cc 0E       		.uleb128 0xe
 1693 01cd 2A040000 		.4byte	.LASF29
 1694 01d1 01       		.byte	0x1
 1695 01d2 E701     		.2byte	0x1e7
 1696 01d4 6B000000 		.4byte	0x6b
 1697 01d8 02       		.uleb128 0x2
 1698 01d9 91       		.byte	0x91
 1699 01da 77       		.sleb128 -9
 1700 01db 00       		.byte	0
 1701 01dc 0D       		.uleb128 0xd
 1702 01dd 6B000000 		.4byte	.LASF30
 1703 01e1 01       		.byte	0x1
 1704 01e2 1402     		.2byte	0x214
 1705 01e4 6B000000 		.4byte	0x6b
 1706 01e8 00000000 		.4byte	.LFB9
 1707 01ec 44000000 		.4byte	.LFE9-.LFB9
 1708 01f0 01       		.uleb128 0x1
 1709 01f1 9C       		.byte	0x9c
 1710 01f2 15020000 		.4byte	0x215
 1711 01f6 0E       		.uleb128 0xe
 1712 01f7 56030000 		.4byte	.LASF26
 1713 01fb 01       		.byte	0x1
 1714 01fc 1602     		.2byte	0x216
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 59


 1715 01fe 6B000000 		.4byte	0x6b
 1716 0202 02       		.uleb128 0x2
 1717 0203 91       		.byte	0x91
 1718 0204 77       		.sleb128 -9
 1719 0205 0E       		.uleb128 0xe
 1720 0206 B0020000 		.4byte	.LASF31
 1721 020a 01       		.byte	0x1
 1722 020b 1702     		.2byte	0x217
 1723 020d 6B000000 		.4byte	0x6b
 1724 0211 02       		.uleb128 0x2
 1725 0212 91       		.byte	0x91
 1726 0213 76       		.sleb128 -10
 1727 0214 00       		.byte	0
 1728 0215 0F       		.uleb128 0xf
 1729 0216 E3020000 		.4byte	.LASF33
 1730 021a 01       		.byte	0x1
 1731 021b 7A02     		.2byte	0x27a
 1732 021d 77000000 		.4byte	0x77
 1733 0221 00000000 		.4byte	.LFB10
 1734 0225 22000000 		.4byte	.LFE10-.LFB10
 1735 0229 01       		.uleb128 0x1
 1736 022a 9C       		.byte	0x9c
 1737 022b 0D       		.uleb128 0xd
 1738 022c 57010000 		.4byte	.LASF34
 1739 0230 01       		.byte	0x1
 1740 0231 AB02     		.2byte	0x2ab
 1741 0233 6B000000 		.4byte	0x6b
 1742 0237 00000000 		.4byte	.LFB11
 1743 023b 30000000 		.4byte	.LFE11-.LFB11
 1744 023f 01       		.uleb128 0x1
 1745 0240 9C       		.byte	0x9c
 1746 0241 55020000 		.4byte	0x255
 1747 0245 0E       		.uleb128 0xe
 1748 0246 6E010000 		.4byte	.LASF35
 1749 024a 01       		.byte	0x1
 1750 024b AE02     		.2byte	0x2ae
 1751 024d 6B000000 		.4byte	0x6b
 1752 0251 02       		.uleb128 0x2
 1753 0252 91       		.byte	0x91
 1754 0253 77       		.sleb128 -9
 1755 0254 00       		.byte	0
 1756 0255 10       		.uleb128 0x10
 1757 0256 D9010000 		.4byte	.LASF36
 1758 025a 01       		.byte	0x1
 1759 025b F502     		.2byte	0x2f5
 1760 025d 00000000 		.4byte	.LFB12
 1761 0261 40000000 		.4byte	.LFE12-.LFB12
 1762 0265 01       		.uleb128 0x1
 1763 0266 9C       		.byte	0x9c
 1764 0267 7B020000 		.4byte	0x27b
 1765 026b 0E       		.uleb128 0xe
 1766 026c FD030000 		.4byte	.LASF21
 1767 0270 01       		.byte	0x1
 1768 0271 F702     		.2byte	0x2f7
 1769 0273 6B000000 		.4byte	0x6b
 1770 0277 02       		.uleb128 0x2
 1771 0278 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 60


 1772 0279 77       		.sleb128 -9
 1773 027a 00       		.byte	0
 1774 027b 0B       		.uleb128 0xb
 1775 027c 6F030000 		.4byte	.LASF37
 1776 0280 01       		.byte	0x1
 1777 0281 2D03     		.2byte	0x32d
 1778 0283 00000000 		.4byte	.LFB13
 1779 0287 14000000 		.4byte	.LFE13-.LFB13
 1780 028b 01       		.uleb128 0x1
 1781 028c 9C       		.byte	0x9c
 1782 028d A1020000 		.4byte	0x2a1
 1783 0291 0C       		.uleb128 0xc
 1784 0292 FB000000 		.4byte	.LASF38
 1785 0296 01       		.byte	0x1
 1786 0297 2D03     		.2byte	0x32d
 1787 0299 6B000000 		.4byte	0x6b
 1788 029d 02       		.uleb128 0x2
 1789 029e 91       		.byte	0x91
 1790 029f 77       		.sleb128 -9
 1791 02a0 00       		.byte	0
 1792 02a1 0B       		.uleb128 0xb
 1793 02a2 00000000 		.4byte	.LASF39
 1794 02a6 01       		.byte	0x1
 1795 02a7 5903     		.2byte	0x359
 1796 02a9 00000000 		.4byte	.LFB14
 1797 02ad 20000000 		.4byte	.LFE14-.LFB14
 1798 02b1 01       		.uleb128 0x1
 1799 02b2 9C       		.byte	0x9c
 1800 02b3 C7020000 		.4byte	0x2c7
 1801 02b7 0C       		.uleb128 0xc
 1802 02b8 1A020000 		.4byte	.LASF40
 1803 02bc 01       		.byte	0x1
 1804 02bd 5903     		.2byte	0x359
 1805 02bf 6B000000 		.4byte	0x6b
 1806 02c3 02       		.uleb128 0x2
 1807 02c4 91       		.byte	0x91
 1808 02c5 77       		.sleb128 -9
 1809 02c6 00       		.byte	0
 1810 02c7 0B       		.uleb128 0xb
 1811 02c8 15000000 		.4byte	.LASF41
 1812 02cc 01       		.byte	0x1
 1813 02cd 6D03     		.2byte	0x36d
 1814 02cf 00000000 		.4byte	.LFB15
 1815 02d3 20000000 		.4byte	.LFE15-.LFB15
 1816 02d7 01       		.uleb128 0x1
 1817 02d8 9C       		.byte	0x9c
 1818 02d9 ED020000 		.4byte	0x2ed
 1819 02dd 0C       		.uleb128 0xc
 1820 02de 1A020000 		.4byte	.LASF40
 1821 02e2 01       		.byte	0x1
 1822 02e3 6D03     		.2byte	0x36d
 1823 02e5 6B000000 		.4byte	0x6b
 1824 02e9 02       		.uleb128 0x2
 1825 02ea 91       		.byte	0x91
 1826 02eb 77       		.sleb128 -9
 1827 02ec 00       		.byte	0
 1828 02ed 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 61


 1829 02ee 31040000 		.4byte	.LASF42
 1830 02f2 01       		.byte	0x1
 1831 02f3 8C03     		.2byte	0x38c
 1832 02f5 00000000 		.4byte	.LFB16
 1833 02f9 20000000 		.4byte	.LFE16-.LFB16
 1834 02fd 01       		.uleb128 0x1
 1835 02fe 9C       		.byte	0x9c
 1836 02ff 13030000 		.4byte	0x313
 1837 0303 0C       		.uleb128 0xc
 1838 0304 EE010000 		.4byte	.LASF25
 1839 0308 01       		.byte	0x1
 1840 0309 8C03     		.2byte	0x38c
 1841 030b 6B000000 		.4byte	0x6b
 1842 030f 02       		.uleb128 0x2
 1843 0310 91       		.byte	0x91
 1844 0311 77       		.sleb128 -9
 1845 0312 00       		.byte	0
 1846 0313 0B       		.uleb128 0xb
 1847 0314 43030000 		.4byte	.LASF43
 1848 0318 01       		.byte	0x1
 1849 0319 AE03     		.2byte	0x3ae
 1850 031b 00000000 		.4byte	.LFB17
 1851 031f 2C000000 		.4byte	.LFE17-.LFB17
 1852 0323 01       		.uleb128 0x1
 1853 0324 9C       		.byte	0x9c
 1854 0325 39030000 		.4byte	0x339
 1855 0329 0C       		.uleb128 0xc
 1856 032a 31000000 		.4byte	.LASF44
 1857 032e 01       		.byte	0x1
 1858 032f AE03     		.2byte	0x3ae
 1859 0331 6B000000 		.4byte	0x6b
 1860 0335 02       		.uleb128 0x2
 1861 0336 91       		.byte	0x91
 1862 0337 77       		.sleb128 -9
 1863 0338 00       		.byte	0
 1864 0339 0A       		.uleb128 0xa
 1865 033a C2000000 		.4byte	.LASF45
 1866 033e 01       		.byte	0x1
 1867 033f EB03     		.2byte	0x3eb
 1868 0341 6B000000 		.4byte	0x6b
 1869 0345 00000000 		.4byte	.LFB18
 1870 0349 18000000 		.4byte	.LFE18-.LFB18
 1871 034d 01       		.uleb128 0x1
 1872 034e 9C       		.byte	0x9c
 1873 034f 0B       		.uleb128 0xb
 1874 0350 D6000000 		.4byte	.LASF46
 1875 0354 01       		.byte	0x1
 1876 0355 1104     		.2byte	0x411
 1877 0357 00000000 		.4byte	.LFB19
 1878 035b 34000000 		.4byte	.LFE19-.LFB19
 1879 035f 01       		.uleb128 0x1
 1880 0360 9C       		.byte	0x9c
 1881 0361 75030000 		.4byte	0x375
 1882 0365 0C       		.uleb128 0xc
 1883 0366 31000000 		.4byte	.LASF44
 1884 036a 01       		.byte	0x1
 1885 036b 1104     		.2byte	0x411
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 62


 1886 036d 6B000000 		.4byte	0x6b
 1887 0371 02       		.uleb128 0x2
 1888 0372 91       		.byte	0x91
 1889 0373 77       		.sleb128 -9
 1890 0374 00       		.byte	0
 1891 0375 10       		.uleb128 0x10
 1892 0376 3C000000 		.4byte	.LASF47
 1893 037a 01       		.byte	0x1
 1894 037b 7904     		.2byte	0x479
 1895 037d 00000000 		.4byte	.LFB20
 1896 0381 40000000 		.4byte	.LFE20-.LFB20
 1897 0385 01       		.uleb128 0x1
 1898 0386 9C       		.byte	0x9c
 1899 0387 AA030000 		.4byte	0x3aa
 1900 038b 0C       		.uleb128 0xc
 1901 038c 4D000000 		.4byte	.LASF48
 1902 0390 01       		.byte	0x1
 1903 0391 7904     		.2byte	0x479
 1904 0393 AA030000 		.4byte	0x3aa
 1905 0397 02       		.uleb128 0x2
 1906 0398 91       		.byte	0x91
 1907 0399 6C       		.sleb128 -20
 1908 039a 0E       		.uleb128 0xe
 1909 039b D0010000 		.4byte	.LASF49
 1910 039f 01       		.byte	0x1
 1911 03a0 7B04     		.2byte	0x47b
 1912 03a2 77000000 		.4byte	0x77
 1913 03a6 02       		.uleb128 0x2
 1914 03a7 91       		.byte	0x91
 1915 03a8 76       		.sleb128 -10
 1916 03a9 00       		.byte	0
 1917 03aa 11       		.uleb128 0x11
 1918 03ab 04       		.byte	0x4
 1919 03ac B0030000 		.4byte	0x3b0
 1920 03b0 12       		.uleb128 0x12
 1921 03b1 91000000 		.4byte	0x91
 1922 03b5 10       		.uleb128 0x10
 1923 03b6 29030000 		.4byte	.LASF50
 1924 03ba 01       		.byte	0x1
 1925 03bb A704     		.2byte	0x4a7
 1926 03bd 00000000 		.4byte	.LFB21
 1927 03c1 40000000 		.4byte	.LFE21-.LFB21
 1928 03c5 01       		.uleb128 0x1
 1929 03c6 9C       		.byte	0x9c
 1930 03c7 F9030000 		.4byte	0x3f9
 1931 03cb 0C       		.uleb128 0xc
 1932 03cc 4D000000 		.4byte	.LASF48
 1933 03d0 01       		.byte	0x1
 1934 03d1 A704     		.2byte	0x4a7
 1935 03d3 F9030000 		.4byte	0x3f9
 1936 03d7 02       		.uleb128 0x2
 1937 03d8 91       		.byte	0x91
 1938 03d9 6C       		.sleb128 -20
 1939 03da 0C       		.uleb128 0xc
 1940 03db 39030000 		.4byte	.LASF51
 1941 03df 01       		.byte	0x1
 1942 03e0 A704     		.2byte	0x4a7
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 63


 1943 03e2 6B000000 		.4byte	0x6b
 1944 03e6 02       		.uleb128 0x2
 1945 03e7 91       		.byte	0x91
 1946 03e8 6B       		.sleb128 -21
 1947 03e9 0E       		.uleb128 0xe
 1948 03ea D0010000 		.4byte	.LASF49
 1949 03ee 01       		.byte	0x1
 1950 03ef AA04     		.2byte	0x4aa
 1951 03f1 6B000000 		.4byte	0x6b
 1952 03f5 02       		.uleb128 0x2
 1953 03f6 91       		.byte	0x91
 1954 03f7 77       		.sleb128 -9
 1955 03f8 00       		.byte	0
 1956 03f9 11       		.uleb128 0x11
 1957 03fa 04       		.byte	0x4
 1958 03fb FF030000 		.4byte	0x3ff
 1959 03ff 12       		.uleb128 0x12
 1960 0400 6B000000 		.4byte	0x6b
 1961 0404 10       		.uleb128 0x10
 1962 0405 21010000 		.4byte	.LASF52
 1963 0409 01       		.byte	0x1
 1964 040a CE04     		.2byte	0x4ce
 1965 040c 00000000 		.4byte	.LFB22
 1966 0410 30000000 		.4byte	.LFE22-.LFB22
 1967 0414 01       		.uleb128 0x1
 1968 0415 9C       		.byte	0x9c
 1969 0416 2A040000 		.4byte	0x42a
 1970 041a 0C       		.uleb128 0xc
 1971 041b 31000000 		.4byte	.LASF44
 1972 041f 01       		.byte	0x1
 1973 0420 CE04     		.2byte	0x4ce
 1974 0422 6B000000 		.4byte	0x6b
 1975 0426 02       		.uleb128 0x2
 1976 0427 91       		.byte	0x91
 1977 0428 77       		.sleb128 -9
 1978 0429 00       		.byte	0
 1979 042a 0D       		.uleb128 0xd
 1980 042b 88000000 		.4byte	.LASF53
 1981 042f 01       		.byte	0x1
 1982 0430 F904     		.2byte	0x4f9
 1983 0432 6B000000 		.4byte	0x6b
 1984 0436 00000000 		.4byte	.LFB23
 1985 043a 44000000 		.4byte	.LFE23-.LFB23
 1986 043e 01       		.uleb128 0x1
 1987 043f 9C       		.byte	0x9c
 1988 0440 54040000 		.4byte	0x454
 1989 0444 0E       		.uleb128 0xe
 1990 0445 6E010000 		.4byte	.LASF35
 1991 0449 01       		.byte	0x1
 1992 044a FC04     		.2byte	0x4fc
 1993 044c 6B000000 		.4byte	0x6b
 1994 0450 02       		.uleb128 0x2
 1995 0451 91       		.byte	0x91
 1996 0452 77       		.sleb128 -9
 1997 0453 00       		.byte	0
 1998 0454 10       		.uleb128 0x10
 1999 0455 8D030000 		.4byte	.LASF54
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 64


 2000 0459 01       		.byte	0x1
 2001 045a 4A05     		.2byte	0x54a
 2002 045c 00000000 		.4byte	.LFB24
 2003 0460 40000000 		.4byte	.LFE24-.LFB24
 2004 0464 01       		.uleb128 0x1
 2005 0465 9C       		.byte	0x9c
 2006 0466 7A040000 		.4byte	0x47a
 2007 046a 0E       		.uleb128 0xe
 2008 046b FD030000 		.4byte	.LASF21
 2009 046f 01       		.byte	0x1
 2010 0470 4C05     		.2byte	0x54c
 2011 0472 6B000000 		.4byte	0x6b
 2012 0476 02       		.uleb128 0x2
 2013 0477 91       		.byte	0x91
 2014 0478 77       		.sleb128 -9
 2015 0479 00       		.byte	0
 2016 047a 10       		.uleb128 0x10
 2017 047b A2030000 		.4byte	.LASF55
 2018 047f 01       		.byte	0x1
 2019 0480 A005     		.2byte	0x5a0
 2020 0482 00000000 		.4byte	.LFB25
 2021 0486 BC000000 		.4byte	.LFE25-.LFB25
 2022 048a 01       		.uleb128 0x1
 2023 048b 9C       		.byte	0x9c
 2024 048c CB040000 		.4byte	0x4cb
 2025 0490 0C       		.uleb128 0xc
 2026 0491 30010000 		.4byte	.LASF56
 2027 0495 01       		.byte	0x1
 2028 0496 A005     		.2byte	0x5a0
 2029 0498 6B000000 		.4byte	0x6b
 2030 049c 02       		.uleb128 0x2
 2031 049d 91       		.byte	0x91
 2032 049e 6F       		.sleb128 -17
 2033 049f 13       		.uleb128 0x13
 2034 04a0 12000000 		.4byte	.LBB2
 2035 04a4 90000000 		.4byte	.LBE2-.LBB2
 2036 04a8 0E       		.uleb128 0xe
 2037 04a9 09020000 		.4byte	.LASF57
 2038 04ad 01       		.byte	0x1
 2039 04ae A805     		.2byte	0x5a8
 2040 04b0 6B000000 		.4byte	0x6b
 2041 04b4 02       		.uleb128 0x2
 2042 04b5 91       		.byte	0x91
 2043 04b6 77       		.sleb128 -9
 2044 04b7 0E       		.uleb128 0xe
 2045 04b8 B9000000 		.4byte	.LASF58
 2046 04bc 01       		.byte	0x1
 2047 04bd D005     		.2byte	0x5d0
 2048 04bf 6B000000 		.4byte	0x6b
 2049 04c3 05       		.uleb128 0x5
 2050 04c4 03       		.byte	0x3
 2051 04c5 01000000 		.4byte	txPeriod.4989
 2052 04c9 00       		.byte	0
 2053 04ca 00       		.byte	0
 2054 04cb 0B       		.uleb128 0xb
 2055 04cc C5020000 		.4byte	.LASF59
 2056 04d0 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 65


 2057 04d1 2406     		.2byte	0x624
 2058 04d3 00000000 		.4byte	.LFB26
 2059 04d7 14000000 		.4byte	.LFE26-.LFB26
 2060 04db 01       		.uleb128 0x1
 2061 04dc 9C       		.byte	0x9c
 2062 04dd F1040000 		.4byte	0x4f1
 2063 04e1 0C       		.uleb128 0xc
 2064 04e2 FB000000 		.4byte	.LASF38
 2065 04e6 01       		.byte	0x1
 2066 04e7 2406     		.2byte	0x624
 2067 04e9 6B000000 		.4byte	0x6b
 2068 04ed 02       		.uleb128 0x2
 2069 04ee 91       		.byte	0x91
 2070 04ef 77       		.sleb128 -9
 2071 04f0 00       		.byte	0
 2072 04f1 14       		.uleb128 0x14
 2073 04f2 D3030000 		.4byte	.LASF63
 2074 04f6 01       		.byte	0x1
 2075 04f7 1B       		.byte	0x1b
 2076 04f8 6B000000 		.4byte	0x6b
 2077 04fc 05       		.uleb128 0x5
 2078 04fd 03       		.byte	0x3
 2079 04fe 00000000 		.4byte	UART_2_initVar
 2080 0502 00       		.byte	0
 2081              		.section	.debug_abbrev,"",%progbits
 2082              	.Ldebug_abbrev0:
 2083 0000 01       		.uleb128 0x1
 2084 0001 11       		.uleb128 0x11
 2085 0002 01       		.byte	0x1
 2086 0003 25       		.uleb128 0x25
 2087 0004 0E       		.uleb128 0xe
 2088 0005 13       		.uleb128 0x13
 2089 0006 0B       		.uleb128 0xb
 2090 0007 03       		.uleb128 0x3
 2091 0008 0E       		.uleb128 0xe
 2092 0009 1B       		.uleb128 0x1b
 2093 000a 0E       		.uleb128 0xe
 2094 000b 55       		.uleb128 0x55
 2095 000c 17       		.uleb128 0x17
 2096 000d 11       		.uleb128 0x11
 2097 000e 01       		.uleb128 0x1
 2098 000f 10       		.uleb128 0x10
 2099 0010 17       		.uleb128 0x17
 2100 0011 00       		.byte	0
 2101 0012 00       		.byte	0
 2102 0013 02       		.uleb128 0x2
 2103 0014 24       		.uleb128 0x24
 2104 0015 00       		.byte	0
 2105 0016 0B       		.uleb128 0xb
 2106 0017 0B       		.uleb128 0xb
 2107 0018 3E       		.uleb128 0x3e
 2108 0019 0B       		.uleb128 0xb
 2109 001a 03       		.uleb128 0x3
 2110 001b 0E       		.uleb128 0xe
 2111 001c 00       		.byte	0
 2112 001d 00       		.byte	0
 2113 001e 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 66


 2114 001f 24       		.uleb128 0x24
 2115 0020 00       		.byte	0
 2116 0021 0B       		.uleb128 0xb
 2117 0022 0B       		.uleb128 0xb
 2118 0023 3E       		.uleb128 0x3e
 2119 0024 0B       		.uleb128 0xb
 2120 0025 03       		.uleb128 0x3
 2121 0026 08       		.uleb128 0x8
 2122 0027 00       		.byte	0
 2123 0028 00       		.byte	0
 2124 0029 04       		.uleb128 0x4
 2125 002a 16       		.uleb128 0x16
 2126 002b 00       		.byte	0
 2127 002c 03       		.uleb128 0x3
 2128 002d 0E       		.uleb128 0xe
 2129 002e 3A       		.uleb128 0x3a
 2130 002f 0B       		.uleb128 0xb
 2131 0030 3B       		.uleb128 0x3b
 2132 0031 05       		.uleb128 0x5
 2133 0032 49       		.uleb128 0x49
 2134 0033 13       		.uleb128 0x13
 2135 0034 00       		.byte	0
 2136 0035 00       		.byte	0
 2137 0036 05       		.uleb128 0x5
 2138 0037 35       		.uleb128 0x35
 2139 0038 00       		.byte	0
 2140 0039 49       		.uleb128 0x49
 2141 003a 13       		.uleb128 0x13
 2142 003b 00       		.byte	0
 2143 003c 00       		.byte	0
 2144 003d 06       		.uleb128 0x6
 2145 003e 2E       		.uleb128 0x2e
 2146 003f 00       		.byte	0
 2147 0040 3F       		.uleb128 0x3f
 2148 0041 19       		.uleb128 0x19
 2149 0042 03       		.uleb128 0x3
 2150 0043 0E       		.uleb128 0xe
 2151 0044 3A       		.uleb128 0x3a
 2152 0045 0B       		.uleb128 0xb
 2153 0046 3B       		.uleb128 0x3b
 2154 0047 0B       		.uleb128 0xb
 2155 0048 27       		.uleb128 0x27
 2156 0049 19       		.uleb128 0x19
 2157 004a 11       		.uleb128 0x11
 2158 004b 01       		.uleb128 0x1
 2159 004c 12       		.uleb128 0x12
 2160 004d 06       		.uleb128 0x6
 2161 004e 40       		.uleb128 0x40
 2162 004f 18       		.uleb128 0x18
 2163 0050 9642     		.uleb128 0x2116
 2164 0052 19       		.uleb128 0x19
 2165 0053 00       		.byte	0
 2166 0054 00       		.byte	0
 2167 0055 07       		.uleb128 0x7
 2168 0056 2E       		.uleb128 0x2e
 2169 0057 00       		.byte	0
 2170 0058 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 67


 2171 0059 19       		.uleb128 0x19
 2172 005a 03       		.uleb128 0x3
 2173 005b 0E       		.uleb128 0xe
 2174 005c 3A       		.uleb128 0x3a
 2175 005d 0B       		.uleb128 0xb
 2176 005e 3B       		.uleb128 0x3b
 2177 005f 0B       		.uleb128 0xb
 2178 0060 27       		.uleb128 0x27
 2179 0061 19       		.uleb128 0x19
 2180 0062 11       		.uleb128 0x11
 2181 0063 01       		.uleb128 0x1
 2182 0064 12       		.uleb128 0x12
 2183 0065 06       		.uleb128 0x6
 2184 0066 40       		.uleb128 0x40
 2185 0067 18       		.uleb128 0x18
 2186 0068 9742     		.uleb128 0x2117
 2187 006a 19       		.uleb128 0x19
 2188 006b 00       		.byte	0
 2189 006c 00       		.byte	0
 2190 006d 08       		.uleb128 0x8
 2191 006e 2E       		.uleb128 0x2e
 2192 006f 01       		.byte	0x1
 2193 0070 3F       		.uleb128 0x3f
 2194 0071 19       		.uleb128 0x19
 2195 0072 03       		.uleb128 0x3
 2196 0073 0E       		.uleb128 0xe
 2197 0074 3A       		.uleb128 0x3a
 2198 0075 0B       		.uleb128 0xb
 2199 0076 3B       		.uleb128 0x3b
 2200 0077 0B       		.uleb128 0xb
 2201 0078 27       		.uleb128 0x27
 2202 0079 19       		.uleb128 0x19
 2203 007a 11       		.uleb128 0x11
 2204 007b 01       		.uleb128 0x1
 2205 007c 12       		.uleb128 0x12
 2206 007d 06       		.uleb128 0x6
 2207 007e 40       		.uleb128 0x40
 2208 007f 18       		.uleb128 0x18
 2209 0080 9642     		.uleb128 0x2116
 2210 0082 19       		.uleb128 0x19
 2211 0083 01       		.uleb128 0x1
 2212 0084 13       		.uleb128 0x13
 2213 0085 00       		.byte	0
 2214 0086 00       		.byte	0
 2215 0087 09       		.uleb128 0x9
 2216 0088 34       		.uleb128 0x34
 2217 0089 00       		.byte	0
 2218 008a 03       		.uleb128 0x3
 2219 008b 0E       		.uleb128 0xe
 2220 008c 3A       		.uleb128 0x3a
 2221 008d 0B       		.uleb128 0xb
 2222 008e 3B       		.uleb128 0x3b
 2223 008f 0B       		.uleb128 0xb
 2224 0090 49       		.uleb128 0x49
 2225 0091 13       		.uleb128 0x13
 2226 0092 02       		.uleb128 0x2
 2227 0093 18       		.uleb128 0x18
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 68


 2228 0094 00       		.byte	0
 2229 0095 00       		.byte	0
 2230 0096 0A       		.uleb128 0xa
 2231 0097 2E       		.uleb128 0x2e
 2232 0098 00       		.byte	0
 2233 0099 3F       		.uleb128 0x3f
 2234 009a 19       		.uleb128 0x19
 2235 009b 03       		.uleb128 0x3
 2236 009c 0E       		.uleb128 0xe
 2237 009d 3A       		.uleb128 0x3a
 2238 009e 0B       		.uleb128 0xb
 2239 009f 3B       		.uleb128 0x3b
 2240 00a0 05       		.uleb128 0x5
 2241 00a1 27       		.uleb128 0x27
 2242 00a2 19       		.uleb128 0x19
 2243 00a3 49       		.uleb128 0x49
 2244 00a4 13       		.uleb128 0x13
 2245 00a5 11       		.uleb128 0x11
 2246 00a6 01       		.uleb128 0x1
 2247 00a7 12       		.uleb128 0x12
 2248 00a8 06       		.uleb128 0x6
 2249 00a9 40       		.uleb128 0x40
 2250 00aa 18       		.uleb128 0x18
 2251 00ab 9742     		.uleb128 0x2117
 2252 00ad 19       		.uleb128 0x19
 2253 00ae 00       		.byte	0
 2254 00af 00       		.byte	0
 2255 00b0 0B       		.uleb128 0xb
 2256 00b1 2E       		.uleb128 0x2e
 2257 00b2 01       		.byte	0x1
 2258 00b3 3F       		.uleb128 0x3f
 2259 00b4 19       		.uleb128 0x19
 2260 00b5 03       		.uleb128 0x3
 2261 00b6 0E       		.uleb128 0xe
 2262 00b7 3A       		.uleb128 0x3a
 2263 00b8 0B       		.uleb128 0xb
 2264 00b9 3B       		.uleb128 0x3b
 2265 00ba 05       		.uleb128 0x5
 2266 00bb 27       		.uleb128 0x27
 2267 00bc 19       		.uleb128 0x19
 2268 00bd 11       		.uleb128 0x11
 2269 00be 01       		.uleb128 0x1
 2270 00bf 12       		.uleb128 0x12
 2271 00c0 06       		.uleb128 0x6
 2272 00c1 40       		.uleb128 0x40
 2273 00c2 18       		.uleb128 0x18
 2274 00c3 9742     		.uleb128 0x2117
 2275 00c5 19       		.uleb128 0x19
 2276 00c6 01       		.uleb128 0x1
 2277 00c7 13       		.uleb128 0x13
 2278 00c8 00       		.byte	0
 2279 00c9 00       		.byte	0
 2280 00ca 0C       		.uleb128 0xc
 2281 00cb 05       		.uleb128 0x5
 2282 00cc 00       		.byte	0
 2283 00cd 03       		.uleb128 0x3
 2284 00ce 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 69


 2285 00cf 3A       		.uleb128 0x3a
 2286 00d0 0B       		.uleb128 0xb
 2287 00d1 3B       		.uleb128 0x3b
 2288 00d2 05       		.uleb128 0x5
 2289 00d3 49       		.uleb128 0x49
 2290 00d4 13       		.uleb128 0x13
 2291 00d5 02       		.uleb128 0x2
 2292 00d6 18       		.uleb128 0x18
 2293 00d7 00       		.byte	0
 2294 00d8 00       		.byte	0
 2295 00d9 0D       		.uleb128 0xd
 2296 00da 2E       		.uleb128 0x2e
 2297 00db 01       		.byte	0x1
 2298 00dc 3F       		.uleb128 0x3f
 2299 00dd 19       		.uleb128 0x19
 2300 00de 03       		.uleb128 0x3
 2301 00df 0E       		.uleb128 0xe
 2302 00e0 3A       		.uleb128 0x3a
 2303 00e1 0B       		.uleb128 0xb
 2304 00e2 3B       		.uleb128 0x3b
 2305 00e3 05       		.uleb128 0x5
 2306 00e4 27       		.uleb128 0x27
 2307 00e5 19       		.uleb128 0x19
 2308 00e6 49       		.uleb128 0x49
 2309 00e7 13       		.uleb128 0x13
 2310 00e8 11       		.uleb128 0x11
 2311 00e9 01       		.uleb128 0x1
 2312 00ea 12       		.uleb128 0x12
 2313 00eb 06       		.uleb128 0x6
 2314 00ec 40       		.uleb128 0x40
 2315 00ed 18       		.uleb128 0x18
 2316 00ee 9742     		.uleb128 0x2117
 2317 00f0 19       		.uleb128 0x19
 2318 00f1 01       		.uleb128 0x1
 2319 00f2 13       		.uleb128 0x13
 2320 00f3 00       		.byte	0
 2321 00f4 00       		.byte	0
 2322 00f5 0E       		.uleb128 0xe
 2323 00f6 34       		.uleb128 0x34
 2324 00f7 00       		.byte	0
 2325 00f8 03       		.uleb128 0x3
 2326 00f9 0E       		.uleb128 0xe
 2327 00fa 3A       		.uleb128 0x3a
 2328 00fb 0B       		.uleb128 0xb
 2329 00fc 3B       		.uleb128 0x3b
 2330 00fd 05       		.uleb128 0x5
 2331 00fe 49       		.uleb128 0x49
 2332 00ff 13       		.uleb128 0x13
 2333 0100 02       		.uleb128 0x2
 2334 0101 18       		.uleb128 0x18
 2335 0102 00       		.byte	0
 2336 0103 00       		.byte	0
 2337 0104 0F       		.uleb128 0xf
 2338 0105 2E       		.uleb128 0x2e
 2339 0106 00       		.byte	0
 2340 0107 3F       		.uleb128 0x3f
 2341 0108 19       		.uleb128 0x19
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 70


 2342 0109 03       		.uleb128 0x3
 2343 010a 0E       		.uleb128 0xe
 2344 010b 3A       		.uleb128 0x3a
 2345 010c 0B       		.uleb128 0xb
 2346 010d 3B       		.uleb128 0x3b
 2347 010e 05       		.uleb128 0x5
 2348 010f 27       		.uleb128 0x27
 2349 0110 19       		.uleb128 0x19
 2350 0111 49       		.uleb128 0x49
 2351 0112 13       		.uleb128 0x13
 2352 0113 11       		.uleb128 0x11
 2353 0114 01       		.uleb128 0x1
 2354 0115 12       		.uleb128 0x12
 2355 0116 06       		.uleb128 0x6
 2356 0117 40       		.uleb128 0x40
 2357 0118 18       		.uleb128 0x18
 2358 0119 9642     		.uleb128 0x2116
 2359 011b 19       		.uleb128 0x19
 2360 011c 00       		.byte	0
 2361 011d 00       		.byte	0
 2362 011e 10       		.uleb128 0x10
 2363 011f 2E       		.uleb128 0x2e
 2364 0120 01       		.byte	0x1
 2365 0121 3F       		.uleb128 0x3f
 2366 0122 19       		.uleb128 0x19
 2367 0123 03       		.uleb128 0x3
 2368 0124 0E       		.uleb128 0xe
 2369 0125 3A       		.uleb128 0x3a
 2370 0126 0B       		.uleb128 0xb
 2371 0127 3B       		.uleb128 0x3b
 2372 0128 05       		.uleb128 0x5
 2373 0129 27       		.uleb128 0x27
 2374 012a 19       		.uleb128 0x19
 2375 012b 11       		.uleb128 0x11
 2376 012c 01       		.uleb128 0x1
 2377 012d 12       		.uleb128 0x12
 2378 012e 06       		.uleb128 0x6
 2379 012f 40       		.uleb128 0x40
 2380 0130 18       		.uleb128 0x18
 2381 0131 9642     		.uleb128 0x2116
 2382 0133 19       		.uleb128 0x19
 2383 0134 01       		.uleb128 0x1
 2384 0135 13       		.uleb128 0x13
 2385 0136 00       		.byte	0
 2386 0137 00       		.byte	0
 2387 0138 11       		.uleb128 0x11
 2388 0139 0F       		.uleb128 0xf
 2389 013a 00       		.byte	0
 2390 013b 0B       		.uleb128 0xb
 2391 013c 0B       		.uleb128 0xb
 2392 013d 49       		.uleb128 0x49
 2393 013e 13       		.uleb128 0x13
 2394 013f 00       		.byte	0
 2395 0140 00       		.byte	0
 2396 0141 12       		.uleb128 0x12
 2397 0142 26       		.uleb128 0x26
 2398 0143 00       		.byte	0
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 71


 2399 0144 49       		.uleb128 0x49
 2400 0145 13       		.uleb128 0x13
 2401 0146 00       		.byte	0
 2402 0147 00       		.byte	0
 2403 0148 13       		.uleb128 0x13
 2404 0149 0B       		.uleb128 0xb
 2405 014a 01       		.byte	0x1
 2406 014b 11       		.uleb128 0x11
 2407 014c 01       		.uleb128 0x1
 2408 014d 12       		.uleb128 0x12
 2409 014e 06       		.uleb128 0x6
 2410 014f 00       		.byte	0
 2411 0150 00       		.byte	0
 2412 0151 14       		.uleb128 0x14
 2413 0152 34       		.uleb128 0x34
 2414 0153 00       		.byte	0
 2415 0154 03       		.uleb128 0x3
 2416 0155 0E       		.uleb128 0xe
 2417 0156 3A       		.uleb128 0x3a
 2418 0157 0B       		.uleb128 0xb
 2419 0158 3B       		.uleb128 0x3b
 2420 0159 0B       		.uleb128 0xb
 2421 015a 49       		.uleb128 0x49
 2422 015b 13       		.uleb128 0x13
 2423 015c 3F       		.uleb128 0x3f
 2424 015d 19       		.uleb128 0x19
 2425 015e 02       		.uleb128 0x2
 2426 015f 18       		.uleb128 0x18
 2427 0160 00       		.byte	0
 2428 0161 00       		.byte	0
 2429 0162 00       		.byte	0
 2430              		.section	.debug_aranges,"",%progbits
 2431 0000 EC000000 		.4byte	0xec
 2432 0004 0200     		.2byte	0x2
 2433 0006 00000000 		.4byte	.Ldebug_info0
 2434 000a 04       		.byte	0x4
 2435 000b 00       		.byte	0
 2436 000c 0000     		.2byte	0
 2437 000e 0000     		.2byte	0
 2438 0010 00000000 		.4byte	.LFB0
 2439 0014 20000000 		.4byte	.LFE0-.LFB0
 2440 0018 00000000 		.4byte	.LFB1
 2441 001c 40000000 		.4byte	.LFE1-.LFB1
 2442 0020 00000000 		.4byte	.LFB2
 2443 0024 5C000000 		.4byte	.LFE2-.LFB2
 2444 0028 00000000 		.4byte	.LFB3
 2445 002c 5C000000 		.4byte	.LFE3-.LFB3
 2446 0030 00000000 		.4byte	.LFB4
 2447 0034 10000000 		.4byte	.LFE4-.LFB4
 2448 0038 00000000 		.4byte	.LFB5
 2449 003c 14000000 		.4byte	.LFE5-.LFB5
 2450 0040 00000000 		.4byte	.LFB6
 2451 0044 20000000 		.4byte	.LFE6-.LFB6
 2452 0048 00000000 		.4byte	.LFB7
 2453 004c 20000000 		.4byte	.LFE7-.LFB7
 2454 0050 00000000 		.4byte	.LFB8
 2455 0054 24000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 72


 2456 0058 00000000 		.4byte	.LFB9
 2457 005c 44000000 		.4byte	.LFE9-.LFB9
 2458 0060 00000000 		.4byte	.LFB10
 2459 0064 22000000 		.4byte	.LFE10-.LFB10
 2460 0068 00000000 		.4byte	.LFB11
 2461 006c 30000000 		.4byte	.LFE11-.LFB11
 2462 0070 00000000 		.4byte	.LFB12
 2463 0074 40000000 		.4byte	.LFE12-.LFB12
 2464 0078 00000000 		.4byte	.LFB13
 2465 007c 14000000 		.4byte	.LFE13-.LFB13
 2466 0080 00000000 		.4byte	.LFB14
 2467 0084 20000000 		.4byte	.LFE14-.LFB14
 2468 0088 00000000 		.4byte	.LFB15
 2469 008c 20000000 		.4byte	.LFE15-.LFB15
 2470 0090 00000000 		.4byte	.LFB16
 2471 0094 20000000 		.4byte	.LFE16-.LFB16
 2472 0098 00000000 		.4byte	.LFB17
 2473 009c 2C000000 		.4byte	.LFE17-.LFB17
 2474 00a0 00000000 		.4byte	.LFB18
 2475 00a4 18000000 		.4byte	.LFE18-.LFB18
 2476 00a8 00000000 		.4byte	.LFB19
 2477 00ac 34000000 		.4byte	.LFE19-.LFB19
 2478 00b0 00000000 		.4byte	.LFB20
 2479 00b4 40000000 		.4byte	.LFE20-.LFB20
 2480 00b8 00000000 		.4byte	.LFB21
 2481 00bc 40000000 		.4byte	.LFE21-.LFB21
 2482 00c0 00000000 		.4byte	.LFB22
 2483 00c4 30000000 		.4byte	.LFE22-.LFB22
 2484 00c8 00000000 		.4byte	.LFB23
 2485 00cc 44000000 		.4byte	.LFE23-.LFB23
 2486 00d0 00000000 		.4byte	.LFB24
 2487 00d4 40000000 		.4byte	.LFE24-.LFB24
 2488 00d8 00000000 		.4byte	.LFB25
 2489 00dc BC000000 		.4byte	.LFE25-.LFB25
 2490 00e0 00000000 		.4byte	.LFB26
 2491 00e4 14000000 		.4byte	.LFE26-.LFB26
 2492 00e8 00000000 		.4byte	0
 2493 00ec 00000000 		.4byte	0
 2494              		.section	.debug_ranges,"",%progbits
 2495              	.Ldebug_ranges0:
 2496 0000 00000000 		.4byte	.LFB0
 2497 0004 20000000 		.4byte	.LFE0
 2498 0008 00000000 		.4byte	.LFB1
 2499 000c 40000000 		.4byte	.LFE1
 2500 0010 00000000 		.4byte	.LFB2
 2501 0014 5C000000 		.4byte	.LFE2
 2502 0018 00000000 		.4byte	.LFB3
 2503 001c 5C000000 		.4byte	.LFE3
 2504 0020 00000000 		.4byte	.LFB4
 2505 0024 10000000 		.4byte	.LFE4
 2506 0028 00000000 		.4byte	.LFB5
 2507 002c 14000000 		.4byte	.LFE5
 2508 0030 00000000 		.4byte	.LFB6
 2509 0034 20000000 		.4byte	.LFE6
 2510 0038 00000000 		.4byte	.LFB7
 2511 003c 20000000 		.4byte	.LFE7
 2512 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 73


 2513 0044 24000000 		.4byte	.LFE8
 2514 0048 00000000 		.4byte	.LFB9
 2515 004c 44000000 		.4byte	.LFE9
 2516 0050 00000000 		.4byte	.LFB10
 2517 0054 22000000 		.4byte	.LFE10
 2518 0058 00000000 		.4byte	.LFB11
 2519 005c 30000000 		.4byte	.LFE11
 2520 0060 00000000 		.4byte	.LFB12
 2521 0064 40000000 		.4byte	.LFE12
 2522 0068 00000000 		.4byte	.LFB13
 2523 006c 14000000 		.4byte	.LFE13
 2524 0070 00000000 		.4byte	.LFB14
 2525 0074 20000000 		.4byte	.LFE14
 2526 0078 00000000 		.4byte	.LFB15
 2527 007c 20000000 		.4byte	.LFE15
 2528 0080 00000000 		.4byte	.LFB16
 2529 0084 20000000 		.4byte	.LFE16
 2530 0088 00000000 		.4byte	.LFB17
 2531 008c 2C000000 		.4byte	.LFE17
 2532 0090 00000000 		.4byte	.LFB18
 2533 0094 18000000 		.4byte	.LFE18
 2534 0098 00000000 		.4byte	.LFB19
 2535 009c 34000000 		.4byte	.LFE19
 2536 00a0 00000000 		.4byte	.LFB20
 2537 00a4 40000000 		.4byte	.LFE20
 2538 00a8 00000000 		.4byte	.LFB21
 2539 00ac 40000000 		.4byte	.LFE21
 2540 00b0 00000000 		.4byte	.LFB22
 2541 00b4 30000000 		.4byte	.LFE22
 2542 00b8 00000000 		.4byte	.LFB23
 2543 00bc 44000000 		.4byte	.LFE23
 2544 00c0 00000000 		.4byte	.LFB24
 2545 00c4 40000000 		.4byte	.LFE24
 2546 00c8 00000000 		.4byte	.LFB25
 2547 00cc BC000000 		.4byte	.LFE25
 2548 00d0 00000000 		.4byte	.LFB26
 2549 00d4 14000000 		.4byte	.LFE26
 2550 00d8 00000000 		.4byte	0
 2551 00dc 00000000 		.4byte	0
 2552              		.section	.debug_line,"",%progbits
 2553              	.Ldebug_line0:
 2554 0000 DE020000 		.section	.debug_str,"MS",%progbits,1
 2554      02004300 
 2554      00000201 
 2554      FB0E0D00 
 2554      01010101 
 2555              	.LASF39:
 2556 0000 55415254 		.ascii	"UART_2_SetRxAddress1\000"
 2556      5F325F53 
 2556      65745278 
 2556      41646472 
 2556      65737331 
 2557              	.LASF41:
 2558 0015 55415254 		.ascii	"UART_2_SetRxAddress2\000"
 2558      5F325F53 
 2558      65745278 
 2558      41646472 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 74


 2558      65737332 
 2559              	.LASF10:
 2560 002a 75696E74 		.ascii	"uint16\000"
 2560      313600
 2561              	.LASF44:
 2562 0031 74784461 		.ascii	"txDataByte\000"
 2562      74614279 
 2562      746500
 2563              	.LASF47:
 2564 003c 55415254 		.ascii	"UART_2_PutString\000"
 2564      5F325F50 
 2564      75745374 
 2564      72696E67 
 2564      00
 2565              	.LASF48:
 2566 004d 73747269 		.ascii	"string\000"
 2566      6E6700
 2567              	.LASF7:
 2568 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 2568      206C6F6E 
 2568      6720756E 
 2568      7369676E 
 2568      65642069 
 2569              	.LASF30:
 2570 006b 55415254 		.ascii	"UART_2_GetChar\000"
 2570      5F325F47 
 2570      65744368 
 2570      617200
 2571              	.LASF19:
 2572 007a 55415254 		.ascii	"UART_2_Enable\000"
 2572      5F325F45 
 2572      6E61626C 
 2572      6500
 2573              	.LASF53:
 2574 0088 55415254 		.ascii	"UART_2_GetTxBufferSize\000"
 2574      5F325F47 
 2574      65745478 
 2574      42756666 
 2574      65725369 
 2575              	.LASF6:
 2576 009f 6C6F6E67 		.ascii	"long long int\000"
 2576      206C6F6E 
 2576      6720696E 
 2576      7400
 2577              	.LASF0:
 2578 00ad 7369676E 		.ascii	"signed char\000"
 2578      65642063 
 2578      68617200 
 2579              	.LASF58:
 2580 00b9 74785065 		.ascii	"txPeriod\000"
 2580      72696F64 
 2580      00
 2581              	.LASF45:
 2582 00c2 55415254 		.ascii	"UART_2_ReadTxStatus\000"
 2582      5F325F52 
 2582      65616454 
 2582      78537461 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 75


 2582      74757300 
 2583              	.LASF46:
 2584 00d6 55415254 		.ascii	"UART_2_PutChar\000"
 2584      5F325F50 
 2584      75744368 
 2584      617200
 2585              	.LASF4:
 2586 00e5 6C6F6E67 		.ascii	"long int\000"
 2586      20696E74 
 2586      00
 2587              	.LASF9:
 2588 00ee 75696E74 		.ascii	"uint8\000"
 2588      3800
 2589              	.LASF12:
 2590 00f4 646F7562 		.ascii	"double\000"
 2590      6C6500
 2591              	.LASF38:
 2592 00fb 61646472 		.ascii	"addressMode\000"
 2592      6573734D 
 2592      6F646500 
 2593              	.LASF24:
 2594 0107 636F6E74 		.ascii	"control\000"
 2594      726F6C00 
 2595              	.LASF27:
 2596 010f 55415254 		.ascii	"UART_2_ReadRxData\000"
 2596      5F325F52 
 2596      65616452 
 2596      78446174 
 2596      6100
 2597              	.LASF52:
 2598 0121 55415254 		.ascii	"UART_2_PutCRLF\000"
 2598      5F325F50 
 2598      75744352 
 2598      4C4600
 2599              	.LASF56:
 2600 0130 7265744D 		.ascii	"retMode\000"
 2600      6F646500 
 2601              	.LASF8:
 2602 0138 756E7369 		.ascii	"unsigned int\000"
 2602      676E6564 
 2602      20696E74 
 2602      00
 2603              	.LASF5:
 2604 0145 6C6F6E67 		.ascii	"long unsigned int\000"
 2604      20756E73 
 2604      69676E65 
 2604      6420696E 
 2604      7400
 2605              	.LASF34:
 2606 0157 55415254 		.ascii	"UART_2_GetRxBufferSize\000"
 2606      5F325F47 
 2606      65745278 
 2606      42756666 
 2606      65725369 
 2607              	.LASF35:
 2608 016e 73697A65 		.ascii	"size\000"
 2608      00
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 76


 2609              	.LASF3:
 2610 0173 73686F72 		.ascii	"short unsigned int\000"
 2610      7420756E 
 2610      7369676E 
 2610      65642069 
 2610      6E7400
 2611              	.LASF62:
 2612 0186 433A5C44 		.ascii	"C:\\Documents and Settings\\name\\Desktop\\minunit\\"
 2612      6F63756D 
 2612      656E7473 
 2612      20616E64 
 2612      20536574 
 2613 01b5 6D696E75 		.ascii	"minunit_arch\\minunit.cydsn\000"
 2613      6E69745F 
 2613      61726368 
 2613      5C6D696E 
 2613      756E6974 
 2614              	.LASF49:
 2615 01d0 62756649 		.ascii	"bufIndex\000"
 2615      6E646578 
 2615      00
 2616              	.LASF36:
 2617 01d9 55415254 		.ascii	"UART_2_ClearRxBuffer\000"
 2617      5F325F43 
 2617      6C656172 
 2617      52784275 
 2617      66666572 
 2618              	.LASF25:
 2619 01ee 696E7453 		.ascii	"intSrc\000"
 2619      726300
 2620              	.LASF28:
 2621 01f5 55415254 		.ascii	"UART_2_ReadRxStatus\000"
 2621      5F325F52 
 2621      65616452 
 2621      78537461 
 2621      74757300 
 2622              	.LASF57:
 2623 0209 746D7053 		.ascii	"tmpStat\000"
 2623      74617400 
 2624              	.LASF16:
 2625 0211 73697A65 		.ascii	"sizetype\000"
 2625      74797065 
 2625      00
 2626              	.LASF40:
 2627 021a 61646472 		.ascii	"address\000"
 2627      65737300 
 2628              	.LASF60:
 2629 0222 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2629      4320342E 
 2629      392E3320 
 2629      32303135 
 2629      30333033 
 2630 0255 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2630      20726576 
 2630      6973696F 
 2630      6E203232 
 2630      31323230 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 77


 2631 0288 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2631      66756E63 
 2631      74696F6E 
 2631      2D736563 
 2631      74696F6E 
 2632              	.LASF31:
 2633 02b0 72785374 		.ascii	"rxStatus\000"
 2633      61747573 
 2633      00
 2634              	.LASF20:
 2635 02b9 55415254 		.ascii	"UART_2_Stop\000"
 2635      5F325F53 
 2635      746F7000 
 2636              	.LASF59:
 2637 02c5 55415254 		.ascii	"UART_2_SetTxAddressMode\000"
 2637      5F325F53 
 2637      65745478 
 2637      41646472 
 2637      6573734D 
 2638              	.LASF11:
 2639 02dd 666C6F61 		.ascii	"float\000"
 2639      7400
 2640              	.LASF33:
 2641 02e3 55415254 		.ascii	"UART_2_GetByte\000"
 2641      5F325F47 
 2641      65744279 
 2641      746500
 2642              	.LASF23:
 2643 02f2 55415254 		.ascii	"UART_2_SetRxInterruptMode\000"
 2643      5F325F53 
 2643      65745278 
 2643      496E7465 
 2643      72727570 
 2644              	.LASF15:
 2645 030c 72656738 		.ascii	"reg8\000"
 2645      00
 2646              	.LASF1:
 2647 0311 756E7369 		.ascii	"unsigned char\000"
 2647      676E6564 
 2647      20636861 
 2647      7200
 2648              	.LASF2:
 2649 031f 73686F72 		.ascii	"short int\000"
 2649      7420696E 
 2649      7400
 2650              	.LASF50:
 2651 0329 55415254 		.ascii	"UART_2_PutArray\000"
 2651      5F325F50 
 2651      75744172 
 2651      72617900 
 2652              	.LASF51:
 2653 0339 62797465 		.ascii	"byteCount\000"
 2653      436F756E 
 2653      7400
 2654              	.LASF43:
 2655 0343 55415254 		.ascii	"UART_2_WriteTxData\000"
 2655      5F325F57 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 78


 2655      72697465 
 2655      54784461 
 2655      746100
 2656              	.LASF26:
 2657 0356 72784461 		.ascii	"rxData\000"
 2657      746100
 2658              	.LASF17:
 2659 035d 55415254 		.ascii	"UART_2_Start\000"
 2659      5F325F53 
 2659      74617274 
 2659      00
 2660              	.LASF14:
 2661 036a 63686172 		.ascii	"char\000"
 2661      00
 2662              	.LASF37:
 2663 036f 55415254 		.ascii	"UART_2_SetRxAddressMode\000"
 2663      5F325F53 
 2663      65745278 
 2663      41646472 
 2663      6573734D 
 2664              	.LASF13:
 2665 0387 63686172 		.ascii	"char8\000"
 2665      3800
 2666              	.LASF54:
 2667 038d 55415254 		.ascii	"UART_2_ClearTxBuffer\000"
 2667      5F325F43 
 2667      6C656172 
 2667      54784275 
 2667      66666572 
 2668              	.LASF55:
 2669 03a2 55415254 		.ascii	"UART_2_SendBreak\000"
 2669      5F325F53 
 2669      656E6442 
 2669      7265616B 
 2669      00
 2670              	.LASF61:
 2671 03b3 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_2.c\000"
 2671      72617465 
 2671      645F536F 
 2671      75726365 
 2671      5C50536F 
 2672              	.LASF63:
 2673 03d3 55415254 		.ascii	"UART_2_initVar\000"
 2673      5F325F69 
 2673      6E697456 
 2673      617200
 2674              	.LASF32:
 2675 03e2 55415254 		.ascii	"UART_2_ReadControlRegister\000"
 2675      5F325F52 
 2675      65616443 
 2675      6F6E7472 
 2675      6F6C5265 
 2676              	.LASF21:
 2677 03fd 656E6162 		.ascii	"enableInterrupts\000"
 2677      6C65496E 
 2677      74657272 
 2677      75707473 
ARM GAS  C:\DOCUME~1\name\LOCALS~1\Temp\cctjwiO4.s 			page 79


 2677      00
 2678              	.LASF22:
 2679 040e 55415254 		.ascii	"UART_2_WriteControlRegister\000"
 2679      5F325F57 
 2679      72697465 
 2679      436F6E74 
 2679      726F6C52 
 2680              	.LASF29:
 2681 042a 73746174 		.ascii	"status\000"
 2681      757300
 2682              	.LASF42:
 2683 0431 55415254 		.ascii	"UART_2_SetTxInterruptMode\000"
 2683      5F325F53 
 2683      65745478 
 2683      496E7465 
 2683      72727570 
 2684              	.LASF18:
 2685 044b 55415254 		.ascii	"UART_2_Init\000"
 2685      5F325F49 
 2685      6E697400 
 2686              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
