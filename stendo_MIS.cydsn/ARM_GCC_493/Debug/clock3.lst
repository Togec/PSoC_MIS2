ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"clock3.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	rtc_typef,4,4
  19              		.global	rtc_sec
  20              		.data
  21              		.align	2
  22              		.type	rtc_sec, %object
  23              		.size	rtc_sec, 4
  24              	rtc_sec:
  25 0000 07000000 		.word	7
  26              		.section	.text.rtc_set_seconds,"ax",%progbits
  27              		.align	2
  28              		.global	rtc_set_seconds
  29              		.thumb
  30              		.thumb_func
  31              		.type	rtc_set_seconds, %function
  32              	rtc_set_seconds:
  33              	.LFB0:
  34              		.file 1 "clock3.c"
   1:clock3.c      **** #include "stdio.h"
   2:clock3.c      **** #include "minunit.h"
   3:clock3.c      **** 
   4:clock3.c      **** /*******************************************************************************/
   5:clock3.c      **** // Reference:
   6:clock3.c      **** // https://www.codingunit.com/how-to-make-a-calendar-in-c
   7:clock3.c      **** // Type F = Compound CP32: Date and Time
   8:clock3.c      **** // http://www.m-bus.com/files/MBDOC48.PDF
   9:clock3.c      **** /*******************************************************************************/
  10:clock3.c      **** char rtc_typef[4];
  11:clock3.c      **** 
  12:clock3.c      **** int rtc_sec = 7;
  13:clock3.c      **** void rtc_set_seconds(int s)
  14:clock3.c      **** {
  35              		.loc 1 14 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 80B4     		push	{r7}
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 7, -4
  43 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 2


  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  47 0006 7860     		str	r0, [r7, #4]
  15:clock3.c      ****     rtc_sec = s;
  48              		.loc 1 15 0
  49 0008 034A     		ldr	r2, .L2
  50 000a 7B68     		ldr	r3, [r7, #4]
  51 000c 1360     		str	r3, [r2]
  16:clock3.c      **** }
  52              		.loc 1 16 0
  53 000e 0C37     		adds	r7, r7, #12
  54              		.cfi_def_cfa_offset 4
  55 0010 BD46     		mov	sp, r7
  56              		.cfi_def_cfa_register 13
  57              		@ sp needed
  58 0012 5DF8047B 		ldr	r7, [sp], #4
  59              		.cfi_restore 7
  60              		.cfi_def_cfa_offset 0
  61 0016 7047     		bx	lr
  62              	.L3:
  63              		.align	2
  64              	.L2:
  65 0018 00000000 		.word	rtc_sec
  66              		.cfi_endproc
  67              	.LFE0:
  68              		.size	rtc_set_seconds, .-rtc_set_seconds
  69              		.section	.text.rtc_set_minutes,"ax",%progbits
  70              		.align	2
  71              		.global	rtc_set_minutes
  72              		.thumb
  73              		.thumb_func
  74              		.type	rtc_set_minutes, %function
  75              	rtc_set_minutes:
  76              	.LFB1:
  17:clock3.c      **** 
  18:clock3.c      **** 
  19:clock3.c      **** void rtc_set_minutes(int m)
  20:clock3.c      **** {
  77              		.loc 1 20 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 83B0     		sub	sp, sp, #12
  86              		.cfi_def_cfa_offset 16
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
  21:clock3.c      ****     //rtc_min = m;
  22:clock3.c      ****     rtc_typef[0] = (rtc_typef[0] & (~0x3F)) | (m & 0x3F);
  90              		.loc 1 22 0
  91 0008 0A4B     		ldr	r3, .L5
  92 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 3


  93 000c DBB2     		uxtb	r3, r3
  94 000e 23F03F03 		bic	r3, r3, #63
  95 0012 DAB2     		uxtb	r2, r3
  96 0014 7B68     		ldr	r3, [r7, #4]
  97 0016 DBB2     		uxtb	r3, r3
  98 0018 03F03F03 		and	r3, r3, #63
  99 001c DBB2     		uxtb	r3, r3
 100 001e 1343     		orrs	r3, r3, r2
 101 0020 DBB2     		uxtb	r3, r3
 102 0022 DAB2     		uxtb	r2, r3
 103 0024 034B     		ldr	r3, .L5
 104 0026 1A70     		strb	r2, [r3]
  23:clock3.c      **** }
 105              		.loc 1 23 0
 106 0028 0C37     		adds	r7, r7, #12
 107              		.cfi_def_cfa_offset 4
 108 002a BD46     		mov	sp, r7
 109              		.cfi_def_cfa_register 13
 110              		@ sp needed
 111 002c 5DF8047B 		ldr	r7, [sp], #4
 112              		.cfi_restore 7
 113              		.cfi_def_cfa_offset 0
 114 0030 7047     		bx	lr
 115              	.L6:
 116 0032 00BF     		.align	2
 117              	.L5:
 118 0034 00000000 		.word	rtc_typef
 119              		.cfi_endproc
 120              	.LFE1:
 121              		.size	rtc_set_minutes, .-rtc_set_minutes
 122              		.section	.text.rtc_set_hour,"ax",%progbits
 123              		.align	2
 124              		.global	rtc_set_hour
 125              		.thumb
 126              		.thumb_func
 127              		.type	rtc_set_hour, %function
 128              	rtc_set_hour:
 129              	.LFB2:
  24:clock3.c      **** 
  25:clock3.c      **** //int rtc_min = 59;
  26:clock3.c      **** #define rtc_min (rtc_typef[0] & 0x3F)
  27:clock3.c      **** 
  28:clock3.c      **** void rtc_set_hour(int h)
  29:clock3.c      **** {
 130              		.loc 1 29 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 142 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 4


  30:clock3.c      ****     //rtc_hour = h;
  31:clock3.c      ****     rtc_typef[1] = (rtc_typef[1] & (~0x1F)) | (h & 0x1F);
 143              		.loc 1 31 0
 144 0008 0A4B     		ldr	r3, .L8
 145 000a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 146 000c DBB2     		uxtb	r3, r3
 147 000e 23F01F03 		bic	r3, r3, #31
 148 0012 DAB2     		uxtb	r2, r3
 149 0014 7B68     		ldr	r3, [r7, #4]
 150 0016 DBB2     		uxtb	r3, r3
 151 0018 03F01F03 		and	r3, r3, #31
 152 001c DBB2     		uxtb	r3, r3
 153 001e 1343     		orrs	r3, r3, r2
 154 0020 DBB2     		uxtb	r3, r3
 155 0022 DAB2     		uxtb	r2, r3
 156 0024 034B     		ldr	r3, .L8
 157 0026 5A70     		strb	r2, [r3, #1]
  32:clock3.c      **** }
 158              		.loc 1 32 0
 159 0028 0C37     		adds	r7, r7, #12
 160              		.cfi_def_cfa_offset 4
 161 002a BD46     		mov	sp, r7
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 002c 5DF8047B 		ldr	r7, [sp], #4
 165              		.cfi_restore 7
 166              		.cfi_def_cfa_offset 0
 167 0030 7047     		bx	lr
 168              	.L9:
 169 0032 00BF     		.align	2
 170              	.L8:
 171 0034 00000000 		.word	rtc_typef
 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	rtc_set_hour, .-rtc_set_hour
 175              		.section	.text.rtc_set_day,"ax",%progbits
 176              		.align	2
 177              		.global	rtc_set_day
 178              		.thumb
 179              		.thumb_func
 180              		.type	rtc_set_day, %function
 181              	rtc_set_day:
 182              	.LFB3:
  33:clock3.c      **** 
  34:clock3.c      **** //int rtc_hour = 7;
  35:clock3.c      **** #define rtc_hour (rtc_typef[1] & 0x1F)
  36:clock3.c      **** 
  37:clock3.c      **** void rtc_set_day(int d)
  38:clock3.c      **** {
 183              		.loc 1 38 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 7, -4
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 5


 191 0002 83B0     		sub	sp, sp, #12
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
  39:clock3.c      ****     //rtc_day = d;
  40:clock3.c      ****     rtc_typef[2] = (rtc_typef[2] & (~0x1F)) | (d & 0x1F);
 196              		.loc 1 40 0
 197 0008 0A4B     		ldr	r3, .L11
 198 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 199 000c DBB2     		uxtb	r3, r3
 200 000e 23F01F03 		bic	r3, r3, #31
 201 0012 DAB2     		uxtb	r2, r3
 202 0014 7B68     		ldr	r3, [r7, #4]
 203 0016 DBB2     		uxtb	r3, r3
 204 0018 03F01F03 		and	r3, r3, #31
 205 001c DBB2     		uxtb	r3, r3
 206 001e 1343     		orrs	r3, r3, r2
 207 0020 DBB2     		uxtb	r3, r3
 208 0022 DAB2     		uxtb	r2, r3
 209 0024 034B     		ldr	r3, .L11
 210 0026 9A70     		strb	r2, [r3, #2]
  41:clock3.c      **** }
 211              		.loc 1 41 0
 212 0028 0C37     		adds	r7, r7, #12
 213              		.cfi_def_cfa_offset 4
 214 002a BD46     		mov	sp, r7
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 002c 5DF8047B 		ldr	r7, [sp], #4
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 0030 7047     		bx	lr
 221              	.L12:
 222 0032 00BF     		.align	2
 223              	.L11:
 224 0034 00000000 		.word	rtc_typef
 225              		.cfi_endproc
 226              	.LFE3:
 227              		.size	rtc_set_day, .-rtc_set_day
 228              		.global	rtc_month
 229              		.data
 230              		.align	2
 231              		.type	rtc_month, %object
 232              		.size	rtc_month, 4
 233              	rtc_month:
 234 0004 05000000 		.word	5
 235              		.global	rtc_year
 236              		.align	2
 237              		.type	rtc_year, %object
 238              		.size	rtc_year, 4
 239              	rtc_year:
 240 0008 05000000 		.word	5
 241              		.section	.text.rtc_set_month,"ax",%progbits
 242              		.align	2
 243              		.global	rtc_set_month
 244              		.thumb
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 6


 245              		.thumb_func
 246              		.type	rtc_set_month, %function
 247              	rtc_set_month:
 248              	.LFB4:
  42:clock3.c      **** 
  43:clock3.c      **** //int rtc_day = 5;
  44:clock3.c      **** #define rtc_day (rtc_typef[2] & 0x1F)
  45:clock3.c      **** 
  46:clock3.c      **** int rtc_month = 5;
  47:clock3.c      **** int rtc_year = 5;
  48:clock3.c      **** 
  49:clock3.c      **** 
  50:clock3.c      **** void rtc_set_month(int m)
  51:clock3.c      **** {
 249              		.loc 1 51 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0002 83B0     		sub	sp, sp, #12
 258              		.cfi_def_cfa_offset 16
 259 0004 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
 261 0006 7860     		str	r0, [r7, #4]
  52:clock3.c      ****     rtc_month = m;
 262              		.loc 1 52 0
 263 0008 034A     		ldr	r2, .L14
 264 000a 7B68     		ldr	r3, [r7, #4]
 265 000c 1360     		str	r3, [r2]
  53:clock3.c      **** }
 266              		.loc 1 53 0
 267 000e 0C37     		adds	r7, r7, #12
 268              		.cfi_def_cfa_offset 4
 269 0010 BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 0012 5DF8047B 		ldr	r7, [sp], #4
 273              		.cfi_restore 7
 274              		.cfi_def_cfa_offset 0
 275 0016 7047     		bx	lr
 276              	.L15:
 277              		.align	2
 278              	.L14:
 279 0018 00000000 		.word	rtc_month
 280              		.cfi_endproc
 281              	.LFE4:
 282              		.size	rtc_set_month, .-rtc_set_month
 283              		.section	.text.rtc_set_years,"ax",%progbits
 284              		.align	2
 285              		.global	rtc_set_years
 286              		.thumb
 287              		.thumb_func
 288              		.type	rtc_set_years, %function
 289              	rtc_set_years:
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 7


 290              	.LFB5:
  54:clock3.c      **** 
  55:clock3.c      **** void rtc_set_years(int y)
  56:clock3.c      **** {
 291              		.loc 1 56 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 80B4     		push	{r7}
 297              		.cfi_def_cfa_offset 4
 298              		.cfi_offset 7, -4
 299 0002 83B0     		sub	sp, sp, #12
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  57:clock3.c      ****     rtc_year = y;
 304              		.loc 1 57 0
 305 0008 034A     		ldr	r2, .L17
 306 000a 7B68     		ldr	r3, [r7, #4]
 307 000c 1360     		str	r3, [r2]
  58:clock3.c      **** }
 308              		.loc 1 58 0
 309 000e 0C37     		adds	r7, r7, #12
 310              		.cfi_def_cfa_offset 4
 311 0010 BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0012 5DF8047B 		ldr	r7, [sp], #4
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0016 7047     		bx	lr
 318              	.L18:
 319              		.align	2
 320              	.L17:
 321 0018 00000000 		.word	rtc_year
 322              		.cfi_endproc
 323              	.LFE5:
 324              		.size	rtc_set_years, .-rtc_set_years
 325              		.section	.text.rtc_is_leap_year,"ax",%progbits
 326              		.align	2
 327              		.global	rtc_is_leap_year
 328              		.thumb
 329              		.thumb_func
 330              		.type	rtc_is_leap_year, %function
 331              	rtc_is_leap_year:
 332              	.LFB6:
  59:clock3.c      **** 
  60:clock3.c      **** int rtc_is_leap_year(void)
  61:clock3.c      **** {
 333              		.loc 1 61 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 16
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 8


 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 0002 85B0     		sub	sp, sp, #20
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
  62:clock3.c      ****     //if(rtc_year % 4 == 0) && (rtc_year % 100 != 0) || (rtc_year % 400 == 0)
  63:clock3.c      ****     
  64:clock3.c      ****     int y4 = rtc_year & 0x3;
 345              		.loc 1 64 0
 346 0006 164B     		ldr	r3, .L29
 347 0008 1B68     		ldr	r3, [r3]
 348 000a 03F00303 		and	r3, r3, #3
 349 000e 7B60     		str	r3, [r7, #4]
  65:clock3.c      ****     
  66:clock3.c      ****     int y100 = rtc_year;
 350              		.loc 1 66 0
 351 0010 134B     		ldr	r3, .L29
 352 0012 1B68     		ldr	r3, [r3]
 353 0014 FB60     		str	r3, [r7, #12]
  67:clock3.c      ****     while (y100 >= 100) y100 -= 100;
 354              		.loc 1 67 0
 355 0016 02E0     		b	.L20
 356              	.L21:
 357              		.loc 1 67 0 is_stmt 0 discriminator 2
 358 0018 FB68     		ldr	r3, [r7, #12]
 359 001a 643B     		subs	r3, r3, #100
 360 001c FB60     		str	r3, [r7, #12]
 361              	.L20:
 362              		.loc 1 67 0 discriminator 1
 363 001e FB68     		ldr	r3, [r7, #12]
 364 0020 632B     		cmp	r3, #99
 365 0022 F9DC     		bgt	.L21
  68:clock3.c      ****     
  69:clock3.c      ****     int y400 = rtc_year;
 366              		.loc 1 69 0 is_stmt 1
 367 0024 0E4B     		ldr	r3, .L29
 368 0026 1B68     		ldr	r3, [r3]
 369 0028 BB60     		str	r3, [r7, #8]
  70:clock3.c      ****     while (y400 >= 400) y400 -= 400;
 370              		.loc 1 70 0
 371 002a 03E0     		b	.L22
 372              	.L23:
 373              		.loc 1 70 0 is_stmt 0 discriminator 2
 374 002c BB68     		ldr	r3, [r7, #8]
 375 002e A3F5C873 		sub	r3, r3, #400
 376 0032 BB60     		str	r3, [r7, #8]
 377              	.L22:
 378              		.loc 1 70 0 discriminator 1
 379 0034 BB68     		ldr	r3, [r7, #8]
 380 0036 B3F5C87F 		cmp	r3, #400
 381 003a F7DA     		bge	.L23
  71:clock3.c      ****     
  72:clock3.c      ****     return ((y4 == 0) && (y100 != 0)) || (y400 == 0);
 382              		.loc 1 72 0 is_stmt 1
 383 003c 7B68     		ldr	r3, [r7, #4]
 384 003e 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 9


 385 0040 02D1     		bne	.L24
 386              		.loc 1 72 0 is_stmt 0 discriminator 1
 387 0042 FB68     		ldr	r3, [r7, #12]
 388 0044 002B     		cmp	r3, #0
 389 0046 02D1     		bne	.L25
 390              	.L24:
 391              		.loc 1 72 0 discriminator 4
 392 0048 BB68     		ldr	r3, [r7, #8]
 393 004a 002B     		cmp	r3, #0
 394 004c 01D1     		bne	.L26
 395              	.L25:
 396              		.loc 1 72 0 discriminator 5
 397 004e 0123     		movs	r3, #1
 398 0050 00E0     		b	.L27
 399              	.L26:
 400              		.loc 1 72 0 discriminator 6
 401 0052 0023     		movs	r3, #0
 402              	.L27:
  73:clock3.c      **** }
 403              		.loc 1 73 0 is_stmt 1 discriminator 8
 404 0054 1846     		mov	r0, r3
 405 0056 1437     		adds	r7, r7, #20
 406              		.cfi_def_cfa_offset 4
 407 0058 BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 005a 5DF8047B 		ldr	r7, [sp], #4
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 005e 7047     		bx	lr
 414              	.L30:
 415              		.align	2
 416              	.L29:
 417 0060 00000000 		.word	rtc_year
 418              		.cfi_endproc
 419              	.LFE6:
 420              		.size	rtc_is_leap_year, .-rtc_is_leap_year
 421              		.section	.rodata
 422              		.align	2
 423              	.LC0:
 424 0000 00000000 		.word	0
 425 0004 1F000000 		.word	31
 426 0008 1C000000 		.word	28
 427 000c 1F000000 		.word	31
 428 0010 1E000000 		.word	30
 429 0014 1F000000 		.word	31
 430 0018 1E000000 		.word	30
 431 001c 1F000000 		.word	31
 432 0020 1F000000 		.word	31
 433 0024 1E000000 		.word	30
 434 0028 1F000000 		.word	31
 435 002c 1E000000 		.word	30
 436 0030 1F000000 		.word	31
 437              		.section	.text.rtc_days_in_month,"ax",%progbits
 438              		.align	2
 439              		.global	rtc_days_in_month
 440              		.thumb
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 10


 441              		.thumb_func
 442              		.type	rtc_days_in_month, %function
 443              	rtc_days_in_month:
 444              	.LFB7:
  74:clock3.c      **** 
  75:clock3.c      **** int rtc_days_in_month(void)
  76:clock3.c      **** {
 445              		.loc 1 76 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 56
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 B0B5     		push	{r4, r5, r7, lr}
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 4, -16
 452              		.cfi_offset 5, -12
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 8EB0     		sub	sp, sp, #56
 456              		.cfi_def_cfa_offset 72
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
  77:clock3.c      ****     const int days_in_month[]={0,31,28,31,30,31,30,31,31,30,31,30,31};
 459              		.loc 1 77 0
 460 0006 154B     		ldr	r3, .L35
 461 0008 3C1D     		adds	r4, r7, #4
 462 000a 1D46     		mov	r5, r3
 463 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 464 000e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 465 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 466 0012 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 467 0014 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 468 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 469 0018 2B68     		ldr	r3, [r5]
 470 001a 2360     		str	r3, [r4]
  78:clock3.c      **** 
  79:clock3.c      ****     if ((rtc_month == 2) && (rtc_is_leap_year()))
 471              		.loc 1 79 0
 472 001c 104B     		ldr	r3, .L35+4
 473 001e 1B68     		ldr	r3, [r3]
 474 0020 022B     		cmp	r3, #2
 475 0022 0ED1     		bne	.L32
 476              		.loc 1 79 0 is_stmt 0 discriminator 1
 477 0024 FFF7FEFF 		bl	rtc_is_leap_year
 478 0028 0346     		mov	r3, r0
 479 002a 002B     		cmp	r3, #0
 480 002c 09D0     		beq	.L32
  80:clock3.c      ****         return days_in_month[rtc_month] + 1;
 481              		.loc 1 80 0 is_stmt 1
 482 002e 0C4B     		ldr	r3, .L35+4
 483 0030 1B68     		ldr	r3, [r3]
 484 0032 9B00     		lsls	r3, r3, #2
 485 0034 07F13802 		add	r2, r7, #56
 486 0038 1344     		add	r3, r3, r2
 487 003a 53F8343C 		ldr	r3, [r3, #-52]
 488 003e 0133     		adds	r3, r3, #1
 489 0040 07E0     		b	.L34
 490              	.L32:
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 11


  81:clock3.c      ****     else
  82:clock3.c      ****         return days_in_month[rtc_month];
 491              		.loc 1 82 0
 492 0042 074B     		ldr	r3, .L35+4
 493 0044 1B68     		ldr	r3, [r3]
 494 0046 9B00     		lsls	r3, r3, #2
 495 0048 07F13802 		add	r2, r7, #56
 496 004c 1344     		add	r3, r3, r2
 497 004e 53F8343C 		ldr	r3, [r3, #-52]
 498              	.L34:
  83:clock3.c      **** }
 499              		.loc 1 83 0 discriminator 1
 500 0052 1846     		mov	r0, r3
 501 0054 3837     		adds	r7, r7, #56
 502              		.cfi_def_cfa_offset 16
 503 0056 BD46     		mov	sp, r7
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 0058 B0BD     		pop	{r4, r5, r7, pc}
 507              	.L36:
 508 005a 00BF     		.align	2
 509              	.L35:
 510 005c 00000000 		.word	.LC0
 511 0060 00000000 		.word	rtc_month
 512              		.cfi_endproc
 513              	.LFE7:
 514              		.size	rtc_days_in_month, .-rtc_days_in_month
 515              		.section	.text.rtc_tick,"ax",%progbits
 516              		.align	2
 517              		.global	rtc_tick
 518              		.thumb
 519              		.thumb_func
 520              		.type	rtc_tick, %function
 521              	rtc_tick:
 522              	.LFB8:
  84:clock3.c      **** 
  85:clock3.c      **** void rtc_tick(void)
  86:clock3.c      **** {
 523              		.loc 1 86 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 98B5     		push	{r3, r4, r7, lr}
 528              		.cfi_def_cfa_offset 16
 529              		.cfi_offset 3, -16
 530              		.cfi_offset 4, -12
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
  87:clock3.c      ****     rtc_sec++;
 535              		.loc 1 87 0
 536 0004 424B     		ldr	r3, .L39
 537 0006 1B68     		ldr	r3, [r3]
 538 0008 0133     		adds	r3, r3, #1
 539 000a 414A     		ldr	r2, .L39
 540 000c 1360     		str	r3, [r2]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 12


  88:clock3.c      ****     if (rtc_sec>59)
 541              		.loc 1 88 0
 542 000e 404B     		ldr	r3, .L39
 543 0010 1B68     		ldr	r3, [r3]
 544 0012 3B2B     		cmp	r3, #59
 545 0014 7BDD     		ble	.L37
  89:clock3.c      ****     {
  90:clock3.c      ****         rtc_sec = 0;
 546              		.loc 1 90 0
 547 0016 3E4B     		ldr	r3, .L39
 548 0018 0022     		movs	r2, #0
 549 001a 1A60     		str	r2, [r3]
  91:clock3.c      ****         //rtc_min++;
  92:clock3.c      ****         rtc_typef[0] = ((rtc_typef[0]+1) & 0x3F) | (rtc_typef[0] & (~0x3F));
 550              		.loc 1 92 0
 551 001c 3D4B     		ldr	r3, .L39+4
 552 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553 0020 0133     		adds	r3, r3, #1
 554 0022 DBB2     		uxtb	r3, r3
 555 0024 DBB2     		uxtb	r3, r3
 556 0026 03F03F03 		and	r3, r3, #63
 557 002a DAB2     		uxtb	r2, r3
 558 002c 394B     		ldr	r3, .L39+4
 559 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560 0030 DBB2     		uxtb	r3, r3
 561 0032 23F03F03 		bic	r3, r3, #63
 562 0036 DBB2     		uxtb	r3, r3
 563 0038 1343     		orrs	r3, r3, r2
 564 003a DBB2     		uxtb	r3, r3
 565 003c DAB2     		uxtb	r2, r3
 566 003e 354B     		ldr	r3, .L39+4
 567 0040 1A70     		strb	r2, [r3]
  93:clock3.c      ****         if (rtc_min>59)
 568              		.loc 1 93 0
 569 0042 344B     		ldr	r3, .L39+4
 570 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 571 0046 03F03F03 		and	r3, r3, #63
 572 004a 3B2B     		cmp	r3, #59
 573 004c 5FDD     		ble	.L37
  94:clock3.c      ****         {
  95:clock3.c      ****             //rtc_min = 0;
  96:clock3.c      ****             rtc_typef[0] &= ~0x3F;
 574              		.loc 1 96 0
 575 004e 314B     		ldr	r3, .L39+4
 576 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577 0052 23F03F03 		bic	r3, r3, #63
 578 0056 DAB2     		uxtb	r2, r3
 579 0058 2E4B     		ldr	r3, .L39+4
 580 005a 1A70     		strb	r2, [r3]
  97:clock3.c      ****             //rtc_hour++;
  98:clock3.c      ****             rtc_typef[1] = (rtc_typef[1] & (~0x1F)) | ((rtc_typef[1]+1) & 0x1F);
 581              		.loc 1 98 0
 582 005c 2D4B     		ldr	r3, .L39+4
 583 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 584 0060 DBB2     		uxtb	r3, r3
 585 0062 23F01F03 		bic	r3, r3, #31
 586 0066 DAB2     		uxtb	r2, r3
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 13


 587 0068 2A4B     		ldr	r3, .L39+4
 588 006a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 589 006c 0133     		adds	r3, r3, #1
 590 006e DBB2     		uxtb	r3, r3
 591 0070 DBB2     		uxtb	r3, r3
 592 0072 03F01F03 		and	r3, r3, #31
 593 0076 DBB2     		uxtb	r3, r3
 594 0078 1343     		orrs	r3, r3, r2
 595 007a DBB2     		uxtb	r3, r3
 596 007c DAB2     		uxtb	r2, r3
 597 007e 254B     		ldr	r3, .L39+4
 598 0080 5A70     		strb	r2, [r3, #1]
  99:clock3.c      ****             if (rtc_hour>23)
 599              		.loc 1 99 0
 600 0082 244B     		ldr	r3, .L39+4
 601 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 602 0086 03F01F03 		and	r3, r3, #31
 603 008a 172B     		cmp	r3, #23
 604 008c 3FDD     		ble	.L37
 100:clock3.c      ****             {
 101:clock3.c      ****                 //rtc_hour=0;
 102:clock3.c      ****                 rtc_typef[1] &= ~0x1F;
 605              		.loc 1 102 0
 606 008e 214B     		ldr	r3, .L39+4
 607 0090 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 608 0092 23F01F03 		bic	r3, r3, #31
 609 0096 DAB2     		uxtb	r2, r3
 610 0098 1E4B     		ldr	r3, .L39+4
 611 009a 5A70     		strb	r2, [r3, #1]
 103:clock3.c      ****                 //rtc_day++;
 104:clock3.c      ****                 rtc_typef[2] = (rtc_typef[2] & (~0x1F)) | ((rtc_typef[2]+1) & 0x1F);
 612              		.loc 1 104 0
 613 009c 1D4B     		ldr	r3, .L39+4
 614 009e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 615 00a0 DBB2     		uxtb	r3, r3
 616 00a2 23F01F03 		bic	r3, r3, #31
 617 00a6 DAB2     		uxtb	r2, r3
 618 00a8 1A4B     		ldr	r3, .L39+4
 619 00aa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 620 00ac 0133     		adds	r3, r3, #1
 621 00ae DBB2     		uxtb	r3, r3
 622 00b0 DBB2     		uxtb	r3, r3
 623 00b2 03F01F03 		and	r3, r3, #31
 624 00b6 DBB2     		uxtb	r3, r3
 625 00b8 1343     		orrs	r3, r3, r2
 626 00ba DBB2     		uxtb	r3, r3
 627 00bc DAB2     		uxtb	r2, r3
 628 00be 154B     		ldr	r3, .L39+4
 629 00c0 9A70     		strb	r2, [r3, #2]
 105:clock3.c      ****                 if (rtc_day > rtc_days_in_month())
 630              		.loc 1 105 0
 631 00c2 144B     		ldr	r3, .L39+4
 632 00c4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 633 00c6 03F01F04 		and	r4, r3, #31
 634 00ca FFF7FEFF 		bl	rtc_days_in_month
 635 00ce 0346     		mov	r3, r0
 636 00d0 9C42     		cmp	r4, r3
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 14


 637 00d2 1CDD     		ble	.L37
 106:clock3.c      ****                 {
 107:clock3.c      ****                     //rtc_day=1;
 108:clock3.c      ****                     rtc_typef[2] = (rtc_typef[2] & (~0x1F)) | 1;
 638              		.loc 1 108 0
 639 00d4 0F4B     		ldr	r3, .L39+4
 640 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 641 00d8 DBB2     		uxtb	r3, r3
 642 00da 23F01F03 		bic	r3, r3, #31
 643 00de DBB2     		uxtb	r3, r3
 644 00e0 43F00103 		orr	r3, r3, #1
 645 00e4 DBB2     		uxtb	r3, r3
 646 00e6 DAB2     		uxtb	r2, r3
 647 00e8 0A4B     		ldr	r3, .L39+4
 648 00ea 9A70     		strb	r2, [r3, #2]
 109:clock3.c      ****                     rtc_month++;
 649              		.loc 1 109 0
 650 00ec 0A4B     		ldr	r3, .L39+8
 651 00ee 1B68     		ldr	r3, [r3]
 652 00f0 0133     		adds	r3, r3, #1
 653 00f2 094A     		ldr	r2, .L39+8
 654 00f4 1360     		str	r3, [r2]
 110:clock3.c      ****                     if (rtc_month>12)
 655              		.loc 1 110 0
 656 00f6 084B     		ldr	r3, .L39+8
 657 00f8 1B68     		ldr	r3, [r3]
 658 00fa 0C2B     		cmp	r3, #12
 659 00fc 07DD     		ble	.L37
 111:clock3.c      ****                     {
 112:clock3.c      ****                         rtc_month = 1;
 660              		.loc 1 112 0
 661 00fe 064B     		ldr	r3, .L39+8
 662 0100 0122     		movs	r2, #1
 663 0102 1A60     		str	r2, [r3]
 113:clock3.c      ****                         rtc_year++;
 664              		.loc 1 113 0
 665 0104 054B     		ldr	r3, .L39+12
 666 0106 1B68     		ldr	r3, [r3]
 667 0108 0133     		adds	r3, r3, #1
 668 010a 044A     		ldr	r2, .L39+12
 669 010c 1360     		str	r3, [r2]
 670              	.L37:
 114:clock3.c      ****                     }
 115:clock3.c      ****                 }
 116:clock3.c      ****             }
 117:clock3.c      ****         }
 118:clock3.c      ****     }
 119:clock3.c      **** }
 671              		.loc 1 119 0
 672 010e 98BD     		pop	{r3, r4, r7, pc}
 673              	.L40:
 674              		.align	2
 675              	.L39:
 676 0110 00000000 		.word	rtc_sec
 677 0114 00000000 		.word	rtc_typef
 678 0118 00000000 		.word	rtc_month
 679 011c 00000000 		.word	rtc_year
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 15


 680              		.cfi_endproc
 681              	.LFE8:
 682              		.size	rtc_tick, .-rtc_tick
 683              		.section	.rodata
 684              		.align	2
 685              	.LC1:
 686 0034 25730D0A 		.ascii	"%s\015\012 line %d in %s\000"
 686      206C696E 
 686      65202564 
 686      20696E20 
 686      257300
 687 0047 00       		.align	2
 688              	.LC2:
 689 0048 696E6974 		.ascii	"initialize RTC seconds to 0\000"
 689      69616C69 
 689      7A652052 
 689      54432073 
 689      65636F6E 
 690              		.align	2
 691              	.LC3:
 692 0064 636C6F63 		.ascii	"clock3.c\000"
 692      6B332E63 
 692      00
 693 006d 000000   		.align	2
 694              	.LC4:
 695 0070 696E6974 		.ascii	"initialize RTC seconds to 1\000"
 695      69616C69 
 695      7A652052 
 695      54432073 
 695      65636F6E 
 696              		.align	2
 697              	.LC5:
 698 008c 696E6372 		.ascii	"increment RTC seconds by 1 (1->2)\000"
 698      656D656E 
 698      74205254 
 698      43207365 
 698      636F6E64 
 699 00ae 0000     		.align	2
 700              	.LC6:
 701 00b0 68616E64 		.ascii	"handle RTC seconds overflow (59->0)\000"
 701      6C652052 
 701      54432073 
 701      65636F6E 
 701      6473206F 
 702              		.section	.text.test_rtc_sec,"ax",%progbits
 703              		.align	2
 704              		.global	test_rtc_sec
 705              		.thumb
 706              		.thumb_func
 707              		.type	test_rtc_sec, %function
 708              	test_rtc_sec:
 709              	.LFB9:
 120:clock3.c      **** 
 121:clock3.c      **** /*******************************************************************************/
 122:clock3.c      ****  
 123:clock3.c      **** char * test_rtc_sec() {
 710              		.loc 1 123 0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 16


 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 02AF     		add	r7, sp, #8
 721              		.cfi_def_cfa 7, 8
 124:clock3.c      ****     rtc_set_seconds(0);
 722              		.loc 1 124 0
 723 0006 0020     		movs	r0, #0
 724 0008 FFF7FEFF 		bl	rtc_set_seconds
 125:clock3.c      ****     it("initialize RTC seconds to 0", rtc_sec == 0);
 725              		.loc 1 125 0
 726 000c 364B     		ldr	r3, .L48
 727 000e 1B68     		ldr	r3, [r3]
 728 0010 0133     		adds	r3, r3, #1
 729 0012 354A     		ldr	r2, .L48
 730 0014 1360     		str	r3, [r2]
 731 0016 354B     		ldr	r3, .L48+4
 732 0018 1B68     		ldr	r3, [r3]
 733 001a 002B     		cmp	r3, #0
 734 001c 09D0     		beq	.L42
 735              		.loc 1 125 0 is_stmt 0 discriminator 1
 736 001e 344B     		ldr	r3, .L48+8
 737 0020 0093     		str	r3, [sp]
 738 0022 3448     		ldr	r0, .L48+12
 739 0024 3449     		ldr	r1, .L48+16
 740 0026 354A     		ldr	r2, .L48+20
 741 0028 7D23     		movs	r3, #125
 742 002a FFF7FEFF 		bl	sprintf
 743 002e 314B     		ldr	r3, .L48+12
 744 0030 56E0     		b	.L43
 745              	.L42:
 126:clock3.c      ****     rtc_set_seconds(1);
 746              		.loc 1 126 0 is_stmt 1
 747 0032 0120     		movs	r0, #1
 748 0034 FFF7FEFF 		bl	rtc_set_seconds
 127:clock3.c      ****     it("initialize RTC seconds to 1", rtc_sec == 1);
 749              		.loc 1 127 0
 750 0038 2B4B     		ldr	r3, .L48
 751 003a 1B68     		ldr	r3, [r3]
 752 003c 0133     		adds	r3, r3, #1
 753 003e 2A4A     		ldr	r2, .L48
 754 0040 1360     		str	r3, [r2]
 755 0042 2A4B     		ldr	r3, .L48+4
 756 0044 1B68     		ldr	r3, [r3]
 757 0046 012B     		cmp	r3, #1
 758 0048 09D0     		beq	.L44
 759              		.loc 1 127 0 is_stmt 0 discriminator 1
 760 004a 294B     		ldr	r3, .L48+8
 761 004c 0093     		str	r3, [sp]
 762 004e 2948     		ldr	r0, .L48+12
 763 0050 2949     		ldr	r1, .L48+16
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 17


 764 0052 2B4A     		ldr	r2, .L48+24
 765 0054 7F23     		movs	r3, #127
 766 0056 FFF7FEFF 		bl	sprintf
 767 005a 264B     		ldr	r3, .L48+12
 768 005c 40E0     		b	.L43
 769              	.L44:
 128:clock3.c      ****     rtc_tick();
 770              		.loc 1 128 0 is_stmt 1
 771 005e FFF7FEFF 		bl	rtc_tick
 129:clock3.c      ****     it("increment RTC seconds by 1 (1->2)", rtc_sec == 2);
 772              		.loc 1 129 0
 773 0062 214B     		ldr	r3, .L48
 774 0064 1B68     		ldr	r3, [r3]
 775 0066 0133     		adds	r3, r3, #1
 776 0068 1F4A     		ldr	r2, .L48
 777 006a 1360     		str	r3, [r2]
 778 006c 1F4B     		ldr	r3, .L48+4
 779 006e 1B68     		ldr	r3, [r3]
 780 0070 022B     		cmp	r3, #2
 781 0072 09D0     		beq	.L45
 782              		.loc 1 129 0 is_stmt 0 discriminator 1
 783 0074 1E4B     		ldr	r3, .L48+8
 784 0076 0093     		str	r3, [sp]
 785 0078 1E48     		ldr	r0, .L48+12
 786 007a 1F49     		ldr	r1, .L48+16
 787 007c 214A     		ldr	r2, .L48+28
 788 007e 8123     		movs	r3, #129
 789 0080 FFF7FEFF 		bl	sprintf
 790 0084 1B4B     		ldr	r3, .L48+12
 791 0086 2BE0     		b	.L43
 792              	.L45:
 130:clock3.c      ****     rtc_set_seconds(59);
 793              		.loc 1 130 0 is_stmt 1
 794 0088 3B20     		movs	r0, #59
 795 008a FFF7FEFF 		bl	rtc_set_seconds
 131:clock3.c      ****     it("initialize RTC seconds to 0", rtc_sec == 59);
 796              		.loc 1 131 0
 797 008e 164B     		ldr	r3, .L48
 798 0090 1B68     		ldr	r3, [r3]
 799 0092 0133     		adds	r3, r3, #1
 800 0094 144A     		ldr	r2, .L48
 801 0096 1360     		str	r3, [r2]
 802 0098 144B     		ldr	r3, .L48+4
 803 009a 1B68     		ldr	r3, [r3]
 804 009c 3B2B     		cmp	r3, #59
 805 009e 09D0     		beq	.L46
 806              		.loc 1 131 0 is_stmt 0 discriminator 1
 807 00a0 134B     		ldr	r3, .L48+8
 808 00a2 0093     		str	r3, [sp]
 809 00a4 1348     		ldr	r0, .L48+12
 810 00a6 1449     		ldr	r1, .L48+16
 811 00a8 144A     		ldr	r2, .L48+20
 812 00aa 8323     		movs	r3, #131
 813 00ac FFF7FEFF 		bl	sprintf
 814 00b0 104B     		ldr	r3, .L48+12
 815 00b2 15E0     		b	.L43
 816              	.L46:
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 18


 132:clock3.c      ****     rtc_tick();
 817              		.loc 1 132 0 is_stmt 1
 818 00b4 FFF7FEFF 		bl	rtc_tick
 133:clock3.c      ****     it("handle RTC seconds overflow (59->0)", rtc_sec == 0);
 819              		.loc 1 133 0
 820 00b8 0B4B     		ldr	r3, .L48
 821 00ba 1B68     		ldr	r3, [r3]
 822 00bc 0133     		adds	r3, r3, #1
 823 00be 0A4A     		ldr	r2, .L48
 824 00c0 1360     		str	r3, [r2]
 825 00c2 0A4B     		ldr	r3, .L48+4
 826 00c4 1B68     		ldr	r3, [r3]
 827 00c6 002B     		cmp	r3, #0
 828 00c8 09D0     		beq	.L47
 829              		.loc 1 133 0 is_stmt 0 discriminator 1
 830 00ca 094B     		ldr	r3, .L48+8
 831 00cc 0093     		str	r3, [sp]
 832 00ce 0948     		ldr	r0, .L48+12
 833 00d0 0949     		ldr	r1, .L48+16
 834 00d2 0D4A     		ldr	r2, .L48+32
 835 00d4 8523     		movs	r3, #133
 836 00d6 FFF7FEFF 		bl	sprintf
 837 00da 064B     		ldr	r3, .L48+12
 838 00dc 00E0     		b	.L43
 839              	.L47:
 134:clock3.c      ****     return 0;
 840              		.loc 1 134 0 is_stmt 1
 841 00de 0023     		movs	r3, #0
 842              	.L43:
 135:clock3.c      **** }
 843              		.loc 1 135 0
 844 00e0 1846     		mov	r0, r3
 845 00e2 BD46     		mov	sp, r7
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 00e4 80BD     		pop	{r7, pc}
 849              	.L49:
 850 00e6 00BF     		.align	2
 851              	.L48:
 852 00e8 00000000 		.word	assertion_count
 853 00ec 00000000 		.word	rtc_sec
 854 00f0 64000000 		.word	.LC3
 855 00f4 00000000 		.word	text
 856 00f8 34000000 		.word	.LC1
 857 00fc 48000000 		.word	.LC2
 858 0100 70000000 		.word	.LC4
 859 0104 8C000000 		.word	.LC5
 860 0108 B0000000 		.word	.LC6
 861              		.cfi_endproc
 862              	.LFE9:
 863              		.size	test_rtc_sec, .-test_rtc_sec
 864              		.section	.rodata
 865              		.align	2
 866              	.LC7:
 867 00d4 696E6974 		.ascii	"initialize RTC minutes to 0\000"
 867      69616C69 
 867      7A652052 
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 19


 867      5443206D 
 867      696E7574 
 868              		.align	2
 869              	.LC8:
 870 00f0 696E6974 		.ascii	"initialize RTC minutes to 1\000"
 870      69616C69 
 870      7A652052 
 870      5443206D 
 870      696E7574 
 871              		.align	2
 872              	.LC9:
 873 010c 696E6372 		.ascii	"increment RTC minutes by 1 (1->2)\000"
 873      656D656E 
 873      74205254 
 873      43206D69 
 873      6E757465 
 874 012e 0000     		.align	2
 875              	.LC10:
 876 0130 68616E64 		.ascii	"handle RTC minutes overflow (59->0)\000"
 876      6C652052 
 876      5443206D 
 876      696E7574 
 876      6573206F 
 877              		.section	.text.test_rtc_min,"ax",%progbits
 878              		.align	2
 879              		.global	test_rtc_min
 880              		.thumb
 881              		.thumb_func
 882              		.type	test_rtc_min, %function
 883              	test_rtc_min:
 884              	.LFB10:
 136:clock3.c      **** 
 137:clock3.c      **** char * test_rtc_min() {
 885              		.loc 1 137 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 02AF     		add	r7, sp, #8
 896              		.cfi_def_cfa 7, 8
 138:clock3.c      ****     rtc_set_minutes(0);
 897              		.loc 1 138 0
 898 0006 0020     		movs	r0, #0
 899 0008 FFF7FEFF 		bl	rtc_set_minutes
 139:clock3.c      ****     it("initialize RTC minutes to 0", rtc_min == 0);
 900              		.loc 1 139 0
 901 000c 334B     		ldr	r3, .L56
 902 000e 1B68     		ldr	r3, [r3]
 903 0010 0133     		adds	r3, r3, #1
 904 0012 324A     		ldr	r2, .L56
 905 0014 1360     		str	r3, [r2]
 906 0016 324B     		ldr	r3, .L56+4
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 20


 907 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 001a 03F03F03 		and	r3, r3, #63
 909 001e 002B     		cmp	r3, #0
 910 0020 09D0     		beq	.L51
 911              		.loc 1 139 0 is_stmt 0 discriminator 1
 912 0022 304B     		ldr	r3, .L56+8
 913 0024 0093     		str	r3, [sp]
 914 0026 3048     		ldr	r0, .L56+12
 915 0028 3049     		ldr	r1, .L56+16
 916 002a 314A     		ldr	r2, .L56+20
 917 002c 8B23     		movs	r3, #139
 918 002e FFF7FEFF 		bl	sprintf
 919 0032 2D4B     		ldr	r3, .L56+12
 920 0034 4FE0     		b	.L52
 921              	.L51:
 140:clock3.c      ****     rtc_set_minutes(1);
 922              		.loc 1 140 0 is_stmt 1
 923 0036 0120     		movs	r0, #1
 924 0038 FFF7FEFF 		bl	rtc_set_minutes
 141:clock3.c      ****     it("initialize RTC minutes to 1", rtc_min == 1);
 925              		.loc 1 141 0
 926 003c 274B     		ldr	r3, .L56
 927 003e 1B68     		ldr	r3, [r3]
 928 0040 0133     		adds	r3, r3, #1
 929 0042 264A     		ldr	r2, .L56
 930 0044 1360     		str	r3, [r2]
 931 0046 264B     		ldr	r3, .L56+4
 932 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 004a 03F03F03 		and	r3, r3, #63
 934 004e 012B     		cmp	r3, #1
 935 0050 09D0     		beq	.L53
 936              		.loc 1 141 0 is_stmt 0 discriminator 1
 937 0052 244B     		ldr	r3, .L56+8
 938 0054 0093     		str	r3, [sp]
 939 0056 2448     		ldr	r0, .L56+12
 940 0058 2449     		ldr	r1, .L56+16
 941 005a 264A     		ldr	r2, .L56+24
 942 005c 8D23     		movs	r3, #141
 943 005e FFF7FEFF 		bl	sprintf
 944 0062 214B     		ldr	r3, .L56+12
 945 0064 37E0     		b	.L52
 946              	.L53:
 142:clock3.c      ****     rtc_set_seconds(59);
 947              		.loc 1 142 0 is_stmt 1
 948 0066 3B20     		movs	r0, #59
 949 0068 FFF7FEFF 		bl	rtc_set_seconds
 143:clock3.c      ****     rtc_tick();
 950              		.loc 1 143 0
 951 006c FFF7FEFF 		bl	rtc_tick
 144:clock3.c      ****     it("increment RTC minutes by 1 (1->2)", rtc_min == 2);
 952              		.loc 1 144 0
 953 0070 1A4B     		ldr	r3, .L56
 954 0072 1B68     		ldr	r3, [r3]
 955 0074 0133     		adds	r3, r3, #1
 956 0076 194A     		ldr	r2, .L56
 957 0078 1360     		str	r3, [r2]
 958 007a 194B     		ldr	r3, .L56+4
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 21


 959 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 007e 03F03F03 		and	r3, r3, #63
 961 0082 022B     		cmp	r3, #2
 962 0084 09D0     		beq	.L54
 963              		.loc 1 144 0 is_stmt 0 discriminator 1
 964 0086 174B     		ldr	r3, .L56+8
 965 0088 0093     		str	r3, [sp]
 966 008a 1748     		ldr	r0, .L56+12
 967 008c 1749     		ldr	r1, .L56+16
 968 008e 1A4A     		ldr	r2, .L56+28
 969 0090 9023     		movs	r3, #144
 970 0092 FFF7FEFF 		bl	sprintf
 971 0096 144B     		ldr	r3, .L56+12
 972 0098 1DE0     		b	.L52
 973              	.L54:
 145:clock3.c      ****     rtc_set_minutes(59);
 974              		.loc 1 145 0 is_stmt 1
 975 009a 3B20     		movs	r0, #59
 976 009c FFF7FEFF 		bl	rtc_set_minutes
 146:clock3.c      ****     rtc_set_seconds(59);
 977              		.loc 1 146 0
 978 00a0 3B20     		movs	r0, #59
 979 00a2 FFF7FEFF 		bl	rtc_set_seconds
 147:clock3.c      ****     rtc_tick();
 980              		.loc 1 147 0
 981 00a6 FFF7FEFF 		bl	rtc_tick
 148:clock3.c      ****     it("handle RTC minutes overflow (59->0)", rtc_min == 0);
 982              		.loc 1 148 0
 983 00aa 0C4B     		ldr	r3, .L56
 984 00ac 1B68     		ldr	r3, [r3]
 985 00ae 0133     		adds	r3, r3, #1
 986 00b0 0A4A     		ldr	r2, .L56
 987 00b2 1360     		str	r3, [r2]
 988 00b4 0A4B     		ldr	r3, .L56+4
 989 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 00b8 03F03F03 		and	r3, r3, #63
 991 00bc 002B     		cmp	r3, #0
 992 00be 09D0     		beq	.L55
 993              		.loc 1 148 0 is_stmt 0 discriminator 1
 994 00c0 084B     		ldr	r3, .L56+8
 995 00c2 0093     		str	r3, [sp]
 996 00c4 0848     		ldr	r0, .L56+12
 997 00c6 0949     		ldr	r1, .L56+16
 998 00c8 0C4A     		ldr	r2, .L56+32
 999 00ca 9423     		movs	r3, #148
 1000 00cc FFF7FEFF 		bl	sprintf
 1001 00d0 054B     		ldr	r3, .L56+12
 1002 00d2 00E0     		b	.L52
 1003              	.L55:
 149:clock3.c      ****     return 0;
 1004              		.loc 1 149 0 is_stmt 1
 1005 00d4 0023     		movs	r3, #0
 1006              	.L52:
 150:clock3.c      **** }
 1007              		.loc 1 150 0
 1008 00d6 1846     		mov	r0, r3
 1009 00d8 BD46     		mov	sp, r7
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 22


 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 00da 80BD     		pop	{r7, pc}
 1013              	.L57:
 1014              		.align	2
 1015              	.L56:
 1016 00dc 00000000 		.word	assertion_count
 1017 00e0 00000000 		.word	rtc_typef
 1018 00e4 64000000 		.word	.LC3
 1019 00e8 00000000 		.word	text
 1020 00ec 34000000 		.word	.LC1
 1021 00f0 D4000000 		.word	.LC7
 1022 00f4 F0000000 		.word	.LC8
 1023 00f8 0C010000 		.word	.LC9
 1024 00fc 30010000 		.word	.LC10
 1025              		.cfi_endproc
 1026              	.LFE10:
 1027              		.size	test_rtc_min, .-test_rtc_min
 1028              		.section	.rodata
 1029              		.align	2
 1030              	.LC11:
 1031 0154 696E6372 		.ascii	"increment RTC hours by 1 (1->2)\000"
 1031      656D656E 
 1031      74205254 
 1031      4320686F 
 1031      75727320 
 1032              		.align	2
 1033              	.LC12:
 1034 0174 696E6974 		.ascii	"initialize RTC hours to 23\000"
 1034      69616C69 
 1034      7A652052 
 1034      54432068 
 1034      6F757273 
 1035 018f 00       		.align	2
 1036              	.LC13:
 1037 0190 68616E64 		.ascii	"handle RTC hours overflow (23->0)\000"
 1037      6C652052 
 1037      54432068 
 1037      6F757273 
 1037      206F7665 
 1038              		.section	.text.test_rtc_hour,"ax",%progbits
 1039              		.align	2
 1040              		.global	test_rtc_hour
 1041              		.thumb
 1042              		.thumb_func
 1043              		.type	test_rtc_hour, %function
 1044              	test_rtc_hour:
 1045              	.LFB11:
 151:clock3.c      **** 
 152:clock3.c      **** char * test_rtc_hour() {
 1046              		.loc 1 152 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 1, uses_anonymous_args = 0
 1050 0000 80B5     		push	{r7, lr}
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 7, -8
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 23


 1053              		.cfi_offset 14, -4
 1054 0002 82B0     		sub	sp, sp, #8
 1055              		.cfi_def_cfa_offset 16
 1056 0004 02AF     		add	r7, sp, #8
 1057              		.cfi_def_cfa 7, 8
 153:clock3.c      ****     rtc_set_hour(0);
 1058              		.loc 1 153 0
 1059 0006 0020     		movs	r0, #0
 1060 0008 FFF7FEFF 		bl	rtc_set_hour
 154:clock3.c      ****     it("initialize RTC minutes to 0", rtc_hour == 0);
 1061              		.loc 1 154 0
 1062 000c 414B     		ldr	r3, .L65
 1063 000e 1B68     		ldr	r3, [r3]
 1064 0010 0133     		adds	r3, r3, #1
 1065 0012 404A     		ldr	r2, .L65
 1066 0014 1360     		str	r3, [r2]
 1067 0016 404B     		ldr	r3, .L65+4
 1068 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1069 001a 03F01F03 		and	r3, r3, #31
 1070 001e 002B     		cmp	r3, #0
 1071 0020 09D0     		beq	.L59
 1072              		.loc 1 154 0 is_stmt 0 discriminator 1
 1073 0022 3E4B     		ldr	r3, .L65+8
 1074 0024 0093     		str	r3, [sp]
 1075 0026 3E48     		ldr	r0, .L65+12
 1076 0028 3E49     		ldr	r1, .L65+16
 1077 002a 3F4A     		ldr	r2, .L65+20
 1078 002c 9A23     		movs	r3, #154
 1079 002e FFF7FEFF 		bl	sprintf
 1080 0032 3B4B     		ldr	r3, .L65+12
 1081 0034 6AE0     		b	.L60
 1082              	.L59:
 155:clock3.c      ****     rtc_set_hour(1);
 1083              		.loc 1 155 0 is_stmt 1
 1084 0036 0120     		movs	r0, #1
 1085 0038 FFF7FEFF 		bl	rtc_set_hour
 156:clock3.c      ****     it("initialize RTC minutes to 1", rtc_hour == 1);
 1086              		.loc 1 156 0
 1087 003c 354B     		ldr	r3, .L65
 1088 003e 1B68     		ldr	r3, [r3]
 1089 0040 0133     		adds	r3, r3, #1
 1090 0042 344A     		ldr	r2, .L65
 1091 0044 1360     		str	r3, [r2]
 1092 0046 344B     		ldr	r3, .L65+4
 1093 0048 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1094 004a 03F01F03 		and	r3, r3, #31
 1095 004e 012B     		cmp	r3, #1
 1096 0050 09D0     		beq	.L61
 1097              		.loc 1 156 0 is_stmt 0 discriminator 1
 1098 0052 324B     		ldr	r3, .L65+8
 1099 0054 0093     		str	r3, [sp]
 1100 0056 3248     		ldr	r0, .L65+12
 1101 0058 3249     		ldr	r1, .L65+16
 1102 005a 344A     		ldr	r2, .L65+24
 1103 005c 9C23     		movs	r3, #156
 1104 005e FFF7FEFF 		bl	sprintf
 1105 0062 2F4B     		ldr	r3, .L65+12
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 24


 1106 0064 52E0     		b	.L60
 1107              	.L61:
 157:clock3.c      ****     rtc_set_minutes(59);
 1108              		.loc 1 157 0 is_stmt 1
 1109 0066 3B20     		movs	r0, #59
 1110 0068 FFF7FEFF 		bl	rtc_set_minutes
 158:clock3.c      ****     rtc_set_seconds(59);
 1111              		.loc 1 158 0
 1112 006c 3B20     		movs	r0, #59
 1113 006e FFF7FEFF 		bl	rtc_set_seconds
 159:clock3.c      ****     rtc_tick();
 1114              		.loc 1 159 0
 1115 0072 FFF7FEFF 		bl	rtc_tick
 160:clock3.c      ****     it("increment RTC hours by 1 (1->2)", rtc_hour == 2);
 1116              		.loc 1 160 0
 1117 0076 274B     		ldr	r3, .L65
 1118 0078 1B68     		ldr	r3, [r3]
 1119 007a 0133     		adds	r3, r3, #1
 1120 007c 254A     		ldr	r2, .L65
 1121 007e 1360     		str	r3, [r2]
 1122 0080 254B     		ldr	r3, .L65+4
 1123 0082 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1124 0084 03F01F03 		and	r3, r3, #31
 1125 0088 022B     		cmp	r3, #2
 1126 008a 09D0     		beq	.L62
 1127              		.loc 1 160 0 is_stmt 0 discriminator 1
 1128 008c 234B     		ldr	r3, .L65+8
 1129 008e 0093     		str	r3, [sp]
 1130 0090 2348     		ldr	r0, .L65+12
 1131 0092 2449     		ldr	r1, .L65+16
 1132 0094 264A     		ldr	r2, .L65+28
 1133 0096 A023     		movs	r3, #160
 1134 0098 FFF7FEFF 		bl	sprintf
 1135 009c 204B     		ldr	r3, .L65+12
 1136 009e 35E0     		b	.L60
 1137              	.L62:
 161:clock3.c      ****     rtc_set_minutes(59);
 1138              		.loc 1 161 0 is_stmt 1
 1139 00a0 3B20     		movs	r0, #59
 1140 00a2 FFF7FEFF 		bl	rtc_set_minutes
 162:clock3.c      ****     rtc_set_seconds(59);
 1141              		.loc 1 162 0
 1142 00a6 3B20     		movs	r0, #59
 1143 00a8 FFF7FEFF 		bl	rtc_set_seconds
 163:clock3.c      ****     rtc_set_hour(23);
 1144              		.loc 1 163 0
 1145 00ac 1720     		movs	r0, #23
 1146 00ae FFF7FEFF 		bl	rtc_set_hour
 164:clock3.c      ****     it("initialize RTC hours to 23", rtc_hour == 23);
 1147              		.loc 1 164 0
 1148 00b2 184B     		ldr	r3, .L65
 1149 00b4 1B68     		ldr	r3, [r3]
 1150 00b6 0133     		adds	r3, r3, #1
 1151 00b8 164A     		ldr	r2, .L65
 1152 00ba 1360     		str	r3, [r2]
 1153 00bc 164B     		ldr	r3, .L65+4
 1154 00be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 25


 1155 00c0 03F01F03 		and	r3, r3, #31
 1156 00c4 172B     		cmp	r3, #23
 1157 00c6 09D0     		beq	.L63
 1158              		.loc 1 164 0 is_stmt 0 discriminator 1
 1159 00c8 144B     		ldr	r3, .L65+8
 1160 00ca 0093     		str	r3, [sp]
 1161 00cc 1448     		ldr	r0, .L65+12
 1162 00ce 1549     		ldr	r1, .L65+16
 1163 00d0 184A     		ldr	r2, .L65+32
 1164 00d2 A423     		movs	r3, #164
 1165 00d4 FFF7FEFF 		bl	sprintf
 1166 00d8 114B     		ldr	r3, .L65+12
 1167 00da 17E0     		b	.L60
 1168              	.L63:
 165:clock3.c      ****     rtc_tick();
 1169              		.loc 1 165 0 is_stmt 1
 1170 00dc FFF7FEFF 		bl	rtc_tick
 166:clock3.c      ****     it("handle RTC hours overflow (23->0)", rtc_hour == 0);
 1171              		.loc 1 166 0
 1172 00e0 0C4B     		ldr	r3, .L65
 1173 00e2 1B68     		ldr	r3, [r3]
 1174 00e4 0133     		adds	r3, r3, #1
 1175 00e6 0B4A     		ldr	r2, .L65
 1176 00e8 1360     		str	r3, [r2]
 1177 00ea 0B4B     		ldr	r3, .L65+4
 1178 00ec 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1179 00ee 03F01F03 		and	r3, r3, #31
 1180 00f2 002B     		cmp	r3, #0
 1181 00f4 09D0     		beq	.L64
 1182              		.loc 1 166 0 is_stmt 0 discriminator 1
 1183 00f6 094B     		ldr	r3, .L65+8
 1184 00f8 0093     		str	r3, [sp]
 1185 00fa 0948     		ldr	r0, .L65+12
 1186 00fc 0949     		ldr	r1, .L65+16
 1187 00fe 0E4A     		ldr	r2, .L65+36
 1188 0100 A623     		movs	r3, #166
 1189 0102 FFF7FEFF 		bl	sprintf
 1190 0106 064B     		ldr	r3, .L65+12
 1191 0108 00E0     		b	.L60
 1192              	.L64:
 167:clock3.c      ****     return 0;
 1193              		.loc 1 167 0 is_stmt 1
 1194 010a 0023     		movs	r3, #0
 1195              	.L60:
 168:clock3.c      **** }
 1196              		.loc 1 168 0
 1197 010c 1846     		mov	r0, r3
 1198 010e BD46     		mov	sp, r7
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 0110 80BD     		pop	{r7, pc}
 1202              	.L66:
 1203 0112 00BF     		.align	2
 1204              	.L65:
 1205 0114 00000000 		.word	assertion_count
 1206 0118 00000000 		.word	rtc_typef
 1207 011c 64000000 		.word	.LC3
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 26


 1208 0120 00000000 		.word	text
 1209 0124 34000000 		.word	.LC1
 1210 0128 D4000000 		.word	.LC7
 1211 012c F0000000 		.word	.LC8
 1212 0130 54010000 		.word	.LC11
 1213 0134 74010000 		.word	.LC12
 1214 0138 90010000 		.word	.LC13
 1215              		.cfi_endproc
 1216              	.LFE11:
 1217              		.size	test_rtc_hour, .-test_rtc_hour
 1218              		.section	.rodata
 1219 01b2 0000     		.align	2
 1220              	.LC14:
 1221 01b4 696E6372 		.ascii	"increment RTC days by 1 (1->2)\000"
 1221      656D656E 
 1221      74205254 
 1221      43206461 
 1221      79732062 
 1222 01d3 00       		.align	2
 1223              	.LC15:
 1224 01d4 696E6974 		.ascii	"initialize RTC days to 31\000"
 1224      69616C69 
 1224      7A652052 
 1224      54432064 
 1224      61797320 
 1225 01ee 0000     		.align	2
 1226              	.LC16:
 1227 01f0 696E6974 		.ascii	"initialize RTC month to 1\000"
 1227      69616C69 
 1227      7A652052 
 1227      5443206D 
 1227      6F6E7468 
 1228 020a 0000     		.align	2
 1229              	.LC17:
 1230 020c 68616E64 		.ascii	"handle RTC days overflow (31->1)\000"
 1230      6C652052 
 1230      54432064 
 1230      61797320 
 1230      6F766572 
 1231 022d 000000   		.align	2
 1232              	.LC18:
 1233 0230 696E6372 		.ascii	"increment RTC month (1->2)\000"
 1233      656D656E 
 1233      74205254 
 1233      43206D6F 
 1233      6E746820 
 1234              		.section	.text.test_rtc_days_months,"ax",%progbits
 1235              		.align	2
 1236              		.global	test_rtc_days_months
 1237              		.thumb
 1238              		.thumb_func
 1239              		.type	test_rtc_days_months, %function
 1240              	test_rtc_days_months:
 1241              	.LFB12:
 169:clock3.c      **** 
 170:clock3.c      **** char * test_rtc_days_months() {
 1242              		.loc 1 170 0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 27


 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 82B0     		sub	sp, sp, #8
 1251              		.cfi_def_cfa_offset 16
 1252 0004 02AF     		add	r7, sp, #8
 1253              		.cfi_def_cfa 7, 8
 171:clock3.c      ****     rtc_set_day(0);
 1254              		.loc 1 171 0
 1255 0006 0020     		movs	r0, #0
 1256 0008 FFF7FEFF 		bl	rtc_set_day
 172:clock3.c      ****     it("initialize RTC minutes to 0", rtc_day == 0);
 1257              		.loc 1 172 0
 1258 000c 7E4B     		ldr	r3, .L79
 1259 000e 1B68     		ldr	r3, [r3]
 1260 0010 0133     		adds	r3, r3, #1
 1261 0012 7D4A     		ldr	r2, .L79
 1262 0014 1360     		str	r3, [r2]
 1263 0016 7D4B     		ldr	r3, .L79+4
 1264 0018 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1265 001a 03F01F03 		and	r3, r3, #31
 1266 001e 002B     		cmp	r3, #0
 1267 0020 09D0     		beq	.L68
 1268              		.loc 1 172 0 is_stmt 0 discriminator 1
 1269 0022 7B4B     		ldr	r3, .L79+8
 1270 0024 0093     		str	r3, [sp]
 1271 0026 7B48     		ldr	r0, .L79+12
 1272 0028 7B49     		ldr	r1, .L79+16
 1273 002a 7C4A     		ldr	r2, .L79+20
 1274 002c AC23     		movs	r3, #172
 1275 002e FFF7FEFF 		bl	sprintf
 1276 0032 784B     		ldr	r3, .L79+12
 1277 0034 E5E0     		b	.L69
 1278              	.L68:
 173:clock3.c      ****     rtc_set_day(1);
 1279              		.loc 1 173 0 is_stmt 1
 1280 0036 0120     		movs	r0, #1
 1281 0038 FFF7FEFF 		bl	rtc_set_day
 174:clock3.c      ****     it("initialize RTC minutes to 1", rtc_day == 1);
 1282              		.loc 1 174 0
 1283 003c 724B     		ldr	r3, .L79
 1284 003e 1B68     		ldr	r3, [r3]
 1285 0040 0133     		adds	r3, r3, #1
 1286 0042 714A     		ldr	r2, .L79
 1287 0044 1360     		str	r3, [r2]
 1288 0046 714B     		ldr	r3, .L79+4
 1289 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1290 004a 03F01F03 		and	r3, r3, #31
 1291 004e 012B     		cmp	r3, #1
 1292 0050 09D0     		beq	.L70
 1293              		.loc 1 174 0 is_stmt 0 discriminator 1
 1294 0052 6F4B     		ldr	r3, .L79+8
 1295 0054 0093     		str	r3, [sp]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 28


 1296 0056 6F48     		ldr	r0, .L79+12
 1297 0058 6F49     		ldr	r1, .L79+16
 1298 005a 714A     		ldr	r2, .L79+24
 1299 005c AE23     		movs	r3, #174
 1300 005e FFF7FEFF 		bl	sprintf
 1301 0062 6C4B     		ldr	r3, .L79+12
 1302 0064 CDE0     		b	.L69
 1303              	.L70:
 175:clock3.c      ****     rtc_set_minutes(59);
 1304              		.loc 1 175 0 is_stmt 1
 1305 0066 3B20     		movs	r0, #59
 1306 0068 FFF7FEFF 		bl	rtc_set_minutes
 176:clock3.c      ****     rtc_set_seconds(59);
 1307              		.loc 1 176 0
 1308 006c 3B20     		movs	r0, #59
 1309 006e FFF7FEFF 		bl	rtc_set_seconds
 177:clock3.c      ****     rtc_set_hour(23);
 1310              		.loc 1 177 0
 1311 0072 1720     		movs	r0, #23
 1312 0074 FFF7FEFF 		bl	rtc_set_hour
 178:clock3.c      ****     rtc_tick();
 1313              		.loc 1 178 0
 1314 0078 FFF7FEFF 		bl	rtc_tick
 179:clock3.c      ****     it("increment RTC days by 1 (1->2)", rtc_day == 2);
 1315              		.loc 1 179 0
 1316 007c 624B     		ldr	r3, .L79
 1317 007e 1B68     		ldr	r3, [r3]
 1318 0080 0133     		adds	r3, r3, #1
 1319 0082 614A     		ldr	r2, .L79
 1320 0084 1360     		str	r3, [r2]
 1321 0086 614B     		ldr	r3, .L79+4
 1322 0088 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1323 008a 03F01F03 		and	r3, r3, #31
 1324 008e 022B     		cmp	r3, #2
 1325 0090 09D0     		beq	.L71
 1326              		.loc 1 179 0 is_stmt 0 discriminator 1
 1327 0092 5F4B     		ldr	r3, .L79+8
 1328 0094 0093     		str	r3, [sp]
 1329 0096 5F48     		ldr	r0, .L79+12
 1330 0098 5F49     		ldr	r1, .L79+16
 1331 009a 624A     		ldr	r2, .L79+28
 1332 009c B323     		movs	r3, #179
 1333 009e FFF7FEFF 		bl	sprintf
 1334 00a2 5C4B     		ldr	r3, .L79+12
 1335 00a4 ADE0     		b	.L69
 1336              	.L71:
 180:clock3.c      ****     rtc_set_minutes(59);
 1337              		.loc 1 180 0 is_stmt 1
 1338 00a6 3B20     		movs	r0, #59
 1339 00a8 FFF7FEFF 		bl	rtc_set_minutes
 181:clock3.c      ****     rtc_set_seconds(59);
 1340              		.loc 1 181 0
 1341 00ac 3B20     		movs	r0, #59
 1342 00ae FFF7FEFF 		bl	rtc_set_seconds
 182:clock3.c      ****     rtc_set_hour(23);
 1343              		.loc 1 182 0
 1344 00b2 1720     		movs	r0, #23
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 29


 1345 00b4 FFF7FEFF 		bl	rtc_set_hour
 183:clock3.c      ****     rtc_set_day(31);
 1346              		.loc 1 183 0
 1347 00b8 1F20     		movs	r0, #31
 1348 00ba FFF7FEFF 		bl	rtc_set_day
 184:clock3.c      ****     it("initialize RTC days to 31", rtc_day == 31);
 1349              		.loc 1 184 0
 1350 00be 524B     		ldr	r3, .L79
 1351 00c0 1B68     		ldr	r3, [r3]
 1352 00c2 0133     		adds	r3, r3, #1
 1353 00c4 504A     		ldr	r2, .L79
 1354 00c6 1360     		str	r3, [r2]
 1355 00c8 504B     		ldr	r3, .L79+4
 1356 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1357 00cc 03F01F03 		and	r3, r3, #31
 1358 00d0 1F2B     		cmp	r3, #31
 1359 00d2 09D0     		beq	.L72
 1360              		.loc 1 184 0 is_stmt 0 discriminator 1
 1361 00d4 4E4B     		ldr	r3, .L79+8
 1362 00d6 0093     		str	r3, [sp]
 1363 00d8 4E48     		ldr	r0, .L79+12
 1364 00da 4F49     		ldr	r1, .L79+16
 1365 00dc 524A     		ldr	r2, .L79+32
 1366 00de B823     		movs	r3, #184
 1367 00e0 FFF7FEFF 		bl	sprintf
 1368 00e4 4B4B     		ldr	r3, .L79+12
 1369 00e6 8CE0     		b	.L69
 1370              	.L72:
 185:clock3.c      ****     rtc_set_month(1);
 1371              		.loc 1 185 0 is_stmt 1
 1372 00e8 0120     		movs	r0, #1
 1373 00ea FFF7FEFF 		bl	rtc_set_month
 186:clock3.c      ****     it("initialize RTC month to 1", rtc_month == 1);
 1374              		.loc 1 186 0
 1375 00ee 464B     		ldr	r3, .L79
 1376 00f0 1B68     		ldr	r3, [r3]
 1377 00f2 0133     		adds	r3, r3, #1
 1378 00f4 444A     		ldr	r2, .L79
 1379 00f6 1360     		str	r3, [r2]
 1380 00f8 4C4B     		ldr	r3, .L79+36
 1381 00fa 1B68     		ldr	r3, [r3]
 1382 00fc 012B     		cmp	r3, #1
 1383 00fe 09D0     		beq	.L73
 1384              		.loc 1 186 0 is_stmt 0 discriminator 1
 1385 0100 434B     		ldr	r3, .L79+8
 1386 0102 0093     		str	r3, [sp]
 1387 0104 4348     		ldr	r0, .L79+12
 1388 0106 4449     		ldr	r1, .L79+16
 1389 0108 494A     		ldr	r2, .L79+40
 1390 010a BA23     		movs	r3, #186
 1391 010c FFF7FEFF 		bl	sprintf
 1392 0110 404B     		ldr	r3, .L79+12
 1393 0112 76E0     		b	.L69
 1394              	.L73:
 187:clock3.c      ****     rtc_tick();
 1395              		.loc 1 187 0 is_stmt 1
 1396 0114 FFF7FEFF 		bl	rtc_tick
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 30


 188:clock3.c      ****     it("handle RTC days overflow (31->1)", rtc_day == 1);
 1397              		.loc 1 188 0
 1398 0118 3B4B     		ldr	r3, .L79
 1399 011a 1B68     		ldr	r3, [r3]
 1400 011c 0133     		adds	r3, r3, #1
 1401 011e 3A4A     		ldr	r2, .L79
 1402 0120 1360     		str	r3, [r2]
 1403 0122 3A4B     		ldr	r3, .L79+4
 1404 0124 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1405 0126 03F01F03 		and	r3, r3, #31
 1406 012a 012B     		cmp	r3, #1
 1407 012c 09D0     		beq	.L74
 1408              		.loc 1 188 0 is_stmt 0 discriminator 1
 1409 012e 384B     		ldr	r3, .L79+8
 1410 0130 0093     		str	r3, [sp]
 1411 0132 3848     		ldr	r0, .L79+12
 1412 0134 3849     		ldr	r1, .L79+16
 1413 0136 3F4A     		ldr	r2, .L79+44
 1414 0138 BC23     		movs	r3, #188
 1415 013a FFF7FEFF 		bl	sprintf
 1416 013e 354B     		ldr	r3, .L79+12
 1417 0140 5FE0     		b	.L69
 1418              	.L74:
 189:clock3.c      ****     it("increment RTC month (1->2)", rtc_month == 2);
 1419              		.loc 1 189 0 is_stmt 1
 1420 0142 314B     		ldr	r3, .L79
 1421 0144 1B68     		ldr	r3, [r3]
 1422 0146 0133     		adds	r3, r3, #1
 1423 0148 2F4A     		ldr	r2, .L79
 1424 014a 1360     		str	r3, [r2]
 1425 014c 374B     		ldr	r3, .L79+36
 1426 014e 1B68     		ldr	r3, [r3]
 1427 0150 022B     		cmp	r3, #2
 1428 0152 09D0     		beq	.L75
 1429              		.loc 1 189 0 is_stmt 0 discriminator 1
 1430 0154 2E4B     		ldr	r3, .L79+8
 1431 0156 0093     		str	r3, [sp]
 1432 0158 2E48     		ldr	r0, .L79+12
 1433 015a 2F49     		ldr	r1, .L79+16
 1434 015c 364A     		ldr	r2, .L79+48
 1435 015e BD23     		movs	r3, #189
 1436 0160 FFF7FEFF 		bl	sprintf
 1437 0164 2B4B     		ldr	r3, .L79+12
 1438 0166 4CE0     		b	.L69
 1439              	.L75:
 190:clock3.c      ****     rtc_set_minutes(59);
 1440              		.loc 1 190 0 is_stmt 1
 1441 0168 3B20     		movs	r0, #59
 1442 016a FFF7FEFF 		bl	rtc_set_minutes
 191:clock3.c      ****     rtc_set_seconds(59);
 1443              		.loc 1 191 0
 1444 016e 3B20     		movs	r0, #59
 1445 0170 FFF7FEFF 		bl	rtc_set_seconds
 192:clock3.c      ****     rtc_set_hour(23);
 1446              		.loc 1 192 0
 1447 0174 1720     		movs	r0, #23
 1448 0176 FFF7FEFF 		bl	rtc_set_hour
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 31


 193:clock3.c      ****     rtc_set_day(31);
 1449              		.loc 1 193 0
 1450 017a 1F20     		movs	r0, #31
 1451 017c FFF7FEFF 		bl	rtc_set_day
 194:clock3.c      ****     rtc_set_month(12);
 1452              		.loc 1 194 0
 1453 0180 0C20     		movs	r0, #12
 1454 0182 FFF7FEFF 		bl	rtc_set_month
 195:clock3.c      ****     it("initialize RTC month to 1", rtc_month == 12);
 1455              		.loc 1 195 0
 1456 0186 204B     		ldr	r3, .L79
 1457 0188 1B68     		ldr	r3, [r3]
 1458 018a 0133     		adds	r3, r3, #1
 1459 018c 1E4A     		ldr	r2, .L79
 1460 018e 1360     		str	r3, [r2]
 1461 0190 264B     		ldr	r3, .L79+36
 1462 0192 1B68     		ldr	r3, [r3]
 1463 0194 0C2B     		cmp	r3, #12
 1464 0196 09D0     		beq	.L76
 1465              		.loc 1 195 0 is_stmt 0 discriminator 1
 1466 0198 1D4B     		ldr	r3, .L79+8
 1467 019a 0093     		str	r3, [sp]
 1468 019c 1D48     		ldr	r0, .L79+12
 1469 019e 1E49     		ldr	r1, .L79+16
 1470 01a0 234A     		ldr	r2, .L79+40
 1471 01a2 C323     		movs	r3, #195
 1472 01a4 FFF7FEFF 		bl	sprintf
 1473 01a8 1A4B     		ldr	r3, .L79+12
 1474 01aa 2AE0     		b	.L69
 1475              	.L76:
 196:clock3.c      ****     rtc_tick();
 1476              		.loc 1 196 0 is_stmt 1
 1477 01ac FFF7FEFF 		bl	rtc_tick
 197:clock3.c      ****     it("handle RTC days overflow (31->1)", rtc_day == 1);
 1478              		.loc 1 197 0
 1479 01b0 154B     		ldr	r3, .L79
 1480 01b2 1B68     		ldr	r3, [r3]
 1481 01b4 0133     		adds	r3, r3, #1
 1482 01b6 144A     		ldr	r2, .L79
 1483 01b8 1360     		str	r3, [r2]
 1484 01ba 144B     		ldr	r3, .L79+4
 1485 01bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1486 01be 03F01F03 		and	r3, r3, #31
 1487 01c2 012B     		cmp	r3, #1
 1488 01c4 09D0     		beq	.L77
 1489              		.loc 1 197 0 is_stmt 0 discriminator 1
 1490 01c6 124B     		ldr	r3, .L79+8
 1491 01c8 0093     		str	r3, [sp]
 1492 01ca 1248     		ldr	r0, .L79+12
 1493 01cc 1249     		ldr	r1, .L79+16
 1494 01ce 194A     		ldr	r2, .L79+44
 1495 01d0 C523     		movs	r3, #197
 1496 01d2 FFF7FEFF 		bl	sprintf
 1497 01d6 0F4B     		ldr	r3, .L79+12
 1498 01d8 13E0     		b	.L69
 1499              	.L77:
 198:clock3.c      ****     it("increment RTC month (1->2)", rtc_month == 1);
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 32


 1500              		.loc 1 198 0 is_stmt 1
 1501 01da 0B4B     		ldr	r3, .L79
 1502 01dc 1B68     		ldr	r3, [r3]
 1503 01de 0133     		adds	r3, r3, #1
 1504 01e0 094A     		ldr	r2, .L79
 1505 01e2 1360     		str	r3, [r2]
 1506 01e4 114B     		ldr	r3, .L79+36
 1507 01e6 1B68     		ldr	r3, [r3]
 1508 01e8 012B     		cmp	r3, #1
 1509 01ea 09D0     		beq	.L78
 1510              		.loc 1 198 0 is_stmt 0 discriminator 1
 1511 01ec 084B     		ldr	r3, .L79+8
 1512 01ee 0093     		str	r3, [sp]
 1513 01f0 0848     		ldr	r0, .L79+12
 1514 01f2 0949     		ldr	r1, .L79+16
 1515 01f4 104A     		ldr	r2, .L79+48
 1516 01f6 C623     		movs	r3, #198
 1517 01f8 FFF7FEFF 		bl	sprintf
 1518 01fc 054B     		ldr	r3, .L79+12
 1519 01fe 00E0     		b	.L69
 1520              	.L78:
 199:clock3.c      ****     return 0;
 1521              		.loc 1 199 0 is_stmt 1
 1522 0200 0023     		movs	r3, #0
 1523              	.L69:
 200:clock3.c      **** }
 1524              		.loc 1 200 0
 1525 0202 1846     		mov	r0, r3
 1526 0204 BD46     		mov	sp, r7
 1527              		.cfi_def_cfa_register 13
 1528              		@ sp needed
 1529 0206 80BD     		pop	{r7, pc}
 1530              	.L80:
 1531              		.align	2
 1532              	.L79:
 1533 0208 00000000 		.word	assertion_count
 1534 020c 00000000 		.word	rtc_typef
 1535 0210 64000000 		.word	.LC3
 1536 0214 00000000 		.word	text
 1537 0218 34000000 		.word	.LC1
 1538 021c D4000000 		.word	.LC7
 1539 0220 F0000000 		.word	.LC8
 1540 0224 B4010000 		.word	.LC14
 1541 0228 D4010000 		.word	.LC15
 1542 022c 00000000 		.word	rtc_month
 1543 0230 F0010000 		.word	.LC16
 1544 0234 0C020000 		.word	.LC17
 1545 0238 30020000 		.word	.LC18
 1546              		.cfi_endproc
 1547              	.LFE12:
 1548              		.size	test_rtc_days_months, .-test_rtc_days_months
 1549              		.section	.rodata
 1550 024b 00       		.align	2
 1551              	.LC19:
 1552 024c 696E6974 		.ascii	"initialize years to %d\000"
 1552      69616C69 
 1552      7A652079 
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 33


 1552      65617273 
 1552      20746F20 
 1553 0263 00       		.align	2
 1554              	.LC20:
 1555 0264 65737461 		.ascii	"establishe a leap year %d\000"
 1555      626C6973 
 1555      68652061 
 1555      206C6561 
 1555      70207965 
 1556 027e 0000     		.align	2
 1557              	.LC21:
 1558 0280 696E6974 		.ascii	"initialize year to %d and month to %d\000"
 1558      69616C69 
 1558      7A652079 
 1558      65617220 
 1558      746F2025 
 1559 02a6 0000     		.align	2
 1560              	.LC22:
 1561 02a8 65737461 		.ascii	"establishe days in month %d of leap year %d\000"
 1561      626C6973 
 1561      68652064 
 1561      61797320 
 1561      696E206D 
 1562              		.align	2
 1563              	.LC23:
 1564 02d4 68616E64 		.ascii	"handle end of month overflow, year %d, month %d, da"
 1564      6C652065 
 1564      6E64206F 
 1564      66206D6F 
 1564      6E746820 
 1565 0307 79202564 		.ascii	"y %d, hour %d, minutes %d, seconds %d\000"
 1565      2C20686F 
 1565      75722025 
 1565      642C206D 
 1565      696E7574 
 1566 032d 000000   		.align	2
 1567              	.LC24:
 1568 0330 65737461 		.ascii	"establishe a normal year %d\000"
 1568      626C6973 
 1568      68652061 
 1568      206E6F72 
 1568      6D616C20 
 1569              		.align	2
 1570              	.LC25:
 1571 034c 65737461 		.ascii	"establishe days in month %d of normal year %d\000"
 1571      626C6973 
 1571      68652064 
 1571      61797320 
 1571      696E206D 
 1572              		.section	.text.test_rtc_leap_years,"ax",%progbits
 1573              		.align	2
 1574              		.global	test_rtc_leap_years
 1575              		.thumb
 1576              		.thumb_func
 1577              		.type	test_rtc_leap_years, %function
 1578              	test_rtc_leap_years:
 1579              	.LFB13:
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 34


 201:clock3.c      **** 
 202:clock3.c      **** char * test_rtc_leap_years() {
 1580              		.loc 1 202 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 80
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 B0B5     		push	{r4, r5, r7, lr}
 1585              		.cfi_def_cfa_offset 16
 1586              		.cfi_offset 4, -16
 1587              		.cfi_offset 5, -12
 1588              		.cfi_offset 7, -8
 1589              		.cfi_offset 14, -4
 1590 0002 98B0     		sub	sp, sp, #96
 1591              		.cfi_def_cfa_offset 112
 1592 0004 04AF     		add	r7, sp, #16
 1593              		.cfi_def_cfa 7, 96
 203:clock3.c      ****     
 204:clock3.c      ****     const int days_in_month[]={0,31,28,31,30,31,30,31,31,30,31,30,31};
 1594              		.loc 1 204 0
 1595 0006 9F4B     		ldr	r3, .L122
 1596 0008 3C1D     		adds	r4, r7, #4
 1597 000a 1D46     		mov	r5, r3
 1598 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1599 000e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1600 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1601 0012 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1602 0014 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1603 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1604 0018 2B68     		ldr	r3, [r5]
 1605 001a 2360     		str	r3, [r4]
 205:clock3.c      ****     
 206:clock3.c      ****     int y;
 207:clock3.c      ****     int m;
 208:clock3.c      ****     
 209:clock3.c      ****     int nmin = 1, lmin = 1;
 1606              		.loc 1 209 0
 1607 001c 0123     		movs	r3, #1
 1608 001e 7B64     		str	r3, [r7, #68]
 1609 0020 0123     		movs	r3, #1
 1610 0022 3B64     		str	r3, [r7, #64]
 210:clock3.c      ****     int nmax = 13, lmax = 13;
 1611              		.loc 1 210 0
 1612 0024 0D23     		movs	r3, #13
 1613 0026 FB63     		str	r3, [r7, #60]
 1614 0028 0D23     		movs	r3, #13
 1615 002a BB63     		str	r3, [r7, #56]
 211:clock3.c      **** 
 212:clock3.c      ****     for (y = 1900; y < 2200; y++)
 1616              		.loc 1 212 0
 1617 002c 40F26C73 		movw	r3, #1900
 1618 0030 FB64     		str	r3, [r7, #76]
 1619 0032 64E3     		b	.L82
 1620              	.L120:
 213:clock3.c      ****     {
 214:clock3.c      ****         rtc_set_years(y);
 1621              		.loc 1 214 0
 1622 0034 F86C     		ldr	r0, [r7, #76]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 35


 1623 0036 FFF7FEFF 		bl	rtc_set_years
 215:clock3.c      ****         //it("initialize years to i", rtc_year == i);
 216:clock3.c      ****         sprintf(text, "initialize years to %d", y);
 1624              		.loc 1 216 0
 1625 003a 9348     		ldr	r0, .L122+4
 1626 003c 9349     		ldr	r1, .L122+8
 1627 003e FA6C     		ldr	r2, [r7, #76]
 1628 0040 FFF7FEFF 		bl	sprintf
 217:clock3.c      ****         it(text, rtc_year == y);
 1629              		.loc 1 217 0
 1630 0044 924B     		ldr	r3, .L122+12
 1631 0046 1B68     		ldr	r3, [r3]
 1632 0048 0133     		adds	r3, r3, #1
 1633 004a 914A     		ldr	r2, .L122+12
 1634 004c 1360     		str	r3, [r2]
 1635 004e 914B     		ldr	r3, .L122+16
 1636 0050 1A68     		ldr	r2, [r3]
 1637 0052 FB6C     		ldr	r3, [r7, #76]
 1638 0054 9A42     		cmp	r2, r3
 1639 0056 09D0     		beq	.L83
 1640              		.loc 1 217 0 is_stmt 0 discriminator 1
 1641 0058 8F4B     		ldr	r3, .L122+20
 1642 005a 0093     		str	r3, [sp]
 1643 005c 8A48     		ldr	r0, .L122+4
 1644 005e 8F49     		ldr	r1, .L122+24
 1645 0060 894A     		ldr	r2, .L122+4
 1646 0062 D923     		movs	r3, #217
 1647 0064 FFF7FEFF 		bl	sprintf
 1648 0068 874B     		ldr	r3, .L122+4
 1649 006a 4FE3     		b	.L121
 1650              	.L83:
 218:clock3.c      ****         
 219:clock3.c      ****         if( ((rtc_year % 4 == 0) && (rtc_year % 100 != 0)) || (rtc_year % 400 == 0) )
 1651              		.loc 1 219 0 is_stmt 1
 1652 006c 894B     		ldr	r3, .L122+16
 1653 006e 1B68     		ldr	r3, [r3]
 1654 0070 03F00303 		and	r3, r3, #3
 1655 0074 002B     		cmp	r3, #0
 1656 0076 0DD1     		bne	.L85
 1657              		.loc 1 219 0 is_stmt 0 discriminator 1
 1658 0078 864B     		ldr	r3, .L122+16
 1659 007a 1A68     		ldr	r2, [r3]
 1660 007c 884B     		ldr	r3, .L122+28
 1661 007e 83FB0213 		smull	r1, r3, r3, r2
 1662 0082 5911     		asrs	r1, r3, #5
 1663 0084 D317     		asrs	r3, r2, #31
 1664 0086 CB1A     		subs	r3, r1, r3
 1665 0088 6421     		movs	r1, #100
 1666 008a 01FB03F3 		mul	r3, r1, r3
 1667 008e D31A     		subs	r3, r2, r3
 1668 0090 002B     		cmp	r3, #0
 1669 0092 0FD1     		bne	.L86
 1670              	.L85:
 1671              		.loc 1 219 0 discriminator 3
 1672 0094 7F4B     		ldr	r3, .L122+16
 1673 0096 1A68     		ldr	r2, [r3]
 1674 0098 814B     		ldr	r3, .L122+28
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 36


 1675 009a 83FB0213 		smull	r1, r3, r3, r2
 1676 009e D911     		asrs	r1, r3, #7
 1677 00a0 D317     		asrs	r3, r2, #31
 1678 00a2 CB1A     		subs	r3, r1, r3
 1679 00a4 4FF4C871 		mov	r1, #400
 1680 00a8 01FB03F3 		mul	r3, r1, r3
 1681 00ac D31A     		subs	r3, r2, r3
 1682 00ae 002B     		cmp	r3, #0
 1683 00b0 40F0A881 		bne	.L87
 1684              	.L86:
 220:clock3.c      ****         {
 221:clock3.c      ****             sprintf(text, "establishe a leap year %d", rtc_year);
 1685              		.loc 1 221 0 is_stmt 1
 1686 00b4 774B     		ldr	r3, .L122+16
 1687 00b6 1B68     		ldr	r3, [r3]
 1688 00b8 7348     		ldr	r0, .L122+4
 1689 00ba 7A49     		ldr	r1, .L122+32
 1690 00bc 1A46     		mov	r2, r3
 1691 00be FFF7FEFF 		bl	sprintf
 222:clock3.c      ****             it(text, rtc_is_leap_year() != 0);
 1692              		.loc 1 222 0
 1693 00c2 734B     		ldr	r3, .L122+12
 1694 00c4 1B68     		ldr	r3, [r3]
 1695 00c6 0133     		adds	r3, r3, #1
 1696 00c8 714A     		ldr	r2, .L122+12
 1697 00ca 1360     		str	r3, [r2]
 1698 00cc FFF7FEFF 		bl	rtc_is_leap_year
 1699 00d0 0346     		mov	r3, r0
 1700 00d2 002B     		cmp	r3, #0
 1701 00d4 09D1     		bne	.L88
 1702              		.loc 1 222 0 is_stmt 0 discriminator 1
 1703 00d6 704B     		ldr	r3, .L122+20
 1704 00d8 0093     		str	r3, [sp]
 1705 00da 6B48     		ldr	r0, .L122+4
 1706 00dc 6F49     		ldr	r1, .L122+24
 1707 00de 6A4A     		ldr	r2, .L122+4
 1708 00e0 DE23     		movs	r3, #222
 1709 00e2 FFF7FEFF 		bl	sprintf
 1710 00e6 684B     		ldr	r3, .L122+4
 1711 00e8 10E3     		b	.L121
 1712              	.L88:
 223:clock3.c      ****             
 224:clock3.c      ****             for (m = lmin; m < lmax; m++)
 1713              		.loc 1 224 0 is_stmt 1
 1714 00ea 3B6C     		ldr	r3, [r7, #64]
 1715 00ec BB64     		str	r3, [r7, #72]
 1716 00ee 7FE1     		b	.L89
 1717              	.L104:
 225:clock3.c      ****             {
 226:clock3.c      ****                 rtc_set_month(m);
 1718              		.loc 1 226 0
 1719 00f0 B86C     		ldr	r0, [r7, #72]
 1720 00f2 FFF7FEFF 		bl	rtc_set_month
 227:clock3.c      ****                 sprintf(text, "initialize year to %d and month to %d", rtc_year, rtc_month);
 1721              		.loc 1 227 0
 1722 00f6 674B     		ldr	r3, .L122+16
 1723 00f8 1A68     		ldr	r2, [r3]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 37


 1724 00fa 6B4B     		ldr	r3, .L122+36
 1725 00fc 1B68     		ldr	r3, [r3]
 1726 00fe 6248     		ldr	r0, .L122+4
 1727 0100 6A49     		ldr	r1, .L122+40
 1728 0102 FFF7FEFF 		bl	sprintf
 228:clock3.c      ****                 it(text, rtc_year == y);
 1729              		.loc 1 228 0
 1730 0106 624B     		ldr	r3, .L122+12
 1731 0108 1B68     		ldr	r3, [r3]
 1732 010a 0133     		adds	r3, r3, #1
 1733 010c 604A     		ldr	r2, .L122+12
 1734 010e 1360     		str	r3, [r2]
 1735 0110 604B     		ldr	r3, .L122+16
 1736 0112 1A68     		ldr	r2, [r3]
 1737 0114 FB6C     		ldr	r3, [r7, #76]
 1738 0116 9A42     		cmp	r2, r3
 1739 0118 09D0     		beq	.L90
 1740              		.loc 1 228 0 is_stmt 0 discriminator 1
 1741 011a 5F4B     		ldr	r3, .L122+20
 1742 011c 0093     		str	r3, [sp]
 1743 011e 5A48     		ldr	r0, .L122+4
 1744 0120 5E49     		ldr	r1, .L122+24
 1745 0122 594A     		ldr	r2, .L122+4
 1746 0124 E423     		movs	r3, #228
 1747 0126 FFF7FEFF 		bl	sprintf
 1748 012a 574B     		ldr	r3, .L122+4
 1749 012c EEE2     		b	.L121
 1750              	.L90:
 229:clock3.c      ****                 it(text, rtc_month == m);
 1751              		.loc 1 229 0 is_stmt 1
 1752 012e 584B     		ldr	r3, .L122+12
 1753 0130 1B68     		ldr	r3, [r3]
 1754 0132 0133     		adds	r3, r3, #1
 1755 0134 564A     		ldr	r2, .L122+12
 1756 0136 1360     		str	r3, [r2]
 1757 0138 5B4B     		ldr	r3, .L122+36
 1758 013a 1A68     		ldr	r2, [r3]
 1759 013c BB6C     		ldr	r3, [r7, #72]
 1760 013e 9A42     		cmp	r2, r3
 1761 0140 09D0     		beq	.L91
 1762              		.loc 1 229 0 is_stmt 0 discriminator 1
 1763 0142 554B     		ldr	r3, .L122+20
 1764 0144 0093     		str	r3, [sp]
 1765 0146 5048     		ldr	r0, .L122+4
 1766 0148 5449     		ldr	r1, .L122+24
 1767 014a 4F4A     		ldr	r2, .L122+4
 1768 014c E523     		movs	r3, #229
 1769 014e FFF7FEFF 		bl	sprintf
 1770 0152 4D4B     		ldr	r3, .L122+4
 1771 0154 DAE2     		b	.L121
 1772              	.L91:
 230:clock3.c      ****                 sprintf(text, "establishe days in month %d of leap year %d", rtc_month, rtc_year);
 1773              		.loc 1 230 0 is_stmt 1
 1774 0156 544B     		ldr	r3, .L122+36
 1775 0158 1A68     		ldr	r2, [r3]
 1776 015a 4E4B     		ldr	r3, .L122+16
 1777 015c 1B68     		ldr	r3, [r3]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 38


 1778 015e 4A48     		ldr	r0, .L122+4
 1779 0160 5349     		ldr	r1, .L122+44
 1780 0162 FFF7FEFF 		bl	sprintf
 231:clock3.c      ****                 if (rtc_month == 2)
 1781              		.loc 1 231 0
 1782 0166 504B     		ldr	r3, .L122+36
 1783 0168 1B68     		ldr	r3, [r3]
 1784 016a 022B     		cmp	r3, #2
 1785 016c 29D1     		bne	.L92
 232:clock3.c      ****                 {
 233:clock3.c      ****                    it(text, (days_in_month[rtc_month]+1) == rtc_days_in_month());
 1786              		.loc 1 233 0
 1787 016e 484B     		ldr	r3, .L122+12
 1788 0170 1B68     		ldr	r3, [r3]
 1789 0172 0133     		adds	r3, r3, #1
 1790 0174 464A     		ldr	r2, .L122+12
 1791 0176 1360     		str	r3, [r2]
 1792 0178 4B4B     		ldr	r3, .L122+36
 1793 017a 1B68     		ldr	r3, [r3]
 1794 017c 9B00     		lsls	r3, r3, #2
 1795 017e 07F15002 		add	r2, r7, #80
 1796 0182 1344     		add	r3, r3, r2
 1797 0184 53F84C3C 		ldr	r3, [r3, #-76]
 1798 0188 5C1C     		adds	r4, r3, #1
 1799 018a FFF7FEFF 		bl	rtc_days_in_month
 1800 018e 0346     		mov	r3, r0
 1801 0190 9C42     		cmp	r4, r3
 1802 0192 09D0     		beq	.L93
 1803              		.loc 1 233 0 is_stmt 0 discriminator 1
 1804 0194 404B     		ldr	r3, .L122+20
 1805 0196 0093     		str	r3, [sp]
 1806 0198 3B48     		ldr	r0, .L122+4
 1807 019a 4049     		ldr	r1, .L122+24
 1808 019c 3A4A     		ldr	r2, .L122+4
 1809 019e E923     		movs	r3, #233
 1810 01a0 FFF7FEFF 		bl	sprintf
 1811 01a4 384B     		ldr	r3, .L122+4
 1812 01a6 B1E2     		b	.L121
 1813              	.L93:
 234:clock3.c      ****                    rtc_set_day(days_in_month[rtc_month]+1);
 1814              		.loc 1 234 0 is_stmt 1
 1815 01a8 3F4B     		ldr	r3, .L122+36
 1816 01aa 1B68     		ldr	r3, [r3]
 1817 01ac 9B00     		lsls	r3, r3, #2
 1818 01ae 07F15002 		add	r2, r7, #80
 1819 01b2 1344     		add	r3, r3, r2
 1820 01b4 53F84C3C 		ldr	r3, [r3, #-76]
 1821 01b8 0133     		adds	r3, r3, #1
 1822 01ba 1846     		mov	r0, r3
 1823 01bc FFF7FEFF 		bl	rtc_set_day
 1824 01c0 26E0     		b	.L94
 1825              	.L92:
 235:clock3.c      ****                 }
 236:clock3.c      ****                 else
 237:clock3.c      ****                 {
 238:clock3.c      ****                    it(text, days_in_month[rtc_month] == rtc_days_in_month());
 1826              		.loc 1 238 0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 39


 1827 01c2 334B     		ldr	r3, .L122+12
 1828 01c4 1B68     		ldr	r3, [r3]
 1829 01c6 0133     		adds	r3, r3, #1
 1830 01c8 314A     		ldr	r2, .L122+12
 1831 01ca 1360     		str	r3, [r2]
 1832 01cc 364B     		ldr	r3, .L122+36
 1833 01ce 1B68     		ldr	r3, [r3]
 1834 01d0 9B00     		lsls	r3, r3, #2
 1835 01d2 07F15002 		add	r2, r7, #80
 1836 01d6 1344     		add	r3, r3, r2
 1837 01d8 53F84C4C 		ldr	r4, [r3, #-76]
 1838 01dc FFF7FEFF 		bl	rtc_days_in_month
 1839 01e0 0346     		mov	r3, r0
 1840 01e2 9C42     		cmp	r4, r3
 1841 01e4 09D0     		beq	.L95
 1842              		.loc 1 238 0 is_stmt 0 discriminator 1
 1843 01e6 2C4B     		ldr	r3, .L122+20
 1844 01e8 0093     		str	r3, [sp]
 1845 01ea 2748     		ldr	r0, .L122+4
 1846 01ec 2B49     		ldr	r1, .L122+24
 1847 01ee 264A     		ldr	r2, .L122+4
 1848 01f0 EE23     		movs	r3, #238
 1849 01f2 FFF7FEFF 		bl	sprintf
 1850 01f6 244B     		ldr	r3, .L122+4
 1851 01f8 88E2     		b	.L121
 1852              	.L95:
 239:clock3.c      ****                    rtc_set_day(days_in_month[rtc_month]);
 1853              		.loc 1 239 0 is_stmt 1
 1854 01fa 2B4B     		ldr	r3, .L122+36
 1855 01fc 1B68     		ldr	r3, [r3]
 1856 01fe 9B00     		lsls	r3, r3, #2
 1857 0200 07F15002 		add	r2, r7, #80
 1858 0204 1344     		add	r3, r3, r2
 1859 0206 53F84C3C 		ldr	r3, [r3, #-76]
 1860 020a 1846     		mov	r0, r3
 1861 020c FFF7FEFF 		bl	rtc_set_day
 1862              	.L94:
 240:clock3.c      ****                 }
 241:clock3.c      ****                 rtc_set_seconds(59);
 1863              		.loc 1 241 0
 1864 0210 3B20     		movs	r0, #59
 1865 0212 FFF7FEFF 		bl	rtc_set_seconds
 242:clock3.c      ****                 rtc_set_minutes(59);
 1866              		.loc 1 242 0
 1867 0216 3B20     		movs	r0, #59
 1868 0218 FFF7FEFF 		bl	rtc_set_minutes
 243:clock3.c      ****                 rtc_set_hour(23);
 1869              		.loc 1 243 0
 1870 021c 1720     		movs	r0, #23
 1871 021e FFF7FEFF 		bl	rtc_set_hour
 244:clock3.c      ****                 rtc_tick();
 1872              		.loc 1 244 0
 1873 0222 FFF7FEFF 		bl	rtc_tick
 245:clock3.c      ****                 sprintf(text, "handle end of month overflow, year %d, month %d, day %d, hour %d, mi
 1874              		.loc 1 245 0
 1875 0226 1B4B     		ldr	r3, .L122+16
 1876 0228 1D68     		ldr	r5, [r3]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 40


 1877 022a 1F4B     		ldr	r3, .L122+36
 1878 022c 1C68     		ldr	r4, [r3]
 1879 022e 214B     		ldr	r3, .L122+48
 1880 0230 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1881 0232 03F01F00 		and	r0, r3, #31
 1882 0236 1F4B     		ldr	r3, .L122+48
 1883 0238 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1884 023a 03F01F01 		and	r1, r3, #31
 1885 023e 1D4B     		ldr	r3, .L122+48
 1886 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1887 0242 03F03F02 		and	r2, r3, #63
 1888 0246 1C4B     		ldr	r3, .L122+52
 1889 0248 1B68     		ldr	r3, [r3]
 1890 024a 0090     		str	r0, [sp]
 1891 024c 0191     		str	r1, [sp, #4]
 1892 024e 0292     		str	r2, [sp, #8]
 1893 0250 0393     		str	r3, [sp, #12]
 1894 0252 0D48     		ldr	r0, .L122+4
 1895 0254 1949     		ldr	r1, .L122+56
 1896 0256 2A46     		mov	r2, r5
 1897 0258 2346     		mov	r3, r4
 1898 025a FFF7FEFF 		bl	sprintf
 246:clock3.c      ****                 it(text, rtc_sec == 0);
 1899              		.loc 1 246 0
 1900 025e 0C4B     		ldr	r3, .L122+12
 1901 0260 1B68     		ldr	r3, [r3]
 1902 0262 0133     		adds	r3, r3, #1
 1903 0264 0A4A     		ldr	r2, .L122+12
 1904 0266 1360     		str	r3, [r2]
 1905 0268 134B     		ldr	r3, .L122+52
 1906 026a 1B68     		ldr	r3, [r3]
 1907 026c 002B     		cmp	r3, #0
 1908 026e 27D0     		beq	.L96
 1909              		.loc 1 246 0 is_stmt 0 discriminator 1
 1910 0270 094B     		ldr	r3, .L122+20
 1911 0272 0093     		str	r3, [sp]
 1912 0274 0448     		ldr	r0, .L122+4
 1913 0276 0949     		ldr	r1, .L122+24
 1914 0278 034A     		ldr	r2, .L122+4
 1915 027a F623     		movs	r3, #246
 1916 027c FFF7FEFF 		bl	sprintf
 1917 0280 014B     		ldr	r3, .L122+4
 1918 0282 43E2     		b	.L121
 1919              	.L123:
 1920              		.align	2
 1921              	.L122:
 1922 0284 00000000 		.word	.LC0
 1923 0288 00000000 		.word	text
 1924 028c 4C020000 		.word	.LC19
 1925 0290 00000000 		.word	assertion_count
 1926 0294 00000000 		.word	rtc_year
 1927 0298 64000000 		.word	.LC3
 1928 029c 34000000 		.word	.LC1
 1929 02a0 1F85EB51 		.word	1374389535
 1930 02a4 64020000 		.word	.LC20
 1931 02a8 00000000 		.word	rtc_month
 1932 02ac 80020000 		.word	.LC21
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 41


 1933 02b0 A8020000 		.word	.LC22
 1934 02b4 00000000 		.word	rtc_typef
 1935 02b8 00000000 		.word	rtc_sec
 1936 02bc D4020000 		.word	.LC23
 1937              	.L96:
 247:clock3.c      ****                 it(text, rtc_min == 0);
 1938              		.loc 1 247 0 is_stmt 1
 1939 02c0 8D4B     		ldr	r3, .L124
 1940 02c2 1B68     		ldr	r3, [r3]
 1941 02c4 0133     		adds	r3, r3, #1
 1942 02c6 8C4A     		ldr	r2, .L124
 1943 02c8 1360     		str	r3, [r2]
 1944 02ca 8C4B     		ldr	r3, .L124+4
 1945 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1946 02ce 03F03F03 		and	r3, r3, #63
 1947 02d2 002B     		cmp	r3, #0
 1948 02d4 09D0     		beq	.L97
 1949              		.loc 1 247 0 is_stmt 0 discriminator 1
 1950 02d6 8A4B     		ldr	r3, .L124+8
 1951 02d8 0093     		str	r3, [sp]
 1952 02da 8A48     		ldr	r0, .L124+12
 1953 02dc 8A49     		ldr	r1, .L124+16
 1954 02de 894A     		ldr	r2, .L124+12
 1955 02e0 F723     		movs	r3, #247
 1956 02e2 FFF7FEFF 		bl	sprintf
 1957 02e6 874B     		ldr	r3, .L124+12
 1958 02e8 10E2     		b	.L121
 1959              	.L97:
 248:clock3.c      ****                 it(text, rtc_hour == 0);
 1960              		.loc 1 248 0 is_stmt 1
 1961 02ea 834B     		ldr	r3, .L124
 1962 02ec 1B68     		ldr	r3, [r3]
 1963 02ee 0133     		adds	r3, r3, #1
 1964 02f0 814A     		ldr	r2, .L124
 1965 02f2 1360     		str	r3, [r2]
 1966 02f4 814B     		ldr	r3, .L124+4
 1967 02f6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1968 02f8 03F01F03 		and	r3, r3, #31
 1969 02fc 002B     		cmp	r3, #0
 1970 02fe 09D0     		beq	.L98
 1971              		.loc 1 248 0 is_stmt 0 discriminator 1
 1972 0300 7F4B     		ldr	r3, .L124+8
 1973 0302 0093     		str	r3, [sp]
 1974 0304 7F48     		ldr	r0, .L124+12
 1975 0306 8049     		ldr	r1, .L124+16
 1976 0308 7E4A     		ldr	r2, .L124+12
 1977 030a F823     		movs	r3, #248
 1978 030c FFF7FEFF 		bl	sprintf
 1979 0310 7C4B     		ldr	r3, .L124+12
 1980 0312 FBE1     		b	.L121
 1981              	.L98:
 249:clock3.c      ****                 it(text, rtc_day == 1);
 1982              		.loc 1 249 0 is_stmt 1
 1983 0314 784B     		ldr	r3, .L124
 1984 0316 1B68     		ldr	r3, [r3]
 1985 0318 0133     		adds	r3, r3, #1
 1986 031a 774A     		ldr	r2, .L124
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 42


 1987 031c 1360     		str	r3, [r2]
 1988 031e 774B     		ldr	r3, .L124+4
 1989 0320 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1990 0322 03F01F03 		and	r3, r3, #31
 1991 0326 012B     		cmp	r3, #1
 1992 0328 09D0     		beq	.L99
 1993              		.loc 1 249 0 is_stmt 0 discriminator 1
 1994 032a 754B     		ldr	r3, .L124+8
 1995 032c 0093     		str	r3, [sp]
 1996 032e 7548     		ldr	r0, .L124+12
 1997 0330 7549     		ldr	r1, .L124+16
 1998 0332 744A     		ldr	r2, .L124+12
 1999 0334 F923     		movs	r3, #249
 2000 0336 FFF7FEFF 		bl	sprintf
 2001 033a 724B     		ldr	r3, .L124+12
 2002 033c E6E1     		b	.L121
 2003              	.L99:
 250:clock3.c      ****                 if (m < 12)
 2004              		.loc 1 250 0 is_stmt 1
 2005 033e BB6C     		ldr	r3, [r7, #72]
 2006 0340 0B2B     		cmp	r3, #11
 2007 0342 28DC     		bgt	.L100
 251:clock3.c      ****                 {
 252:clock3.c      ****                    it(text, rtc_month == m+1);
 2008              		.loc 1 252 0
 2009 0344 6C4B     		ldr	r3, .L124
 2010 0346 1B68     		ldr	r3, [r3]
 2011 0348 0133     		adds	r3, r3, #1
 2012 034a 6B4A     		ldr	r2, .L124
 2013 034c 1360     		str	r3, [r2]
 2014 034e BB6C     		ldr	r3, [r7, #72]
 2015 0350 5A1C     		adds	r2, r3, #1
 2016 0352 6E4B     		ldr	r3, .L124+20
 2017 0354 1B68     		ldr	r3, [r3]
 2018 0356 9A42     		cmp	r2, r3
 2019 0358 09D0     		beq	.L101
 2020              		.loc 1 252 0 is_stmt 0 discriminator 1
 2021 035a 694B     		ldr	r3, .L124+8
 2022 035c 0093     		str	r3, [sp]
 2023 035e 6948     		ldr	r0, .L124+12
 2024 0360 6949     		ldr	r1, .L124+16
 2025 0362 684A     		ldr	r2, .L124+12
 2026 0364 FC23     		movs	r3, #252
 2027 0366 FFF7FEFF 		bl	sprintf
 2028 036a 664B     		ldr	r3, .L124+12
 2029 036c CEE1     		b	.L121
 2030              	.L101:
 253:clock3.c      ****                    it(text, rtc_year == y);
 2031              		.loc 1 253 0 is_stmt 1
 2032 036e 624B     		ldr	r3, .L124
 2033 0370 1B68     		ldr	r3, [r3]
 2034 0372 0133     		adds	r3, r3, #1
 2035 0374 604A     		ldr	r2, .L124
 2036 0376 1360     		str	r3, [r2]
 2037 0378 654B     		ldr	r3, .L124+24
 2038 037a 1A68     		ldr	r2, [r3]
 2039 037c FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 43


 2040 037e 9A42     		cmp	r2, r3
 2041 0380 33D0     		beq	.L102
 2042              		.loc 1 253 0 is_stmt 0 discriminator 1
 2043 0382 5F4B     		ldr	r3, .L124+8
 2044 0384 0093     		str	r3, [sp]
 2045 0386 5F48     		ldr	r0, .L124+12
 2046 0388 5F49     		ldr	r1, .L124+16
 2047 038a 5E4A     		ldr	r2, .L124+12
 2048 038c FD23     		movs	r3, #253
 2049 038e FFF7FEFF 		bl	sprintf
 2050 0392 5C4B     		ldr	r3, .L124+12
 2051 0394 BAE1     		b	.L121
 2052              	.L100:
 254:clock3.c      ****                 }
 255:clock3.c      ****                 
 256:clock3.c      ****                 else
 257:clock3.c      ****                 {
 258:clock3.c      ****                    it(text, rtc_month == 1);
 2053              		.loc 1 258 0 is_stmt 1
 2054 0396 584B     		ldr	r3, .L124
 2055 0398 1B68     		ldr	r3, [r3]
 2056 039a 0133     		adds	r3, r3, #1
 2057 039c 564A     		ldr	r2, .L124
 2058 039e 1360     		str	r3, [r2]
 2059 03a0 5A4B     		ldr	r3, .L124+20
 2060 03a2 1B68     		ldr	r3, [r3]
 2061 03a4 012B     		cmp	r3, #1
 2062 03a6 0AD0     		beq	.L103
 2063              		.loc 1 258 0 is_stmt 0 discriminator 1
 2064 03a8 554B     		ldr	r3, .L124+8
 2065 03aa 0093     		str	r3, [sp]
 2066 03ac 5548     		ldr	r0, .L124+12
 2067 03ae 5649     		ldr	r1, .L124+16
 2068 03b0 544A     		ldr	r2, .L124+12
 2069 03b2 4FF48173 		mov	r3, #258
 2070 03b6 FFF7FEFF 		bl	sprintf
 2071 03ba 524B     		ldr	r3, .L124+12
 2072 03bc A6E1     		b	.L121
 2073              	.L103:
 259:clock3.c      ****                    it(text, rtc_year == (y+1));
 2074              		.loc 1 259 0 is_stmt 1
 2075 03be 4E4B     		ldr	r3, .L124
 2076 03c0 1B68     		ldr	r3, [r3]
 2077 03c2 0133     		adds	r3, r3, #1
 2078 03c4 4C4A     		ldr	r2, .L124
 2079 03c6 1360     		str	r3, [r2]
 2080 03c8 FB6C     		ldr	r3, [r7, #76]
 2081 03ca 5A1C     		adds	r2, r3, #1
 2082 03cc 504B     		ldr	r3, .L124+24
 2083 03ce 1B68     		ldr	r3, [r3]
 2084 03d0 9A42     		cmp	r2, r3
 2085 03d2 0AD0     		beq	.L102
 2086              		.loc 1 259 0 is_stmt 0 discriminator 1
 2087 03d4 4A4B     		ldr	r3, .L124+8
 2088 03d6 0093     		str	r3, [sp]
 2089 03d8 4A48     		ldr	r0, .L124+12
 2090 03da 4B49     		ldr	r1, .L124+16
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 44


 2091 03dc 494A     		ldr	r2, .L124+12
 2092 03de 40F20313 		movw	r3, #259
 2093 03e2 FFF7FEFF 		bl	sprintf
 2094 03e6 474B     		ldr	r3, .L124+12
 2095 03e8 90E1     		b	.L121
 2096              	.L102:
 224:clock3.c      ****             {
 2097              		.loc 1 224 0 is_stmt 1 discriminator 2
 2098 03ea BB6C     		ldr	r3, [r7, #72]
 2099 03ec 0133     		adds	r3, r3, #1
 2100 03ee BB64     		str	r3, [r7, #72]
 2101              	.L89:
 224:clock3.c      ****             {
 2102              		.loc 1 224 0 is_stmt 0 discriminator 1
 2103 03f0 BA6C     		ldr	r2, [r7, #72]
 2104 03f2 BB6B     		ldr	r3, [r7, #56]
 2105 03f4 9A42     		cmp	r2, r3
 2106 03f6 FFF67BAE 		blt	.L104
 260:clock3.c      ****                 }
 261:clock3.c      ****                                 
 262:clock3.c      ****             }
 263:clock3.c      ****             lmin = 2;
 2107              		.loc 1 263 0 is_stmt 1
 2108 03fa 0223     		movs	r3, #2
 2109 03fc 3B64     		str	r3, [r7, #64]
 264:clock3.c      ****             lmax = 5;
 2110              		.loc 1 264 0
 2111 03fe 0523     		movs	r3, #5
 2112 0400 BB63     		str	r3, [r7, #56]
 2113 0402 79E1     		b	.L105
 2114              	.L87:
 265:clock3.c      ****         }
 266:clock3.c      ****         else
 267:clock3.c      ****         {
 268:clock3.c      ****             sprintf(text, "establishe a normal year %d", rtc_year);
 2115              		.loc 1 268 0
 2116 0404 424B     		ldr	r3, .L124+24
 2117 0406 1B68     		ldr	r3, [r3]
 2118 0408 3E48     		ldr	r0, .L124+12
 2119 040a 4249     		ldr	r1, .L124+28
 2120 040c 1A46     		mov	r2, r3
 2121 040e FFF7FEFF 		bl	sprintf
 269:clock3.c      ****             it(text, rtc_is_leap_year() == 0);
 2122              		.loc 1 269 0
 2123 0412 394B     		ldr	r3, .L124
 2124 0414 1B68     		ldr	r3, [r3]
 2125 0416 0133     		adds	r3, r3, #1
 2126 0418 374A     		ldr	r2, .L124
 2127 041a 1360     		str	r3, [r2]
 2128 041c FFF7FEFF 		bl	rtc_is_leap_year
 2129 0420 0346     		mov	r3, r0
 2130 0422 002B     		cmp	r3, #0
 2131 0424 0AD0     		beq	.L106
 2132              		.loc 1 269 0 is_stmt 0 discriminator 1
 2133 0426 364B     		ldr	r3, .L124+8
 2134 0428 0093     		str	r3, [sp]
 2135 042a 3648     		ldr	r0, .L124+12
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 45


 2136 042c 3649     		ldr	r1, .L124+16
 2137 042e 354A     		ldr	r2, .L124+12
 2138 0430 40F20D13 		movw	r3, #269
 2139 0434 FFF7FEFF 		bl	sprintf
 2140 0438 324B     		ldr	r3, .L124+12
 2141 043a 67E1     		b	.L121
 2142              	.L106:
 270:clock3.c      ****             for (m = nmin; m < nmax; m++)
 2143              		.loc 1 270 0 is_stmt 1
 2144 043c 7B6C     		ldr	r3, [r7, #68]
 2145 043e BB64     		str	r3, [r7, #72]
 2146 0440 51E1     		b	.L107
 2147              	.L119:
 271:clock3.c      ****             {
 272:clock3.c      ****                 rtc_set_month(m);
 2148              		.loc 1 272 0
 2149 0442 B86C     		ldr	r0, [r7, #72]
 2150 0444 FFF7FEFF 		bl	rtc_set_month
 273:clock3.c      ****                 sprintf(text, "initialize year to %d and month to %d", rtc_year, rtc_month);
 2151              		.loc 1 273 0
 2152 0448 314B     		ldr	r3, .L124+24
 2153 044a 1A68     		ldr	r2, [r3]
 2154 044c 2F4B     		ldr	r3, .L124+20
 2155 044e 1B68     		ldr	r3, [r3]
 2156 0450 2C48     		ldr	r0, .L124+12
 2157 0452 3149     		ldr	r1, .L124+32
 2158 0454 FFF7FEFF 		bl	sprintf
 274:clock3.c      ****                 it(text, rtc_year == y);
 2159              		.loc 1 274 0
 2160 0458 274B     		ldr	r3, .L124
 2161 045a 1B68     		ldr	r3, [r3]
 2162 045c 0133     		adds	r3, r3, #1
 2163 045e 264A     		ldr	r2, .L124
 2164 0460 1360     		str	r3, [r2]
 2165 0462 2B4B     		ldr	r3, .L124+24
 2166 0464 1A68     		ldr	r2, [r3]
 2167 0466 FB6C     		ldr	r3, [r7, #76]
 2168 0468 9A42     		cmp	r2, r3
 2169 046a 0AD0     		beq	.L108
 2170              		.loc 1 274 0 is_stmt 0 discriminator 1
 2171 046c 244B     		ldr	r3, .L124+8
 2172 046e 0093     		str	r3, [sp]
 2173 0470 2448     		ldr	r0, .L124+12
 2174 0472 2549     		ldr	r1, .L124+16
 2175 0474 234A     		ldr	r2, .L124+12
 2176 0476 4FF48973 		mov	r3, #274
 2177 047a FFF7FEFF 		bl	sprintf
 2178 047e 214B     		ldr	r3, .L124+12
 2179 0480 44E1     		b	.L121
 2180              	.L108:
 275:clock3.c      ****                 it(text, rtc_month == m);
 2181              		.loc 1 275 0 is_stmt 1
 2182 0482 1D4B     		ldr	r3, .L124
 2183 0484 1B68     		ldr	r3, [r3]
 2184 0486 0133     		adds	r3, r3, #1
 2185 0488 1B4A     		ldr	r2, .L124
 2186 048a 1360     		str	r3, [r2]
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 46


 2187 048c 1F4B     		ldr	r3, .L124+20
 2188 048e 1A68     		ldr	r2, [r3]
 2189 0490 BB6C     		ldr	r3, [r7, #72]
 2190 0492 9A42     		cmp	r2, r3
 2191 0494 0AD0     		beq	.L109
 2192              		.loc 1 275 0 is_stmt 0 discriminator 1
 2193 0496 1A4B     		ldr	r3, .L124+8
 2194 0498 0093     		str	r3, [sp]
 2195 049a 1A48     		ldr	r0, .L124+12
 2196 049c 1A49     		ldr	r1, .L124+16
 2197 049e 194A     		ldr	r2, .L124+12
 2198 04a0 40F21313 		movw	r3, #275
 2199 04a4 FFF7FEFF 		bl	sprintf
 2200 04a8 164B     		ldr	r3, .L124+12
 2201 04aa 2FE1     		b	.L121
 2202              	.L109:
 276:clock3.c      ****                 sprintf(text, "establishe days in month %d of normal year %d", rtc_month, rtc_year)
 2203              		.loc 1 276 0 is_stmt 1
 2204 04ac 174B     		ldr	r3, .L124+20
 2205 04ae 1A68     		ldr	r2, [r3]
 2206 04b0 174B     		ldr	r3, .L124+24
 2207 04b2 1B68     		ldr	r3, [r3]
 2208 04b4 1348     		ldr	r0, .L124+12
 2209 04b6 1949     		ldr	r1, .L124+36
 2210 04b8 FFF7FEFF 		bl	sprintf
 277:clock3.c      ****                 it(text, days_in_month[rtc_month] == rtc_days_in_month());
 2211              		.loc 1 277 0
 2212 04bc 0E4B     		ldr	r3, .L124
 2213 04be 1B68     		ldr	r3, [r3]
 2214 04c0 0133     		adds	r3, r3, #1
 2215 04c2 0D4A     		ldr	r2, .L124
 2216 04c4 1360     		str	r3, [r2]
 2217 04c6 114B     		ldr	r3, .L124+20
 2218 04c8 1B68     		ldr	r3, [r3]
 2219 04ca 9B00     		lsls	r3, r3, #2
 2220 04cc 07F15002 		add	r2, r7, #80
 2221 04d0 1344     		add	r3, r3, r2
 2222 04d2 53F84C4C 		ldr	r4, [r3, #-76]
 2223 04d6 FFF7FEFF 		bl	rtc_days_in_month
 2224 04da 0346     		mov	r3, r0
 2225 04dc 9C42     		cmp	r4, r3
 2226 04de 1FD0     		beq	.L110
 2227              		.loc 1 277 0 is_stmt 0 discriminator 1
 2228 04e0 074B     		ldr	r3, .L124+8
 2229 04e2 0093     		str	r3, [sp]
 2230 04e4 0748     		ldr	r0, .L124+12
 2231 04e6 0849     		ldr	r1, .L124+16
 2232 04e8 064A     		ldr	r2, .L124+12
 2233 04ea 40F21513 		movw	r3, #277
 2234 04ee FFF7FEFF 		bl	sprintf
 2235 04f2 044B     		ldr	r3, .L124+12
 2236 04f4 0AE1     		b	.L121
 2237              	.L125:
 2238 04f6 00BF     		.align	2
 2239              	.L124:
 2240 04f8 00000000 		.word	assertion_count
 2241 04fc 00000000 		.word	rtc_typef
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 47


 2242 0500 64000000 		.word	.LC3
 2243 0504 00000000 		.word	text
 2244 0508 34000000 		.word	.LC1
 2245 050c 00000000 		.word	rtc_month
 2246 0510 00000000 		.word	rtc_year
 2247 0514 30030000 		.word	.LC24
 2248 0518 80020000 		.word	.LC21
 2249 051c 4C030000 		.word	.LC25
 2250              	.L110:
 278:clock3.c      ****                 
 279:clock3.c      ****                 rtc_set_day(days_in_month[rtc_month]);
 2251              		.loc 1 279 0 is_stmt 1
 2252 0520 7C4B     		ldr	r3, .L126
 2253 0522 1B68     		ldr	r3, [r3]
 2254 0524 9B00     		lsls	r3, r3, #2
 2255 0526 07F15002 		add	r2, r7, #80
 2256 052a 1344     		add	r3, r3, r2
 2257 052c 53F84C3C 		ldr	r3, [r3, #-76]
 2258 0530 1846     		mov	r0, r3
 2259 0532 FFF7FEFF 		bl	rtc_set_day
 280:clock3.c      ****                 rtc_set_seconds(59);
 2260              		.loc 1 280 0
 2261 0536 3B20     		movs	r0, #59
 2262 0538 FFF7FEFF 		bl	rtc_set_seconds
 281:clock3.c      ****                 rtc_set_minutes(59);
 2263              		.loc 1 281 0
 2264 053c 3B20     		movs	r0, #59
 2265 053e FFF7FEFF 		bl	rtc_set_minutes
 282:clock3.c      ****                 rtc_set_hour(23);
 2266              		.loc 1 282 0
 2267 0542 1720     		movs	r0, #23
 2268 0544 FFF7FEFF 		bl	rtc_set_hour
 283:clock3.c      ****                 rtc_tick();
 2269              		.loc 1 283 0
 2270 0548 FFF7FEFF 		bl	rtc_tick
 284:clock3.c      ****                 sprintf(text, "handle end of month overflow, year %d, month %d, day %d, hour %d, mi
 2271              		.loc 1 284 0
 2272 054c 724B     		ldr	r3, .L126+4
 2273 054e 1D68     		ldr	r5, [r3]
 2274 0550 704B     		ldr	r3, .L126
 2275 0552 1C68     		ldr	r4, [r3]
 2276 0554 714B     		ldr	r3, .L126+8
 2277 0556 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2278 0558 03F01F00 		and	r0, r3, #31
 2279 055c 6F4B     		ldr	r3, .L126+8
 2280 055e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2281 0560 03F01F01 		and	r1, r3, #31
 2282 0564 6D4B     		ldr	r3, .L126+8
 2283 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0568 03F03F02 		and	r2, r3, #63
 2285 056c 6C4B     		ldr	r3, .L126+12
 2286 056e 1B68     		ldr	r3, [r3]
 2287 0570 0090     		str	r0, [sp]
 2288 0572 0191     		str	r1, [sp, #4]
 2289 0574 0292     		str	r2, [sp, #8]
 2290 0576 0393     		str	r3, [sp, #12]
 2291 0578 6A48     		ldr	r0, .L126+16
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 48


 2292 057a 6B49     		ldr	r1, .L126+20
 2293 057c 2A46     		mov	r2, r5
 2294 057e 2346     		mov	r3, r4
 2295 0580 FFF7FEFF 		bl	sprintf
 285:clock3.c      ****                 it(text, rtc_sec == 0);
 2296              		.loc 1 285 0
 2297 0584 694B     		ldr	r3, .L126+24
 2298 0586 1B68     		ldr	r3, [r3]
 2299 0588 0133     		adds	r3, r3, #1
 2300 058a 684A     		ldr	r2, .L126+24
 2301 058c 1360     		str	r3, [r2]
 2302 058e 644B     		ldr	r3, .L126+12
 2303 0590 1B68     		ldr	r3, [r3]
 2304 0592 002B     		cmp	r3, #0
 2305 0594 0AD0     		beq	.L111
 2306              		.loc 1 285 0 is_stmt 0 discriminator 1
 2307 0596 664B     		ldr	r3, .L126+28
 2308 0598 0093     		str	r3, [sp]
 2309 059a 6248     		ldr	r0, .L126+16
 2310 059c 6549     		ldr	r1, .L126+32
 2311 059e 614A     		ldr	r2, .L126+16
 2312 05a0 40F21D13 		movw	r3, #285
 2313 05a4 FFF7FEFF 		bl	sprintf
 2314 05a8 5E4B     		ldr	r3, .L126+16
 2315 05aa AFE0     		b	.L121
 2316              	.L111:
 286:clock3.c      ****                 it(text, rtc_min == 0);
 2317              		.loc 1 286 0 is_stmt 1
 2318 05ac 5F4B     		ldr	r3, .L126+24
 2319 05ae 1B68     		ldr	r3, [r3]
 2320 05b0 0133     		adds	r3, r3, #1
 2321 05b2 5E4A     		ldr	r2, .L126+24
 2322 05b4 1360     		str	r3, [r2]
 2323 05b6 594B     		ldr	r3, .L126+8
 2324 05b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2325 05ba 03F03F03 		and	r3, r3, #63
 2326 05be 002B     		cmp	r3, #0
 2327 05c0 0AD0     		beq	.L112
 2328              		.loc 1 286 0 is_stmt 0 discriminator 1
 2329 05c2 5B4B     		ldr	r3, .L126+28
 2330 05c4 0093     		str	r3, [sp]
 2331 05c6 5748     		ldr	r0, .L126+16
 2332 05c8 5A49     		ldr	r1, .L126+32
 2333 05ca 564A     		ldr	r2, .L126+16
 2334 05cc 4FF48F73 		mov	r3, #286
 2335 05d0 FFF7FEFF 		bl	sprintf
 2336 05d4 534B     		ldr	r3, .L126+16
 2337 05d6 99E0     		b	.L121
 2338              	.L112:
 287:clock3.c      ****                 it(text, rtc_hour == 0);
 2339              		.loc 1 287 0 is_stmt 1
 2340 05d8 544B     		ldr	r3, .L126+24
 2341 05da 1B68     		ldr	r3, [r3]
 2342 05dc 0133     		adds	r3, r3, #1
 2343 05de 534A     		ldr	r2, .L126+24
 2344 05e0 1360     		str	r3, [r2]
 2345 05e2 4E4B     		ldr	r3, .L126+8
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 49


 2346 05e4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2347 05e6 03F01F03 		and	r3, r3, #31
 2348 05ea 002B     		cmp	r3, #0
 2349 05ec 0AD0     		beq	.L113
 2350              		.loc 1 287 0 is_stmt 0 discriminator 1
 2351 05ee 504B     		ldr	r3, .L126+28
 2352 05f0 0093     		str	r3, [sp]
 2353 05f2 4C48     		ldr	r0, .L126+16
 2354 05f4 4F49     		ldr	r1, .L126+32
 2355 05f6 4B4A     		ldr	r2, .L126+16
 2356 05f8 40F21F13 		movw	r3, #287
 2357 05fc FFF7FEFF 		bl	sprintf
 2358 0600 484B     		ldr	r3, .L126+16
 2359 0602 83E0     		b	.L121
 2360              	.L113:
 288:clock3.c      ****                 it(text, rtc_day == 1);
 2361              		.loc 1 288 0 is_stmt 1
 2362 0604 494B     		ldr	r3, .L126+24
 2363 0606 1B68     		ldr	r3, [r3]
 2364 0608 0133     		adds	r3, r3, #1
 2365 060a 484A     		ldr	r2, .L126+24
 2366 060c 1360     		str	r3, [r2]
 2367 060e 434B     		ldr	r3, .L126+8
 2368 0610 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2369 0612 03F01F03 		and	r3, r3, #31
 2370 0616 012B     		cmp	r3, #1
 2371 0618 0AD0     		beq	.L114
 2372              		.loc 1 288 0 is_stmt 0 discriminator 1
 2373 061a 454B     		ldr	r3, .L126+28
 2374 061c 0093     		str	r3, [sp]
 2375 061e 4148     		ldr	r0, .L126+16
 2376 0620 4449     		ldr	r1, .L126+32
 2377 0622 404A     		ldr	r2, .L126+16
 2378 0624 4FF49073 		mov	r3, #288
 2379 0628 FFF7FEFF 		bl	sprintf
 2380 062c 3D4B     		ldr	r3, .L126+16
 2381 062e 6DE0     		b	.L121
 2382              	.L114:
 289:clock3.c      ****                 if (m < 12)
 2383              		.loc 1 289 0 is_stmt 1
 2384 0630 BB6C     		ldr	r3, [r7, #72]
 2385 0632 0B2B     		cmp	r3, #11
 2386 0634 2ADC     		bgt	.L115
 290:clock3.c      ****                 {
 291:clock3.c      ****                    it(text, rtc_month == m+1);
 2387              		.loc 1 291 0
 2388 0636 3D4B     		ldr	r3, .L126+24
 2389 0638 1B68     		ldr	r3, [r3]
 2390 063a 0133     		adds	r3, r3, #1
 2391 063c 3B4A     		ldr	r2, .L126+24
 2392 063e 1360     		str	r3, [r2]
 2393 0640 BB6C     		ldr	r3, [r7, #72]
 2394 0642 5A1C     		adds	r2, r3, #1
 2395 0644 334B     		ldr	r3, .L126
 2396 0646 1B68     		ldr	r3, [r3]
 2397 0648 9A42     		cmp	r2, r3
 2398 064a 0AD0     		beq	.L116
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 50


 2399              		.loc 1 291 0 is_stmt 0 discriminator 1
 2400 064c 384B     		ldr	r3, .L126+28
 2401 064e 0093     		str	r3, [sp]
 2402 0650 3448     		ldr	r0, .L126+16
 2403 0652 3849     		ldr	r1, .L126+32
 2404 0654 334A     		ldr	r2, .L126+16
 2405 0656 40F22313 		movw	r3, #291
 2406 065a FFF7FEFF 		bl	sprintf
 2407 065e 314B     		ldr	r3, .L126+16
 2408 0660 54E0     		b	.L121
 2409              	.L116:
 292:clock3.c      ****                    it(text, rtc_year == y);
 2410              		.loc 1 292 0 is_stmt 1
 2411 0662 324B     		ldr	r3, .L126+24
 2412 0664 1B68     		ldr	r3, [r3]
 2413 0666 0133     		adds	r3, r3, #1
 2414 0668 304A     		ldr	r2, .L126+24
 2415 066a 1360     		str	r3, [r2]
 2416 066c 2A4B     		ldr	r3, .L126+4
 2417 066e 1A68     		ldr	r2, [r3]
 2418 0670 FB6C     		ldr	r3, [r7, #76]
 2419 0672 9A42     		cmp	r2, r3
 2420 0674 34D0     		beq	.L117
 2421              		.loc 1 292 0 is_stmt 0 discriminator 1
 2422 0676 2E4B     		ldr	r3, .L126+28
 2423 0678 0093     		str	r3, [sp]
 2424 067a 2A48     		ldr	r0, .L126+16
 2425 067c 2D49     		ldr	r1, .L126+32
 2426 067e 294A     		ldr	r2, .L126+16
 2427 0680 4FF49273 		mov	r3, #292
 2428 0684 FFF7FEFF 		bl	sprintf
 2429 0688 264B     		ldr	r3, .L126+16
 2430 068a 3FE0     		b	.L121
 2431              	.L115:
 293:clock3.c      ****                 }
 294:clock3.c      ****                 
 295:clock3.c      ****                 else
 296:clock3.c      ****                 {
 297:clock3.c      ****                    it(text, rtc_month == 1);
 2432              		.loc 1 297 0 is_stmt 1
 2433 068c 274B     		ldr	r3, .L126+24
 2434 068e 1B68     		ldr	r3, [r3]
 2435 0690 0133     		adds	r3, r3, #1
 2436 0692 264A     		ldr	r2, .L126+24
 2437 0694 1360     		str	r3, [r2]
 2438 0696 1F4B     		ldr	r3, .L126
 2439 0698 1B68     		ldr	r3, [r3]
 2440 069a 012B     		cmp	r3, #1
 2441 069c 0AD0     		beq	.L118
 2442              		.loc 1 297 0 is_stmt 0 discriminator 1
 2443 069e 244B     		ldr	r3, .L126+28
 2444 06a0 0093     		str	r3, [sp]
 2445 06a2 2048     		ldr	r0, .L126+16
 2446 06a4 2349     		ldr	r1, .L126+32
 2447 06a6 1F4A     		ldr	r2, .L126+16
 2448 06a8 40F22913 		movw	r3, #297
 2449 06ac FFF7FEFF 		bl	sprintf
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 51


 2450 06b0 1C4B     		ldr	r3, .L126+16
 2451 06b2 2BE0     		b	.L121
 2452              	.L118:
 298:clock3.c      ****                    it(text, rtc_year == (y+1));
 2453              		.loc 1 298 0 is_stmt 1
 2454 06b4 1D4B     		ldr	r3, .L126+24
 2455 06b6 1B68     		ldr	r3, [r3]
 2456 06b8 0133     		adds	r3, r3, #1
 2457 06ba 1C4A     		ldr	r2, .L126+24
 2458 06bc 1360     		str	r3, [r2]
 2459 06be FB6C     		ldr	r3, [r7, #76]
 2460 06c0 5A1C     		adds	r2, r3, #1
 2461 06c2 154B     		ldr	r3, .L126+4
 2462 06c4 1B68     		ldr	r3, [r3]
 2463 06c6 9A42     		cmp	r2, r3
 2464 06c8 0AD0     		beq	.L117
 2465              		.loc 1 298 0 is_stmt 0 discriminator 1
 2466 06ca 194B     		ldr	r3, .L126+28
 2467 06cc 0093     		str	r3, [sp]
 2468 06ce 1548     		ldr	r0, .L126+16
 2469 06d0 1849     		ldr	r1, .L126+32
 2470 06d2 144A     		ldr	r2, .L126+16
 2471 06d4 4FF49573 		mov	r3, #298
 2472 06d8 FFF7FEFF 		bl	sprintf
 2473 06dc 114B     		ldr	r3, .L126+16
 2474 06de 15E0     		b	.L121
 2475              	.L117:
 270:clock3.c      ****             {
 2476              		.loc 1 270 0 is_stmt 1 discriminator 2
 2477 06e0 BB6C     		ldr	r3, [r7, #72]
 2478 06e2 0133     		adds	r3, r3, #1
 2479 06e4 BB64     		str	r3, [r7, #72]
 2480              	.L107:
 270:clock3.c      ****             {
 2481              		.loc 1 270 0 is_stmt 0 discriminator 1
 2482 06e6 BA6C     		ldr	r2, [r7, #72]
 2483 06e8 FB6B     		ldr	r3, [r7, #60]
 2484 06ea 9A42     		cmp	r2, r3
 2485 06ec FFF6A9AE 		blt	.L119
 299:clock3.c      ****                 }
 300:clock3.c      ****             }
 301:clock3.c      ****             nmin = 2;
 2486              		.loc 1 301 0 is_stmt 1
 2487 06f0 0223     		movs	r3, #2
 2488 06f2 7B64     		str	r3, [r7, #68]
 302:clock3.c      ****             nmax = 5;
 2489              		.loc 1 302 0
 2490 06f4 0523     		movs	r3, #5
 2491 06f6 FB63     		str	r3, [r7, #60]
 2492              	.L105:
 212:clock3.c      ****     {
 2493              		.loc 1 212 0 discriminator 2
 2494 06f8 FB6C     		ldr	r3, [r7, #76]
 2495 06fa 0133     		adds	r3, r3, #1
 2496 06fc FB64     		str	r3, [r7, #76]
 2497              	.L82:
 212:clock3.c      ****     {
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 52


 2498              		.loc 1 212 0 is_stmt 0 discriminator 1
 2499 06fe FB6C     		ldr	r3, [r7, #76]
 2500 0700 40F69702 		movw	r2, #2199
 2501 0704 9342     		cmp	r3, r2
 2502 0706 7FF795AC 		ble	.L120
 303:clock3.c      ****         }
 304:clock3.c      ****     }
 305:clock3.c      ****     return 0;
 2503              		.loc 1 305 0 is_stmt 1
 2504 070a 0023     		movs	r3, #0
 2505              	.L121:
 306:clock3.c      **** }
 2506              		.loc 1 306 0 discriminator 1
 2507 070c 1846     		mov	r0, r3
 2508 070e 5037     		adds	r7, r7, #80
 2509              		.cfi_def_cfa_offset 16
 2510 0710 BD46     		mov	sp, r7
 2511              		.cfi_def_cfa_register 13
 2512              		@ sp needed
 2513 0712 B0BD     		pop	{r4, r5, r7, pc}
 2514              	.L127:
 2515              		.align	2
 2516              	.L126:
 2517 0714 00000000 		.word	rtc_month
 2518 0718 00000000 		.word	rtc_year
 2519 071c 00000000 		.word	rtc_typef
 2520 0720 00000000 		.word	rtc_sec
 2521 0724 00000000 		.word	text
 2522 0728 D4020000 		.word	.LC23
 2523 072c 00000000 		.word	assertion_count
 2524 0730 64000000 		.word	.LC3
 2525 0734 34000000 		.word	.LC1
 2526              		.cfi_endproc
 2527              	.LFE13:
 2528              		.size	test_rtc_leap_years, .-test_rtc_leap_years
 2529              		.global	TestCollection
 2530              		.section	.rodata
 2531 037a 0000     		.align	2
 2532              	.LC26:
 2533 037c 5265616C 		.ascii	"Real Time Clock Seconds\000"
 2533      2054696D 
 2533      6520436C 
 2533      6F636B20 
 2533      5365636F 
 2534              		.align	2
 2535              	.LC27:
 2536 0394 5265616C 		.ascii	"Real Time Clock Minutes\000"
 2536      2054696D 
 2536      6520436C 
 2536      6F636B20 
 2536      4D696E75 
 2537              		.align	2
 2538              	.LC28:
 2539 03ac 5265616C 		.ascii	"Real Time Clock Hours\000"
 2539      2054696D 
 2539      6520436C 
 2539      6F636B20 
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 53


 2539      486F7572 
 2540 03c2 0000     		.align	2
 2541              	.LC29:
 2542 03c4 5265616C 		.ascii	"Real Time Clock Days & Months\000"
 2542      2054696D 
 2542      6520436C 
 2542      6F636B20 
 2542      44617973 
 2543 03e2 0000     		.align	2
 2544              	.LC30:
 2545 03e4 5265616C 		.ascii	"Real Time Clock Leap Years\000"
 2545      2054696D 
 2545      6520436C 
 2545      6F636B20 
 2545      4C656170 
 2546              		.data
 2547              		.align	2
 2548              		.type	TestCollection, %object
 2549              		.size	TestCollection, 40
 2550              	TestCollection:
 2551 000c 7C030000 		.word	.LC26
 2552 0010 00000000 		.word	test_rtc_sec
 2553 0014 94030000 		.word	.LC27
 2554 0018 00000000 		.word	test_rtc_min
 2555 001c AC030000 		.word	.LC28
 2556 0020 00000000 		.word	test_rtc_hour
 2557 0024 C4030000 		.word	.LC29
 2558 0028 00000000 		.word	test_rtc_days_months
 2559 002c E4030000 		.word	.LC30
 2560 0030 00000000 		.word	test_rtc_leap_years
 2561              		.global	testsCount
 2562              		.section	.rodata
 2563 03ff 00       		.align	2
 2564              		.type	testsCount, %object
 2565              		.size	testsCount, 4
 2566              	testsCount:
 2567 0400 05000000 		.word	5
 2568              		.text
 2569              	.Letext0:
 2570              		.file 2 "minunit.h"
 2571              		.section	.debug_info,"",%progbits
 2572              	.Ldebug_info0:
 2573 0000 8A030000 		.4byte	0x38a
 2574 0004 0400     		.2byte	0x4
 2575 0006 00000000 		.4byte	.Ldebug_abbrev0
 2576 000a 04       		.byte	0x4
 2577 000b 01       		.uleb128 0x1
 2578 000c 3F000000 		.4byte	.LASF41
 2579 0010 01       		.byte	0x1
 2580 0011 DF020000 		.4byte	.LASF42
 2581 0015 D5000000 		.4byte	.LASF43
 2582 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2583 001d 00000000 		.4byte	0
 2584 0021 00000000 		.4byte	.Ldebug_line0
 2585 0025 02       		.uleb128 0x2
 2586 0026 01       		.byte	0x1
 2587 0027 06       		.byte	0x6
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 54


 2588 0028 D3020000 		.4byte	.LASF0
 2589 002c 02       		.uleb128 0x2
 2590 002d 01       		.byte	0x1
 2591 002e 08       		.byte	0x8
 2592 002f 4F010000 		.4byte	.LASF1
 2593 0033 02       		.uleb128 0x2
 2594 0034 02       		.byte	0x2
 2595 0035 05       		.byte	0x5
 2596 0036 9F020000 		.4byte	.LASF2
 2597 003a 02       		.uleb128 0x2
 2598 003b 02       		.byte	0x2
 2599 003c 07       		.byte	0x7
 2600 003d 79010000 		.4byte	.LASF3
 2601 0041 02       		.uleb128 0x2
 2602 0042 04       		.byte	0x4
 2603 0043 05       		.byte	0x5
 2604 0044 C5020000 		.4byte	.LASF4
 2605 0048 02       		.uleb128 0x2
 2606 0049 04       		.byte	0x4
 2607 004a 07       		.byte	0x7
 2608 004b 62010000 		.4byte	.LASF5
 2609 004f 02       		.uleb128 0x2
 2610 0050 08       		.byte	0x8
 2611 0051 05       		.byte	0x5
 2612 0052 46020000 		.4byte	.LASF6
 2613 0056 02       		.uleb128 0x2
 2614 0057 08       		.byte	0x8
 2615 0058 07       		.byte	0x7
 2616 0059 C9010000 		.4byte	.LASF7
 2617 005d 03       		.uleb128 0x3
 2618 005e 04       		.byte	0x4
 2619 005f 05       		.byte	0x5
 2620 0060 696E7400 		.ascii	"int\000"
 2621 0064 02       		.uleb128 0x2
 2622 0065 04       		.byte	0x4
 2623 0066 07       		.byte	0x7
 2624 0067 BC010000 		.4byte	.LASF8
 2625 006b 02       		.uleb128 0x2
 2626 006c 04       		.byte	0x4
 2627 006d 07       		.byte	0x7
 2628 006e 1B020000 		.4byte	.LASF9
 2629 0072 04       		.uleb128 0x4
 2630 0073 04       		.byte	0x4
 2631 0074 78000000 		.4byte	0x78
 2632 0078 02       		.uleb128 0x2
 2633 0079 01       		.byte	0x1
 2634 007a 08       		.byte	0x8
 2635 007b CE020000 		.4byte	.LASF10
 2636 007f 05       		.uleb128 0x5
 2637 0080 44010000 		.4byte	.LASF44
 2638 0084 08       		.byte	0x8
 2639 0085 02       		.byte	0x2
 2640 0086 28       		.byte	0x28
 2641 0087 A4000000 		.4byte	0xa4
 2642 008b 06       		.uleb128 0x6
 2643 008c 6D736700 		.ascii	"msg\000"
 2644 0090 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 55


 2645 0091 29       		.byte	0x29
 2646 0092 72000000 		.4byte	0x72
 2647 0096 00       		.byte	0
 2648 0097 07       		.uleb128 0x7
 2649 0098 B7010000 		.4byte	.LASF11
 2650 009c 02       		.byte	0x2
 2651 009d 2A       		.byte	0x2a
 2652 009e A9000000 		.4byte	0xa9
 2653 00a2 04       		.byte	0x4
 2654 00a3 00       		.byte	0
 2655 00a4 08       		.uleb128 0x8
 2656 00a5 72000000 		.4byte	0x72
 2657 00a9 04       		.uleb128 0x4
 2658 00aa 04       		.byte	0x4
 2659 00ab A4000000 		.4byte	0xa4
 2660 00af 09       		.uleb128 0x9
 2661 00b0 91010000 		.4byte	.LASF12
 2662 00b4 01       		.byte	0x1
 2663 00b5 0D       		.byte	0xd
 2664 00b6 00000000 		.4byte	.LFB0
 2665 00ba 1C000000 		.4byte	.LFE0-.LFB0
 2666 00be 01       		.uleb128 0x1
 2667 00bf 9C       		.byte	0x9c
 2668 00c0 D1000000 		.4byte	0xd1
 2669 00c4 0A       		.uleb128 0xa
 2670 00c5 7300     		.ascii	"s\000"
 2671 00c7 01       		.byte	0x1
 2672 00c8 0D       		.byte	0xd
 2673 00c9 5D000000 		.4byte	0x5d
 2674 00cd 02       		.uleb128 0x2
 2675 00ce 91       		.byte	0x91
 2676 00cf 74       		.sleb128 -12
 2677 00d0 00       		.byte	0
 2678 00d1 09       		.uleb128 0x9
 2679 00d2 59020000 		.4byte	.LASF13
 2680 00d6 01       		.byte	0x1
 2681 00d7 13       		.byte	0x13
 2682 00d8 00000000 		.4byte	.LFB1
 2683 00dc 38000000 		.4byte	.LFE1-.LFB1
 2684 00e0 01       		.uleb128 0x1
 2685 00e1 9C       		.byte	0x9c
 2686 00e2 F3000000 		.4byte	0xf3
 2687 00e6 0A       		.uleb128 0xa
 2688 00e7 6D00     		.ascii	"m\000"
 2689 00e9 01       		.byte	0x1
 2690 00ea 13       		.byte	0x13
 2691 00eb 5D000000 		.4byte	0x5d
 2692 00ef 02       		.uleb128 0x2
 2693 00f0 91       		.byte	0x91
 2694 00f1 74       		.sleb128 -12
 2695 00f2 00       		.byte	0
 2696 00f3 09       		.uleb128 0x9
 2697 00f4 37010000 		.4byte	.LASF14
 2698 00f8 01       		.byte	0x1
 2699 00f9 1C       		.byte	0x1c
 2700 00fa 00000000 		.4byte	.LFB2
 2701 00fe 38000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 56


 2702 0102 01       		.uleb128 0x1
 2703 0103 9C       		.byte	0x9c
 2704 0104 15010000 		.4byte	0x115
 2705 0108 0A       		.uleb128 0xa
 2706 0109 6800     		.ascii	"h\000"
 2707 010b 01       		.byte	0x1
 2708 010c 1C       		.byte	0x1c
 2709 010d 5D000000 		.4byte	0x5d
 2710 0111 02       		.uleb128 0x2
 2711 0112 91       		.byte	0x91
 2712 0113 74       		.sleb128 -12
 2713 0114 00       		.byte	0
 2714 0115 09       		.uleb128 0x9
 2715 0116 0F020000 		.4byte	.LASF15
 2716 011a 01       		.byte	0x1
 2717 011b 25       		.byte	0x25
 2718 011c 00000000 		.4byte	.LFB3
 2719 0120 38000000 		.4byte	.LFE3-.LFB3
 2720 0124 01       		.uleb128 0x1
 2721 0125 9C       		.byte	0x9c
 2722 0126 37010000 		.4byte	0x137
 2723 012a 0A       		.uleb128 0xa
 2724 012b 6400     		.ascii	"d\000"
 2725 012d 01       		.byte	0x1
 2726 012e 25       		.byte	0x25
 2727 012f 5D000000 		.4byte	0x5d
 2728 0133 02       		.uleb128 0x2
 2729 0134 91       		.byte	0x91
 2730 0135 74       		.sleb128 -12
 2731 0136 00       		.byte	0
 2732 0137 09       		.uleb128 0x9
 2733 0138 18000000 		.4byte	.LASF16
 2734 013c 01       		.byte	0x1
 2735 013d 32       		.byte	0x32
 2736 013e 00000000 		.4byte	.LFB4
 2737 0142 1C000000 		.4byte	.LFE4-.LFB4
 2738 0146 01       		.uleb128 0x1
 2739 0147 9C       		.byte	0x9c
 2740 0148 59010000 		.4byte	0x159
 2741 014c 0A       		.uleb128 0xa
 2742 014d 6D00     		.ascii	"m\000"
 2743 014f 01       		.byte	0x1
 2744 0150 32       		.byte	0x32
 2745 0151 5D000000 		.4byte	0x5d
 2746 0155 02       		.uleb128 0x2
 2747 0156 91       		.byte	0x91
 2748 0157 74       		.sleb128 -12
 2749 0158 00       		.byte	0
 2750 0159 09       		.uleb128 0x9
 2751 015a B2020000 		.4byte	.LASF17
 2752 015e 01       		.byte	0x1
 2753 015f 37       		.byte	0x37
 2754 0160 00000000 		.4byte	.LFB5
 2755 0164 1C000000 		.4byte	.LFE5-.LFB5
 2756 0168 01       		.uleb128 0x1
 2757 0169 9C       		.byte	0x9c
 2758 016a 7B010000 		.4byte	0x17b
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 57


 2759 016e 0A       		.uleb128 0xa
 2760 016f 7900     		.ascii	"y\000"
 2761 0171 01       		.byte	0x1
 2762 0172 37       		.byte	0x37
 2763 0173 5D000000 		.4byte	0x5d
 2764 0177 02       		.uleb128 0x2
 2765 0178 91       		.byte	0x91
 2766 0179 74       		.sleb128 -12
 2767 017a 00       		.byte	0
 2768 017b 0B       		.uleb128 0xb
 2769 017c 79020000 		.4byte	.LASF20
 2770 0180 01       		.byte	0x1
 2771 0181 3C       		.byte	0x3c
 2772 0182 5D000000 		.4byte	0x5d
 2773 0186 00000000 		.4byte	.LFB6
 2774 018a 64000000 		.4byte	.LFE6-.LFB6
 2775 018e 01       		.uleb128 0x1
 2776 018f 9C       		.byte	0x9c
 2777 0190 BE010000 		.4byte	0x1be
 2778 0194 0C       		.uleb128 0xc
 2779 0195 793400   		.ascii	"y4\000"
 2780 0198 01       		.byte	0x1
 2781 0199 40       		.byte	0x40
 2782 019a 5D000000 		.4byte	0x5d
 2783 019e 02       		.uleb128 0x2
 2784 019f 91       		.byte	0x91
 2785 01a0 6C       		.sleb128 -20
 2786 01a1 0D       		.uleb128 0xd
 2787 01a2 54020000 		.4byte	.LASF18
 2788 01a6 01       		.byte	0x1
 2789 01a7 42       		.byte	0x42
 2790 01a8 5D000000 		.4byte	0x5d
 2791 01ac 02       		.uleb128 0x2
 2792 01ad 91       		.byte	0x91
 2793 01ae 74       		.sleb128 -12
 2794 01af 0D       		.uleb128 0xd
 2795 01b0 74020000 		.4byte	.LASF19
 2796 01b4 01       		.byte	0x1
 2797 01b5 45       		.byte	0x45
 2798 01b6 5D000000 		.4byte	0x5d
 2799 01ba 02       		.uleb128 0x2
 2800 01bb 91       		.byte	0x91
 2801 01bc 70       		.sleb128 -16
 2802 01bd 00       		.byte	0
 2803 01be 0E       		.uleb128 0xe
 2804 01bf 24020000 		.4byte	.LASF21
 2805 01c3 01       		.byte	0x1
 2806 01c4 4B       		.byte	0x4b
 2807 01c5 5D000000 		.4byte	0x5d
 2808 01c9 00000000 		.4byte	.LFB7
 2809 01cd 64000000 		.4byte	.LFE7-.LFB7
 2810 01d1 01       		.uleb128 0x1
 2811 01d2 9C       		.byte	0x9c
 2812 01d3 E7010000 		.4byte	0x1e7
 2813 01d7 0D       		.uleb128 0xd
 2814 01d8 0A000000 		.4byte	.LASF22
 2815 01dc 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 58


 2816 01dd 4D       		.byte	0x4d
 2817 01de F7010000 		.4byte	0x1f7
 2818 01e2 03       		.uleb128 0x3
 2819 01e3 91       		.byte	0x91
 2820 01e4 BC7F     		.sleb128 -68
 2821 01e6 00       		.byte	0
 2822 01e7 0F       		.uleb128 0xf
 2823 01e8 5D000000 		.4byte	0x5d
 2824 01ec F7010000 		.4byte	0x1f7
 2825 01f0 10       		.uleb128 0x10
 2826 01f1 6B000000 		.4byte	0x6b
 2827 01f5 0C       		.byte	0xc
 2828 01f6 00       		.byte	0
 2829 01f7 11       		.uleb128 0x11
 2830 01f8 E7010000 		.4byte	0x1e7
 2831 01fc 12       		.uleb128 0x12
 2832 01fd A9020000 		.4byte	.LASF23
 2833 0201 01       		.byte	0x1
 2834 0202 55       		.byte	0x55
 2835 0203 00000000 		.4byte	.LFB8
 2836 0207 20010000 		.4byte	.LFE8-.LFB8
 2837 020b 01       		.uleb128 0x1
 2838 020c 9C       		.byte	0x9c
 2839 020d 13       		.uleb128 0x13
 2840 020e 02020000 		.4byte	.LASF24
 2841 0212 01       		.byte	0x1
 2842 0213 7B       		.byte	0x7b
 2843 0214 72000000 		.4byte	0x72
 2844 0218 00000000 		.4byte	.LFB9
 2845 021c 0C010000 		.4byte	.LFE9-.LFB9
 2846 0220 01       		.uleb128 0x1
 2847 0221 9C       		.byte	0x9c
 2848 0222 13       		.uleb128 0x13
 2849 0223 A1010000 		.4byte	.LASF25
 2850 0227 01       		.byte	0x1
 2851 0228 89       		.byte	0x89
 2852 0229 72000000 		.4byte	0x72
 2853 022d 00000000 		.4byte	.LFB10
 2854 0231 00010000 		.4byte	.LFE10-.LFB10
 2855 0235 01       		.uleb128 0x1
 2856 0236 9C       		.byte	0x9c
 2857 0237 13       		.uleb128 0x13
 2858 0238 F4010000 		.4byte	.LASF26
 2859 023c 01       		.byte	0x1
 2860 023d 98       		.byte	0x98
 2861 023e 72000000 		.4byte	0x72
 2862 0242 00000000 		.4byte	.LFB11
 2863 0246 3C010000 		.4byte	.LFE11-.LFB11
 2864 024a 01       		.uleb128 0x1
 2865 024b 9C       		.byte	0x9c
 2866 024c 13       		.uleb128 0x13
 2867 024d 8A020000 		.4byte	.LASF27
 2868 0251 01       		.byte	0x1
 2869 0252 AA       		.byte	0xaa
 2870 0253 72000000 		.4byte	0x72
 2871 0257 00000000 		.4byte	.LFB12
 2872 025b 3C020000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 59


 2873 025f 01       		.uleb128 0x1
 2874 0260 9C       		.byte	0x9c
 2875 0261 14       		.uleb128 0x14
 2876 0262 E0010000 		.4byte	.LASF28
 2877 0266 01       		.byte	0x1
 2878 0267 CA       		.byte	0xca
 2879 0268 72000000 		.4byte	0x72
 2880 026c 00000000 		.4byte	.LFB13
 2881 0270 38070000 		.4byte	.LFE13-.LFB13
 2882 0274 01       		.uleb128 0x1
 2883 0275 9C       		.byte	0x9c
 2884 0276 DA020000 		.4byte	0x2da
 2885 027a 0D       		.uleb128 0xd
 2886 027b 0A000000 		.4byte	.LASF22
 2887 027f 01       		.byte	0x1
 2888 0280 CC       		.byte	0xcc
 2889 0281 DA020000 		.4byte	0x2da
 2890 0285 03       		.uleb128 0x3
 2891 0286 91       		.byte	0x91
 2892 0287 A47F     		.sleb128 -92
 2893 0289 0C       		.uleb128 0xc
 2894 028a 7900     		.ascii	"y\000"
 2895 028c 01       		.byte	0x1
 2896 028d CE       		.byte	0xce
 2897 028e 5D000000 		.4byte	0x5d
 2898 0292 02       		.uleb128 0x2
 2899 0293 91       		.byte	0x91
 2900 0294 6C       		.sleb128 -20
 2901 0295 0C       		.uleb128 0xc
 2902 0296 6D00     		.ascii	"m\000"
 2903 0298 01       		.byte	0x1
 2904 0299 CF       		.byte	0xcf
 2905 029a 5D000000 		.4byte	0x5d
 2906 029e 02       		.uleb128 0x2
 2907 029f 91       		.byte	0x91
 2908 02a0 68       		.sleb128 -24
 2909 02a1 0D       		.uleb128 0xd
 2910 02a2 C0020000 		.4byte	.LASF29
 2911 02a6 01       		.byte	0x1
 2912 02a7 D1       		.byte	0xd1
 2913 02a8 5D000000 		.4byte	0x5d
 2914 02ac 02       		.uleb128 0x2
 2915 02ad 91       		.byte	0x91
 2916 02ae 64       		.sleb128 -28
 2917 02af 0D       		.uleb128 0xd
 2918 02b0 8C010000 		.4byte	.LASF30
 2919 02b4 01       		.byte	0x1
 2920 02b5 D1       		.byte	0xd1
 2921 02b6 5D000000 		.4byte	0x5d
 2922 02ba 02       		.uleb128 0x2
 2923 02bb 91       		.byte	0x91
 2924 02bc 60       		.sleb128 -32
 2925 02bd 0D       		.uleb128 0xd
 2926 02be 74010000 		.4byte	.LASF31
 2927 02c2 01       		.byte	0x1
 2928 02c3 D2       		.byte	0xd2
 2929 02c4 5D000000 		.4byte	0x5d
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 60


 2930 02c8 02       		.uleb128 0x2
 2931 02c9 91       		.byte	0x91
 2932 02ca 5C       		.sleb128 -36
 2933 02cb 0D       		.uleb128 0xd
 2934 02cc 4A010000 		.4byte	.LASF32
 2935 02d0 01       		.byte	0x1
 2936 02d1 D2       		.byte	0xd2
 2937 02d2 5D000000 		.4byte	0x5d
 2938 02d6 02       		.uleb128 0x2
 2939 02d7 91       		.byte	0x91
 2940 02d8 58       		.sleb128 -40
 2941 02d9 00       		.byte	0
 2942 02da 11       		.uleb128 0x11
 2943 02db E7010000 		.4byte	0x1e7
 2944 02df 15       		.uleb128 0x15
 2945 02e0 36020000 		.4byte	.LASF33
 2946 02e4 02       		.byte	0x2
 2947 02e5 2D       		.byte	0x2d
 2948 02e6 5D000000 		.4byte	0x5d
 2949 02ea 0F       		.uleb128 0xf
 2950 02eb 78000000 		.4byte	0x78
 2951 02ef F5020000 		.4byte	0x2f5
 2952 02f3 16       		.uleb128 0x16
 2953 02f4 00       		.byte	0
 2954 02f5 15       		.uleb128 0x15
 2955 02f6 5D010000 		.4byte	.LASF34
 2956 02fa 02       		.byte	0x2
 2957 02fb 2E       		.byte	0x2e
 2958 02fc EA020000 		.4byte	0x2ea
 2959 0300 0F       		.uleb128 0xf
 2960 0301 78000000 		.4byte	0x78
 2961 0305 10030000 		.4byte	0x310
 2962 0309 10       		.uleb128 0x10
 2963 030a 6B000000 		.4byte	0x6b
 2964 030e 03       		.byte	0x3
 2965 030f 00       		.byte	0
 2966 0310 17       		.uleb128 0x17
 2967 0311 00000000 		.4byte	.LASF35
 2968 0315 01       		.byte	0x1
 2969 0316 0A       		.byte	0xa
 2970 0317 00030000 		.4byte	0x300
 2971 031b 05       		.uleb128 0x5
 2972 031c 03       		.byte	0x3
 2973 031d 00000000 		.4byte	rtc_typef
 2974 0321 17       		.uleb128 0x17
 2975 0322 CD000000 		.4byte	.LASF36
 2976 0326 01       		.byte	0x1
 2977 0327 0C       		.byte	0xc
 2978 0328 5D000000 		.4byte	0x5d
 2979 032c 05       		.uleb128 0x5
 2980 032d 03       		.byte	0x3
 2981 032e 00000000 		.4byte	rtc_sec
 2982 0332 17       		.uleb128 0x17
 2983 0333 26000000 		.4byte	.LASF37
 2984 0337 01       		.byte	0x1
 2985 0338 2E       		.byte	0x2e
 2986 0339 5D000000 		.4byte	0x5d
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 61


 2987 033d 05       		.uleb128 0x5
 2988 033e 03       		.byte	0x3
 2989 033f 00000000 		.4byte	rtc_month
 2990 0343 17       		.uleb128 0x17
 2991 0344 AE010000 		.4byte	.LASF38
 2992 0348 01       		.byte	0x1
 2993 0349 2F       		.byte	0x2f
 2994 034a 5D000000 		.4byte	0x5d
 2995 034e 05       		.uleb128 0x5
 2996 034f 03       		.byte	0x3
 2997 0350 00000000 		.4byte	rtc_year
 2998 0354 0F       		.uleb128 0xf
 2999 0355 7F000000 		.4byte	0x7f
 3000 0359 64030000 		.4byte	0x364
 3001 035d 10       		.uleb128 0x10
 3002 035e 6B000000 		.4byte	0x6b
 3003 0362 04       		.byte	0x4
 3004 0363 00       		.byte	0
 3005 0364 18       		.uleb128 0x18
 3006 0365 30000000 		.4byte	.LASF39
 3007 0369 01       		.byte	0x1
 3008 036a 3501     		.2byte	0x135
 3009 036c 54030000 		.4byte	0x354
 3010 0370 05       		.uleb128 0x5
 3011 0371 03       		.byte	0x3
 3012 0372 00000000 		.4byte	TestCollection
 3013 0376 18       		.uleb128 0x18
 3014 0377 69020000 		.4byte	.LASF40
 3015 037b 01       		.byte	0x1
 3016 037c 3E01     		.2byte	0x13e
 3017 037e 88030000 		.4byte	0x388
 3018 0382 05       		.uleb128 0x5
 3019 0383 03       		.byte	0x3
 3020 0384 00000000 		.4byte	testsCount
 3021 0388 11       		.uleb128 0x11
 3022 0389 5D000000 		.4byte	0x5d
 3023 038d 00       		.byte	0
 3024              		.section	.debug_abbrev,"",%progbits
 3025              	.Ldebug_abbrev0:
 3026 0000 01       		.uleb128 0x1
 3027 0001 11       		.uleb128 0x11
 3028 0002 01       		.byte	0x1
 3029 0003 25       		.uleb128 0x25
 3030 0004 0E       		.uleb128 0xe
 3031 0005 13       		.uleb128 0x13
 3032 0006 0B       		.uleb128 0xb
 3033 0007 03       		.uleb128 0x3
 3034 0008 0E       		.uleb128 0xe
 3035 0009 1B       		.uleb128 0x1b
 3036 000a 0E       		.uleb128 0xe
 3037 000b 55       		.uleb128 0x55
 3038 000c 17       		.uleb128 0x17
 3039 000d 11       		.uleb128 0x11
 3040 000e 01       		.uleb128 0x1
 3041 000f 10       		.uleb128 0x10
 3042 0010 17       		.uleb128 0x17
 3043 0011 00       		.byte	0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 62


 3044 0012 00       		.byte	0
 3045 0013 02       		.uleb128 0x2
 3046 0014 24       		.uleb128 0x24
 3047 0015 00       		.byte	0
 3048 0016 0B       		.uleb128 0xb
 3049 0017 0B       		.uleb128 0xb
 3050 0018 3E       		.uleb128 0x3e
 3051 0019 0B       		.uleb128 0xb
 3052 001a 03       		.uleb128 0x3
 3053 001b 0E       		.uleb128 0xe
 3054 001c 00       		.byte	0
 3055 001d 00       		.byte	0
 3056 001e 03       		.uleb128 0x3
 3057 001f 24       		.uleb128 0x24
 3058 0020 00       		.byte	0
 3059 0021 0B       		.uleb128 0xb
 3060 0022 0B       		.uleb128 0xb
 3061 0023 3E       		.uleb128 0x3e
 3062 0024 0B       		.uleb128 0xb
 3063 0025 03       		.uleb128 0x3
 3064 0026 08       		.uleb128 0x8
 3065 0027 00       		.byte	0
 3066 0028 00       		.byte	0
 3067 0029 04       		.uleb128 0x4
 3068 002a 0F       		.uleb128 0xf
 3069 002b 00       		.byte	0
 3070 002c 0B       		.uleb128 0xb
 3071 002d 0B       		.uleb128 0xb
 3072 002e 49       		.uleb128 0x49
 3073 002f 13       		.uleb128 0x13
 3074 0030 00       		.byte	0
 3075 0031 00       		.byte	0
 3076 0032 05       		.uleb128 0x5
 3077 0033 13       		.uleb128 0x13
 3078 0034 01       		.byte	0x1
 3079 0035 03       		.uleb128 0x3
 3080 0036 0E       		.uleb128 0xe
 3081 0037 0B       		.uleb128 0xb
 3082 0038 0B       		.uleb128 0xb
 3083 0039 3A       		.uleb128 0x3a
 3084 003a 0B       		.uleb128 0xb
 3085 003b 3B       		.uleb128 0x3b
 3086 003c 0B       		.uleb128 0xb
 3087 003d 01       		.uleb128 0x1
 3088 003e 13       		.uleb128 0x13
 3089 003f 00       		.byte	0
 3090 0040 00       		.byte	0
 3091 0041 06       		.uleb128 0x6
 3092 0042 0D       		.uleb128 0xd
 3093 0043 00       		.byte	0
 3094 0044 03       		.uleb128 0x3
 3095 0045 08       		.uleb128 0x8
 3096 0046 3A       		.uleb128 0x3a
 3097 0047 0B       		.uleb128 0xb
 3098 0048 3B       		.uleb128 0x3b
 3099 0049 0B       		.uleb128 0xb
 3100 004a 49       		.uleb128 0x49
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 63


 3101 004b 13       		.uleb128 0x13
 3102 004c 38       		.uleb128 0x38
 3103 004d 0B       		.uleb128 0xb
 3104 004e 00       		.byte	0
 3105 004f 00       		.byte	0
 3106 0050 07       		.uleb128 0x7
 3107 0051 0D       		.uleb128 0xd
 3108 0052 00       		.byte	0
 3109 0053 03       		.uleb128 0x3
 3110 0054 0E       		.uleb128 0xe
 3111 0055 3A       		.uleb128 0x3a
 3112 0056 0B       		.uleb128 0xb
 3113 0057 3B       		.uleb128 0x3b
 3114 0058 0B       		.uleb128 0xb
 3115 0059 49       		.uleb128 0x49
 3116 005a 13       		.uleb128 0x13
 3117 005b 38       		.uleb128 0x38
 3118 005c 0B       		.uleb128 0xb
 3119 005d 00       		.byte	0
 3120 005e 00       		.byte	0
 3121 005f 08       		.uleb128 0x8
 3122 0060 15       		.uleb128 0x15
 3123 0061 00       		.byte	0
 3124 0062 27       		.uleb128 0x27
 3125 0063 19       		.uleb128 0x19
 3126 0064 49       		.uleb128 0x49
 3127 0065 13       		.uleb128 0x13
 3128 0066 00       		.byte	0
 3129 0067 00       		.byte	0
 3130 0068 09       		.uleb128 0x9
 3131 0069 2E       		.uleb128 0x2e
 3132 006a 01       		.byte	0x1
 3133 006b 3F       		.uleb128 0x3f
 3134 006c 19       		.uleb128 0x19
 3135 006d 03       		.uleb128 0x3
 3136 006e 0E       		.uleb128 0xe
 3137 006f 3A       		.uleb128 0x3a
 3138 0070 0B       		.uleb128 0xb
 3139 0071 3B       		.uleb128 0x3b
 3140 0072 0B       		.uleb128 0xb
 3141 0073 27       		.uleb128 0x27
 3142 0074 19       		.uleb128 0x19
 3143 0075 11       		.uleb128 0x11
 3144 0076 01       		.uleb128 0x1
 3145 0077 12       		.uleb128 0x12
 3146 0078 06       		.uleb128 0x6
 3147 0079 40       		.uleb128 0x40
 3148 007a 18       		.uleb128 0x18
 3149 007b 9742     		.uleb128 0x2117
 3150 007d 19       		.uleb128 0x19
 3151 007e 01       		.uleb128 0x1
 3152 007f 13       		.uleb128 0x13
 3153 0080 00       		.byte	0
 3154 0081 00       		.byte	0
 3155 0082 0A       		.uleb128 0xa
 3156 0083 05       		.uleb128 0x5
 3157 0084 00       		.byte	0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 64


 3158 0085 03       		.uleb128 0x3
 3159 0086 08       		.uleb128 0x8
 3160 0087 3A       		.uleb128 0x3a
 3161 0088 0B       		.uleb128 0xb
 3162 0089 3B       		.uleb128 0x3b
 3163 008a 0B       		.uleb128 0xb
 3164 008b 49       		.uleb128 0x49
 3165 008c 13       		.uleb128 0x13
 3166 008d 02       		.uleb128 0x2
 3167 008e 18       		.uleb128 0x18
 3168 008f 00       		.byte	0
 3169 0090 00       		.byte	0
 3170 0091 0B       		.uleb128 0xb
 3171 0092 2E       		.uleb128 0x2e
 3172 0093 01       		.byte	0x1
 3173 0094 3F       		.uleb128 0x3f
 3174 0095 19       		.uleb128 0x19
 3175 0096 03       		.uleb128 0x3
 3176 0097 0E       		.uleb128 0xe
 3177 0098 3A       		.uleb128 0x3a
 3178 0099 0B       		.uleb128 0xb
 3179 009a 3B       		.uleb128 0x3b
 3180 009b 0B       		.uleb128 0xb
 3181 009c 27       		.uleb128 0x27
 3182 009d 19       		.uleb128 0x19
 3183 009e 49       		.uleb128 0x49
 3184 009f 13       		.uleb128 0x13
 3185 00a0 11       		.uleb128 0x11
 3186 00a1 01       		.uleb128 0x1
 3187 00a2 12       		.uleb128 0x12
 3188 00a3 06       		.uleb128 0x6
 3189 00a4 40       		.uleb128 0x40
 3190 00a5 18       		.uleb128 0x18
 3191 00a6 9742     		.uleb128 0x2117
 3192 00a8 19       		.uleb128 0x19
 3193 00a9 01       		.uleb128 0x1
 3194 00aa 13       		.uleb128 0x13
 3195 00ab 00       		.byte	0
 3196 00ac 00       		.byte	0
 3197 00ad 0C       		.uleb128 0xc
 3198 00ae 34       		.uleb128 0x34
 3199 00af 00       		.byte	0
 3200 00b0 03       		.uleb128 0x3
 3201 00b1 08       		.uleb128 0x8
 3202 00b2 3A       		.uleb128 0x3a
 3203 00b3 0B       		.uleb128 0xb
 3204 00b4 3B       		.uleb128 0x3b
 3205 00b5 0B       		.uleb128 0xb
 3206 00b6 49       		.uleb128 0x49
 3207 00b7 13       		.uleb128 0x13
 3208 00b8 02       		.uleb128 0x2
 3209 00b9 18       		.uleb128 0x18
 3210 00ba 00       		.byte	0
 3211 00bb 00       		.byte	0
 3212 00bc 0D       		.uleb128 0xd
 3213 00bd 34       		.uleb128 0x34
 3214 00be 00       		.byte	0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 65


 3215 00bf 03       		.uleb128 0x3
 3216 00c0 0E       		.uleb128 0xe
 3217 00c1 3A       		.uleb128 0x3a
 3218 00c2 0B       		.uleb128 0xb
 3219 00c3 3B       		.uleb128 0x3b
 3220 00c4 0B       		.uleb128 0xb
 3221 00c5 49       		.uleb128 0x49
 3222 00c6 13       		.uleb128 0x13
 3223 00c7 02       		.uleb128 0x2
 3224 00c8 18       		.uleb128 0x18
 3225 00c9 00       		.byte	0
 3226 00ca 00       		.byte	0
 3227 00cb 0E       		.uleb128 0xe
 3228 00cc 2E       		.uleb128 0x2e
 3229 00cd 01       		.byte	0x1
 3230 00ce 3F       		.uleb128 0x3f
 3231 00cf 19       		.uleb128 0x19
 3232 00d0 03       		.uleb128 0x3
 3233 00d1 0E       		.uleb128 0xe
 3234 00d2 3A       		.uleb128 0x3a
 3235 00d3 0B       		.uleb128 0xb
 3236 00d4 3B       		.uleb128 0x3b
 3237 00d5 0B       		.uleb128 0xb
 3238 00d6 27       		.uleb128 0x27
 3239 00d7 19       		.uleb128 0x19
 3240 00d8 49       		.uleb128 0x49
 3241 00d9 13       		.uleb128 0x13
 3242 00da 11       		.uleb128 0x11
 3243 00db 01       		.uleb128 0x1
 3244 00dc 12       		.uleb128 0x12
 3245 00dd 06       		.uleb128 0x6
 3246 00de 40       		.uleb128 0x40
 3247 00df 18       		.uleb128 0x18
 3248 00e0 9642     		.uleb128 0x2116
 3249 00e2 19       		.uleb128 0x19
 3250 00e3 01       		.uleb128 0x1
 3251 00e4 13       		.uleb128 0x13
 3252 00e5 00       		.byte	0
 3253 00e6 00       		.byte	0
 3254 00e7 0F       		.uleb128 0xf
 3255 00e8 01       		.uleb128 0x1
 3256 00e9 01       		.byte	0x1
 3257 00ea 49       		.uleb128 0x49
 3258 00eb 13       		.uleb128 0x13
 3259 00ec 01       		.uleb128 0x1
 3260 00ed 13       		.uleb128 0x13
 3261 00ee 00       		.byte	0
 3262 00ef 00       		.byte	0
 3263 00f0 10       		.uleb128 0x10
 3264 00f1 21       		.uleb128 0x21
 3265 00f2 00       		.byte	0
 3266 00f3 49       		.uleb128 0x49
 3267 00f4 13       		.uleb128 0x13
 3268 00f5 2F       		.uleb128 0x2f
 3269 00f6 0B       		.uleb128 0xb
 3270 00f7 00       		.byte	0
 3271 00f8 00       		.byte	0
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 66


 3272 00f9 11       		.uleb128 0x11
 3273 00fa 26       		.uleb128 0x26
 3274 00fb 00       		.byte	0
 3275 00fc 49       		.uleb128 0x49
 3276 00fd 13       		.uleb128 0x13
 3277 00fe 00       		.byte	0
 3278 00ff 00       		.byte	0
 3279 0100 12       		.uleb128 0x12
 3280 0101 2E       		.uleb128 0x2e
 3281 0102 00       		.byte	0
 3282 0103 3F       		.uleb128 0x3f
 3283 0104 19       		.uleb128 0x19
 3284 0105 03       		.uleb128 0x3
 3285 0106 0E       		.uleb128 0xe
 3286 0107 3A       		.uleb128 0x3a
 3287 0108 0B       		.uleb128 0xb
 3288 0109 3B       		.uleb128 0x3b
 3289 010a 0B       		.uleb128 0xb
 3290 010b 27       		.uleb128 0x27
 3291 010c 19       		.uleb128 0x19
 3292 010d 11       		.uleb128 0x11
 3293 010e 01       		.uleb128 0x1
 3294 010f 12       		.uleb128 0x12
 3295 0110 06       		.uleb128 0x6
 3296 0111 40       		.uleb128 0x40
 3297 0112 18       		.uleb128 0x18
 3298 0113 9642     		.uleb128 0x2116
 3299 0115 19       		.uleb128 0x19
 3300 0116 00       		.byte	0
 3301 0117 00       		.byte	0
 3302 0118 13       		.uleb128 0x13
 3303 0119 2E       		.uleb128 0x2e
 3304 011a 00       		.byte	0
 3305 011b 3F       		.uleb128 0x3f
 3306 011c 19       		.uleb128 0x19
 3307 011d 03       		.uleb128 0x3
 3308 011e 0E       		.uleb128 0xe
 3309 011f 3A       		.uleb128 0x3a
 3310 0120 0B       		.uleb128 0xb
 3311 0121 3B       		.uleb128 0x3b
 3312 0122 0B       		.uleb128 0xb
 3313 0123 49       		.uleb128 0x49
 3314 0124 13       		.uleb128 0x13
 3315 0125 11       		.uleb128 0x11
 3316 0126 01       		.uleb128 0x1
 3317 0127 12       		.uleb128 0x12
 3318 0128 06       		.uleb128 0x6
 3319 0129 40       		.uleb128 0x40
 3320 012a 18       		.uleb128 0x18
 3321 012b 9642     		.uleb128 0x2116
 3322 012d 19       		.uleb128 0x19
 3323 012e 00       		.byte	0
 3324 012f 00       		.byte	0
 3325 0130 14       		.uleb128 0x14
 3326 0131 2E       		.uleb128 0x2e
 3327 0132 01       		.byte	0x1
 3328 0133 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 67


 3329 0134 19       		.uleb128 0x19
 3330 0135 03       		.uleb128 0x3
 3331 0136 0E       		.uleb128 0xe
 3332 0137 3A       		.uleb128 0x3a
 3333 0138 0B       		.uleb128 0xb
 3334 0139 3B       		.uleb128 0x3b
 3335 013a 0B       		.uleb128 0xb
 3336 013b 49       		.uleb128 0x49
 3337 013c 13       		.uleb128 0x13
 3338 013d 11       		.uleb128 0x11
 3339 013e 01       		.uleb128 0x1
 3340 013f 12       		.uleb128 0x12
 3341 0140 06       		.uleb128 0x6
 3342 0141 40       		.uleb128 0x40
 3343 0142 18       		.uleb128 0x18
 3344 0143 9642     		.uleb128 0x2116
 3345 0145 19       		.uleb128 0x19
 3346 0146 01       		.uleb128 0x1
 3347 0147 13       		.uleb128 0x13
 3348 0148 00       		.byte	0
 3349 0149 00       		.byte	0
 3350 014a 15       		.uleb128 0x15
 3351 014b 34       		.uleb128 0x34
 3352 014c 00       		.byte	0
 3353 014d 03       		.uleb128 0x3
 3354 014e 0E       		.uleb128 0xe
 3355 014f 3A       		.uleb128 0x3a
 3356 0150 0B       		.uleb128 0xb
 3357 0151 3B       		.uleb128 0x3b
 3358 0152 0B       		.uleb128 0xb
 3359 0153 49       		.uleb128 0x49
 3360 0154 13       		.uleb128 0x13
 3361 0155 3F       		.uleb128 0x3f
 3362 0156 19       		.uleb128 0x19
 3363 0157 3C       		.uleb128 0x3c
 3364 0158 19       		.uleb128 0x19
 3365 0159 00       		.byte	0
 3366 015a 00       		.byte	0
 3367 015b 16       		.uleb128 0x16
 3368 015c 21       		.uleb128 0x21
 3369 015d 00       		.byte	0
 3370 015e 00       		.byte	0
 3371 015f 00       		.byte	0
 3372 0160 17       		.uleb128 0x17
 3373 0161 34       		.uleb128 0x34
 3374 0162 00       		.byte	0
 3375 0163 03       		.uleb128 0x3
 3376 0164 0E       		.uleb128 0xe
 3377 0165 3A       		.uleb128 0x3a
 3378 0166 0B       		.uleb128 0xb
 3379 0167 3B       		.uleb128 0x3b
 3380 0168 0B       		.uleb128 0xb
 3381 0169 49       		.uleb128 0x49
 3382 016a 13       		.uleb128 0x13
 3383 016b 3F       		.uleb128 0x3f
 3384 016c 19       		.uleb128 0x19
 3385 016d 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 68


 3386 016e 18       		.uleb128 0x18
 3387 016f 00       		.byte	0
 3388 0170 00       		.byte	0
 3389 0171 18       		.uleb128 0x18
 3390 0172 34       		.uleb128 0x34
 3391 0173 00       		.byte	0
 3392 0174 03       		.uleb128 0x3
 3393 0175 0E       		.uleb128 0xe
 3394 0176 3A       		.uleb128 0x3a
 3395 0177 0B       		.uleb128 0xb
 3396 0178 3B       		.uleb128 0x3b
 3397 0179 05       		.uleb128 0x5
 3398 017a 49       		.uleb128 0x49
 3399 017b 13       		.uleb128 0x13
 3400 017c 3F       		.uleb128 0x3f
 3401 017d 19       		.uleb128 0x19
 3402 017e 02       		.uleb128 0x2
 3403 017f 18       		.uleb128 0x18
 3404 0180 00       		.byte	0
 3405 0181 00       		.byte	0
 3406 0182 00       		.byte	0
 3407              		.section	.debug_aranges,"",%progbits
 3408 0000 84000000 		.4byte	0x84
 3409 0004 0200     		.2byte	0x2
 3410 0006 00000000 		.4byte	.Ldebug_info0
 3411 000a 04       		.byte	0x4
 3412 000b 00       		.byte	0
 3413 000c 0000     		.2byte	0
 3414 000e 0000     		.2byte	0
 3415 0010 00000000 		.4byte	.LFB0
 3416 0014 1C000000 		.4byte	.LFE0-.LFB0
 3417 0018 00000000 		.4byte	.LFB1
 3418 001c 38000000 		.4byte	.LFE1-.LFB1
 3419 0020 00000000 		.4byte	.LFB2
 3420 0024 38000000 		.4byte	.LFE2-.LFB2
 3421 0028 00000000 		.4byte	.LFB3
 3422 002c 38000000 		.4byte	.LFE3-.LFB3
 3423 0030 00000000 		.4byte	.LFB4
 3424 0034 1C000000 		.4byte	.LFE4-.LFB4
 3425 0038 00000000 		.4byte	.LFB5
 3426 003c 1C000000 		.4byte	.LFE5-.LFB5
 3427 0040 00000000 		.4byte	.LFB6
 3428 0044 64000000 		.4byte	.LFE6-.LFB6
 3429 0048 00000000 		.4byte	.LFB7
 3430 004c 64000000 		.4byte	.LFE7-.LFB7
 3431 0050 00000000 		.4byte	.LFB8
 3432 0054 20010000 		.4byte	.LFE8-.LFB8
 3433 0058 00000000 		.4byte	.LFB9
 3434 005c 0C010000 		.4byte	.LFE9-.LFB9
 3435 0060 00000000 		.4byte	.LFB10
 3436 0064 00010000 		.4byte	.LFE10-.LFB10
 3437 0068 00000000 		.4byte	.LFB11
 3438 006c 3C010000 		.4byte	.LFE11-.LFB11
 3439 0070 00000000 		.4byte	.LFB12
 3440 0074 3C020000 		.4byte	.LFE12-.LFB12
 3441 0078 00000000 		.4byte	.LFB13
 3442 007c 38070000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 69


 3443 0080 00000000 		.4byte	0
 3444 0084 00000000 		.4byte	0
 3445              		.section	.debug_ranges,"",%progbits
 3446              	.Ldebug_ranges0:
 3447 0000 00000000 		.4byte	.LFB0
 3448 0004 1C000000 		.4byte	.LFE0
 3449 0008 00000000 		.4byte	.LFB1
 3450 000c 38000000 		.4byte	.LFE1
 3451 0010 00000000 		.4byte	.LFB2
 3452 0014 38000000 		.4byte	.LFE2
 3453 0018 00000000 		.4byte	.LFB3
 3454 001c 38000000 		.4byte	.LFE3
 3455 0020 00000000 		.4byte	.LFB4
 3456 0024 1C000000 		.4byte	.LFE4
 3457 0028 00000000 		.4byte	.LFB5
 3458 002c 1C000000 		.4byte	.LFE5
 3459 0030 00000000 		.4byte	.LFB6
 3460 0034 64000000 		.4byte	.LFE6
 3461 0038 00000000 		.4byte	.LFB7
 3462 003c 64000000 		.4byte	.LFE7
 3463 0040 00000000 		.4byte	.LFB8
 3464 0044 20010000 		.4byte	.LFE8
 3465 0048 00000000 		.4byte	.LFB9
 3466 004c 0C010000 		.4byte	.LFE9
 3467 0050 00000000 		.4byte	.LFB10
 3468 0054 00010000 		.4byte	.LFE10
 3469 0058 00000000 		.4byte	.LFB11
 3470 005c 3C010000 		.4byte	.LFE11
 3471 0060 00000000 		.4byte	.LFB12
 3472 0064 3C020000 		.4byte	.LFE12
 3473 0068 00000000 		.4byte	.LFB13
 3474 006c 38070000 		.4byte	.LFE13
 3475 0070 00000000 		.4byte	0
 3476 0074 00000000 		.4byte	0
 3477              		.section	.debug_line,"",%progbits
 3478              	.Ldebug_line0:
 3479 0000 A4030000 		.section	.debug_str,"MS",%progbits,1
 3479      02002C00 
 3479      00000201 
 3479      FB0E0D00 
 3479      01010101 
 3480              	.LASF35:
 3481 0000 7274635F 		.ascii	"rtc_typef\000"
 3481      74797065 
 3481      6600
 3482              	.LASF22:
 3483 000a 64617973 		.ascii	"days_in_month\000"
 3483      5F696E5F 
 3483      6D6F6E74 
 3483      6800
 3484              	.LASF16:
 3485 0018 7274635F 		.ascii	"rtc_set_month\000"
 3485      7365745F 
 3485      6D6F6E74 
 3485      6800
 3486              	.LASF37:
 3487 0026 7274635F 		.ascii	"rtc_month\000"
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 70


 3487      6D6F6E74 
 3487      6800
 3488              	.LASF39:
 3489 0030 54657374 		.ascii	"TestCollection\000"
 3489      436F6C6C 
 3489      65637469 
 3489      6F6E00
 3490              	.LASF41:
 3491 003f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3491      4320342E 
 3491      392E3320 
 3491      32303135 
 3491      30333033 
 3492 0072 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3492      20726576 
 3492      6973696F 
 3492      6E203232 
 3492      31323230 
 3493 00a5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3493      66756E63 
 3493      74696F6E 
 3493      2D736563 
 3493      74696F6E 
 3494              	.LASF36:
 3495 00cd 7274635F 		.ascii	"rtc_sec\000"
 3495      73656300 
 3496              	.LASF43:
 3497 00d5 433A5C44 		.ascii	"C:\\Documents and Settings\\XPuser\\Desktop\\PSoC5 "
 3497      6F63756D 
 3497      656E7473 
 3497      20616E64 
 3497      20536574 
 3498 0104 50726F74 		.ascii	"Prototyping Kit\\CE95277 ADC and UART\\minunit.cyds"
 3498      6F747970 
 3498      696E6720 
 3498      4B69745C 
 3498      43453935 
 3499 0135 6E00     		.ascii	"n\000"
 3500              	.LASF14:
 3501 0137 7274635F 		.ascii	"rtc_set_hour\000"
 3501      7365745F 
 3501      686F7572 
 3501      00
 3502              	.LASF44:
 3503 0144 54657374 		.ascii	"Tests\000"
 3503      7300
 3504              	.LASF32:
 3505 014a 6C6D6178 		.ascii	"lmax\000"
 3505      00
 3506              	.LASF1:
 3507 014f 756E7369 		.ascii	"unsigned char\000"
 3507      676E6564 
 3507      20636861 
 3507      7200
 3508              	.LASF34:
 3509 015d 74657874 		.ascii	"text\000"
 3509      00
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 71


 3510              	.LASF5:
 3511 0162 6C6F6E67 		.ascii	"long unsigned int\000"
 3511      20756E73 
 3511      69676E65 
 3511      6420696E 
 3511      7400
 3512              	.LASF31:
 3513 0174 6E6D6178 		.ascii	"nmax\000"
 3513      00
 3514              	.LASF3:
 3515 0179 73686F72 		.ascii	"short unsigned int\000"
 3515      7420756E 
 3515      7369676E 
 3515      65642069 
 3515      6E7400
 3516              	.LASF30:
 3517 018c 6C6D696E 		.ascii	"lmin\000"
 3517      00
 3518              	.LASF12:
 3519 0191 7274635F 		.ascii	"rtc_set_seconds\000"
 3519      7365745F 
 3519      7365636F 
 3519      6E647300 
 3520              	.LASF25:
 3521 01a1 74657374 		.ascii	"test_rtc_min\000"
 3521      5F727463 
 3521      5F6D696E 
 3521      00
 3522              	.LASF38:
 3523 01ae 7274635F 		.ascii	"rtc_year\000"
 3523      79656172 
 3523      00
 3524              	.LASF11:
 3525 01b7 74657374 		.ascii	"test\000"
 3525      00
 3526              	.LASF8:
 3527 01bc 756E7369 		.ascii	"unsigned int\000"
 3527      676E6564 
 3527      20696E74 
 3527      00
 3528              	.LASF7:
 3529 01c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 3529      206C6F6E 
 3529      6720756E 
 3529      7369676E 
 3529      65642069 
 3530              	.LASF28:
 3531 01e0 74657374 		.ascii	"test_rtc_leap_years\000"
 3531      5F727463 
 3531      5F6C6561 
 3531      705F7965 
 3531      61727300 
 3532              	.LASF26:
 3533 01f4 74657374 		.ascii	"test_rtc_hour\000"
 3533      5F727463 
 3533      5F686F75 
 3533      7200
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 72


 3534              	.LASF24:
 3535 0202 74657374 		.ascii	"test_rtc_sec\000"
 3535      5F727463 
 3535      5F736563 
 3535      00
 3536              	.LASF15:
 3537 020f 7274635F 		.ascii	"rtc_set_day\000"
 3537      7365745F 
 3537      64617900 
 3538              	.LASF9:
 3539 021b 73697A65 		.ascii	"sizetype\000"
 3539      74797065 
 3539      00
 3540              	.LASF21:
 3541 0224 7274635F 		.ascii	"rtc_days_in_month\000"
 3541      64617973 
 3541      5F696E5F 
 3541      6D6F6E74 
 3541      6800
 3542              	.LASF33:
 3543 0236 61737365 		.ascii	"assertion_count\000"
 3543      7274696F 
 3543      6E5F636F 
 3543      756E7400 
 3544              	.LASF6:
 3545 0246 6C6F6E67 		.ascii	"long long int\000"
 3545      206C6F6E 
 3545      6720696E 
 3545      7400
 3546              	.LASF18:
 3547 0254 79313030 		.ascii	"y100\000"
 3547      00
 3548              	.LASF13:
 3549 0259 7274635F 		.ascii	"rtc_set_minutes\000"
 3549      7365745F 
 3549      6D696E75 
 3549      74657300 
 3550              	.LASF40:
 3551 0269 74657374 		.ascii	"testsCount\000"
 3551      73436F75 
 3551      6E7400
 3552              	.LASF19:
 3553 0274 79343030 		.ascii	"y400\000"
 3553      00
 3554              	.LASF20:
 3555 0279 7274635F 		.ascii	"rtc_is_leap_year\000"
 3555      69735F6C 
 3555      6561705F 
 3555      79656172 
 3555      00
 3556              	.LASF27:
 3557 028a 74657374 		.ascii	"test_rtc_days_months\000"
 3557      5F727463 
 3557      5F646179 
 3557      735F6D6F 
 3557      6E746873 
 3558              	.LASF2:
ARM GAS  C:\DOCUME~1\XPuser\LOCALS~1\Temp\cc0rbzSZ.s 			page 73


 3559 029f 73686F72 		.ascii	"short int\000"
 3559      7420696E 
 3559      7400
 3560              	.LASF23:
 3561 02a9 7274635F 		.ascii	"rtc_tick\000"
 3561      7469636B 
 3561      00
 3562              	.LASF17:
 3563 02b2 7274635F 		.ascii	"rtc_set_years\000"
 3563      7365745F 
 3563      79656172 
 3563      7300
 3564              	.LASF29:
 3565 02c0 6E6D696E 		.ascii	"nmin\000"
 3565      00
 3566              	.LASF4:
 3567 02c5 6C6F6E67 		.ascii	"long int\000"
 3567      20696E74 
 3567      00
 3568              	.LASF10:
 3569 02ce 63686172 		.ascii	"char\000"
 3569      00
 3570              	.LASF0:
 3571 02d3 7369676E 		.ascii	"signed char\000"
 3571      65642063 
 3571      68617200 
 3572              	.LASF42:
 3573 02df 636C6F63 		.ascii	"clock3.c\000"
 3573      6B332E63 
 3573      00
 3574              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
