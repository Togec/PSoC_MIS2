ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	SPIS_txBuffer,32,4
  20              		.comm	SPIS_txBufferRead,1,1
  21              		.comm	SPIS_txBufferWrite,1,1
  22              		.comm	SPIS_txBufferFull,1,1
  23              		.comm	SPIS_rxBuffer,32,4
  24              		.comm	SPIS_rxBufferRead,1,1
  25              		.comm	SPIS_rxBufferWrite,1,1
  26              		.comm	SPIS_rxBufferFull,1,1
  27              		.global	SPIS_initVar
  28              		.bss
  29              		.type	SPIS_initVar, %object
  30              		.size	SPIS_initVar, 1
  31              	SPIS_initVar:
  32 0000 00       		.space	1
  33              		.comm	SPIS_swStatusTx,1,1
  34              		.comm	SPIS_swStatusRx,1,1
  35              		.section	.text.SPIS_Init,"ax",%progbits
  36              		.align	2
  37              		.global	SPIS_Init
  38              		.thumb
  39              		.thumb_func
  40              		.type	SPIS_Init, %function
  41              	SPIS_Init:
  42              	.LFB0:
  43              		.file 1 "Generated_Source\\PSoC5\\SPIS.c"
   1:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIS.c **** * File Name: SPIS.c
   3:Generated_Source\PSoC5/SPIS.c **** * Version 2.70
   4:Generated_Source\PSoC5/SPIS.c **** *
   5:Generated_Source\PSoC5/SPIS.c **** * Description:
   6:Generated_Source\PSoC5/SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:Generated_Source\PSoC5/SPIS.c **** *
   8:Generated_Source\PSoC5/SPIS.c **** * Note:
   9:Generated_Source\PSoC5/SPIS.c **** *  None.
  10:Generated_Source\PSoC5/SPIS.c **** *
  11:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 2


  15:Generated_Source\PSoC5/SPIS.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIS.c **** 
  18:Generated_Source\PSoC5/SPIS.c **** #include "SPIS_PVT.h"
  19:Generated_Source\PSoC5/SPIS.c **** 
  20:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIS.c **** 
  22:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBuffer[SPIS_TX_BUFFER_SIZE];
  23:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferRead;
  24:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferWrite;
  25:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferFull;
  26:Generated_Source\PSoC5/SPIS.c **** 
  27:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:Generated_Source\PSoC5/SPIS.c **** 
  29:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:Generated_Source\PSoC5/SPIS.c **** 
  31:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE];
  32:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferRead;
  33:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferWrite;
  34:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferFull;
  35:Generated_Source\PSoC5/SPIS.c **** 
  36:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:Generated_Source\PSoC5/SPIS.c **** 
  38:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_initVar = 0u;
  39:Generated_Source\PSoC5/SPIS.c **** 
  40:Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusTx;
  41:Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusRx;
  42:Generated_Source\PSoC5/SPIS.c **** 
  43:Generated_Source\PSoC5/SPIS.c **** 
  44:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Init
  46:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  47:Generated_Source\PSoC5/SPIS.c **** *
  48:Generated_Source\PSoC5/SPIS.c **** * Summary:
  49:Generated_Source\PSoC5/SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:Generated_Source\PSoC5/SPIS.c **** *
  51:Generated_Source\PSoC5/SPIS.c **** * Parameters:
  52:Generated_Source\PSoC5/SPIS.c **** *  None.
  53:Generated_Source\PSoC5/SPIS.c **** *
  54:Generated_Source\PSoC5/SPIS.c **** * Return:
  55:Generated_Source\PSoC5/SPIS.c **** *  None.
  56:Generated_Source\PSoC5/SPIS.c **** *
  57:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
  58:Generated_Source\PSoC5/SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:Generated_Source\PSoC5/SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:Generated_Source\PSoC5/SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:Generated_Source\PSoC5/SPIS.c **** *  clearing the FIFO and Status Register.
  62:Generated_Source\PSoC5/SPIS.c **** *
  63:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
  64:Generated_Source\PSoC5/SPIS.c **** *  No.
  65:Generated_Source\PSoC5/SPIS.c **** *
  66:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  67:Generated_Source\PSoC5/SPIS.c **** void SPIS_Init(void) 
  68:Generated_Source\PSoC5/SPIS.c **** {
  44              		.loc 1 68 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 3


  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  69:Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
  70:Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_PERIOD_REG = SPIS_BITCTR_INIT;
  54              		.loc 1 70 0
  55 0004 1C4B     		ldr	r3, .L2
  56 0006 0722     		movs	r2, #7
  57 0008 1A70     		strb	r2, [r3]
  71:Generated_Source\PSoC5/SPIS.c **** 
  72:Generated_Source\PSoC5/SPIS.c ****     /* ISR initialization */
  73:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
  74:Generated_Source\PSoC5/SPIS.c **** 
  75:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
  58              		.loc 1 75 0
  59 000a 1C4B     		ldr	r3, .L2+4
  60 000c 0822     		movs	r2, #8
  61 000e 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC5/SPIS.c **** 
  77:Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  78:Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_TX_ISR_NUMBER, &SPIS_TX_ISR);
  62              		.loc 1 78 0
  63 0010 1B49     		ldr	r1, .L2+8
  64 0012 0320     		movs	r0, #3
  65 0014 FFF7FEFF 		bl	CyIntSetVector
  79:Generated_Source\PSoC5/SPIS.c **** 
  80:Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  81:Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_TX_ISR_NUMBER, SPIS_TX_ISR_PRIORITY);
  66              		.loc 1 81 0
  67 0018 0721     		movs	r1, #7
  68 001a 0320     		movs	r0, #3
  69 001c FFF7FEFF 		bl	CyIntSetPriority
  82:Generated_Source\PSoC5/SPIS.c **** 
  83:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
  84:Generated_Source\PSoC5/SPIS.c **** 
  85:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
  86:Generated_Source\PSoC5/SPIS.c **** 
  87:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
  70              		.loc 1 87 0
  71 0020 164B     		ldr	r3, .L2+4
  72 0022 0422     		movs	r2, #4
  73 0024 1A60     		str	r2, [r3]
  88:Generated_Source\PSoC5/SPIS.c **** 
  89:Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  90:Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_RX_ISR_NUMBER, &SPIS_RX_ISR);
  74              		.loc 1 90 0
  75 0026 1749     		ldr	r1, .L2+12
  76 0028 0220     		movs	r0, #2
  77 002a FFF7FEFF 		bl	CyIntSetVector
  91:Generated_Source\PSoC5/SPIS.c **** 
  92:Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  93:Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_RX_ISR_NUMBER, SPIS_RX_ISR_PRIORITY);
  78              		.loc 1 93 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 4


  79 002e 0721     		movs	r1, #7
  80 0030 0220     		movs	r0, #2
  81 0032 FFF7FEFF 		bl	CyIntSetPriority
  94:Generated_Source\PSoC5/SPIS.c **** 
  95:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
  96:Generated_Source\PSoC5/SPIS.c **** 
  97:Generated_Source\PSoC5/SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:Generated_Source\PSoC5/SPIS.c ****     SPIS_ClearFIFO();
  82              		.loc 1 98 0
  83 0036 FFF7FEFF 		bl	SPIS_ClearFIFO
  99:Generated_Source\PSoC5/SPIS.c **** 
 100:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferFull = 0u;
  84              		.loc 1 101 0
  85 003a 134B     		ldr	r3, .L2+16
  86 003c 0022     		movs	r2, #0
  87 003e 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
  88              		.loc 1 102 0
  89 0040 124B     		ldr	r3, .L2+20
  90 0042 0022     		movs	r2, #0
  91 0044 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
  92              		.loc 1 103 0
  93 0046 124B     		ldr	r3, .L2+24
  94 0048 0022     		movs	r2, #0
  95 004a 1A70     		strb	r2, [r3]
 104:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:Generated_Source\PSoC5/SPIS.c **** 
 106:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferFull = 0u;
  96              		.loc 1 107 0
  97 004c 114B     		ldr	r3, .L2+28
  98 004e 0022     		movs	r2, #0
  99 0050 1A70     		strb	r2, [r3]
 108:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead = 0u;
 100              		.loc 1 108 0
 101 0052 114B     		ldr	r3, .L2+32
 102 0054 0022     		movs	r2, #0
 103 0056 1A70     		strb	r2, [r3]
 109:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 104              		.loc 1 109 0
 105 0058 104B     		ldr	r3, .L2+36
 106 005a 0022     		movs	r2, #0
 107 005c 1A70     		strb	r2, [r3]
 110:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:Generated_Source\PSoC5/SPIS.c **** 
 112:Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadTxStatus(); /* Clear any pending status bits */
 108              		.loc 1 112 0
 109 005e FFF7FEFF 		bl	SPIS_ReadTxStatus
 113:Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
 110              		.loc 1 113 0
 111 0062 FFF7FEFF 		bl	SPIS_ReadRxStatus
 114:Generated_Source\PSoC5/SPIS.c **** 
 115:Generated_Source\PSoC5/SPIS.c **** 
 116:Generated_Source\PSoC5/SPIS.c ****     /* Configure the Initial interrupt mask */
 117:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 5


 118:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = (SPIS_TX_INIT_INTERRUPTS_MASK &
 112              		.loc 1 118 0
 113 0066 0E4B     		ldr	r3, .L2+40
 114 0068 0022     		movs	r2, #0
 115 006a 1A70     		strb	r2, [r3]
 119:Generated_Source\PSoC5/SPIS.c ****                                                 (uint8)~SPIS_STS_TX_FIFO_NOT_FULL);
 120:Generated_Source\PSoC5/SPIS.c ****     #else /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = SPIS_TX_INIT_INTERRUPTS_MASK;
 122:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:Generated_Source\PSoC5/SPIS.c **** 
 124:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = SPIS_RX_INIT_INTERRUPTS_MASK;
 116              		.loc 1 124 0
 117 006c 0D4B     		ldr	r3, .L2+44
 118 006e 0822     		movs	r2, #8
 119 0070 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/SPIS.c **** }
 120              		.loc 1 125 0
 121 0072 00BF     		nop
 122 0074 80BD     		pop	{r7, pc}
 123              	.L3:
 124 0076 00BF     		.align	2
 125              	.L2:
 126 0078 83640040 		.word	1073767555
 127 007c 80E100E0 		.word	-536813184
 128 0080 00000000 		.word	SPIS_TX_ISR
 129 0084 00000000 		.word	SPIS_RX_ISR
 130 0088 00000000 		.word	SPIS_rxBufferFull
 131 008c 00000000 		.word	SPIS_rxBufferRead
 132 0090 00000000 		.word	SPIS_rxBufferWrite
 133 0094 00000000 		.word	SPIS_txBufferFull
 134 0098 00000000 		.word	SPIS_txBufferRead
 135 009c 00000000 		.word	SPIS_txBufferWrite
 136 00a0 82640040 		.word	1073767554
 137 00a4 84650040 		.word	1073767812
 138              		.cfi_endproc
 139              	.LFE0:
 140              		.size	SPIS_Init, .-SPIS_Init
 141              		.section	.text.SPIS_Enable,"ax",%progbits
 142              		.align	2
 143              		.global	SPIS_Enable
 144              		.thumb
 145              		.thumb_func
 146              		.type	SPIS_Enable, %function
 147              	SPIS_Enable:
 148              	.LFB1:
 126:Generated_Source\PSoC5/SPIS.c **** 
 127:Generated_Source\PSoC5/SPIS.c **** 
 128:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 129:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Enable
 130:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 131:Generated_Source\PSoC5/SPIS.c **** *
 132:Generated_Source\PSoC5/SPIS.c **** * Summary:
 133:Generated_Source\PSoC5/SPIS.c **** *  Enable SPIS component.
 134:Generated_Source\PSoC5/SPIS.c **** *
 135:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 136:Generated_Source\PSoC5/SPIS.c **** *  None.
 137:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 6


 138:Generated_Source\PSoC5/SPIS.c **** * Return:
 139:Generated_Source\PSoC5/SPIS.c **** *  None.
 140:Generated_Source\PSoC5/SPIS.c **** *
 141:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/SPIS.c **** void SPIS_Enable(void) 
 143:Generated_Source\PSoC5/SPIS.c **** {
 149              		.loc 1 143 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 144:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 145:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 161              		.loc 1 145 0
 162 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 163 000a 0346     		mov	r3, r0
 164 000c FB71     		strb	r3, [r7, #7]
 146:Generated_Source\PSoC5/SPIS.c **** 
 147:Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_CONTROL_REG |= SPIS_CNTR_ENABLE;
 165              		.loc 1 147 0
 166 000e 134A     		ldr	r2, .L5
 167 0010 124B     		ldr	r3, .L5
 168 0012 1B78     		ldrb	r3, [r3]
 169 0014 DBB2     		uxtb	r3, r3
 170 0016 43F02003 		orr	r3, r3, #32
 171 001a DBB2     		uxtb	r3, r3
 172 001c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 173              		.loc 1 148 0
 174 001e 104A     		ldr	r2, .L5+4
 175 0020 0F4B     		ldr	r3, .L5+4
 176 0022 1B78     		ldrb	r3, [r3]
 177 0024 DBB2     		uxtb	r3, r3
 178 0026 43F01003 		orr	r3, r3, #16
 179 002a DBB2     		uxtb	r3, r3
 180 002c 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 181              		.loc 1 149 0
 182 002e 0D4A     		ldr	r2, .L5+8
 183 0030 0C4B     		ldr	r3, .L5+8
 184 0032 1B78     		ldrb	r3, [r3]
 185 0034 DBB2     		uxtb	r3, r3
 186 0036 43F01003 		orr	r3, r3, #16
 187 003a DBB2     		uxtb	r3, r3
 188 003c 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC5/SPIS.c **** 
 151:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 189              		.loc 1 151 0
 190 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 191 0040 1846     		mov	r0, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 7


 192 0042 FFF7FEFF 		bl	CyExitCriticalSection
 152:Generated_Source\PSoC5/SPIS.c **** 
 153:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 154:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 193              		.loc 1 154 0
 194 0046 084B     		ldr	r3, .L5+12
 195 0048 0822     		movs	r2, #8
 196 004a 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 156:Generated_Source\PSoC5/SPIS.c **** 
 157:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 158:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 197              		.loc 1 158 0
 198 004c 064B     		ldr	r3, .L5+12
 199 004e 0422     		movs	r2, #4
 200 0050 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 160:Generated_Source\PSoC5/SPIS.c **** }
 201              		.loc 1 160 0
 202 0052 00BF     		nop
 203 0054 0837     		adds	r7, r7, #8
 204              		.cfi_def_cfa_offset 8
 205 0056 BD46     		mov	sp, r7
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 0058 80BD     		pop	{r7, pc}
 209              	.L6:
 210 005a 00BF     		.align	2
 211              	.L5:
 212 005c 93640040 		.word	1073767571
 213 0060 92640040 		.word	1073767570
 214 0064 94650040 		.word	1073767828
 215 0068 00E100E0 		.word	-536813312
 216              		.cfi_endproc
 217              	.LFE1:
 218              		.size	SPIS_Enable, .-SPIS_Enable
 219              		.section	.text.SPIS_Start,"ax",%progbits
 220              		.align	2
 221              		.global	SPIS_Start
 222              		.thumb
 223              		.thumb_func
 224              		.type	SPIS_Start, %function
 225              	SPIS_Start:
 226              	.LFB2:
 161:Generated_Source\PSoC5/SPIS.c **** 
 162:Generated_Source\PSoC5/SPIS.c **** 
 163:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Start
 165:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 166:Generated_Source\PSoC5/SPIS.c **** *
 167:Generated_Source\PSoC5/SPIS.c **** * Summary:
 168:Generated_Source\PSoC5/SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:Generated_Source\PSoC5/SPIS.c **** *
 170:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 171:Generated_Source\PSoC5/SPIS.c **** *  None.
 172:Generated_Source\PSoC5/SPIS.c **** *
 173:Generated_Source\PSoC5/SPIS.c **** * Return:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 8


 174:Generated_Source\PSoC5/SPIS.c **** *  None.
 175:Generated_Source\PSoC5/SPIS.c **** *
 176:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 177:Generated_Source\PSoC5/SPIS.c **** *  SPIS_initVar - used to check initial configuration, modified on
 178:Generated_Source\PSoC5/SPIS.c **** *  first function call.
 179:Generated_Source\PSoC5/SPIS.c **** *
 180:Generated_Source\PSoC5/SPIS.c **** * Theory:
 181:Generated_Source\PSoC5/SPIS.c **** *  Enable the clock input to enable operation.
 182:Generated_Source\PSoC5/SPIS.c **** *
 183:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 184:Generated_Source\PSoC5/SPIS.c **** *  No.
 185:Generated_Source\PSoC5/SPIS.c **** *
 186:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/SPIS.c **** void SPIS_Start(void) 
 188:Generated_Source\PSoC5/SPIS.c **** {
 227              		.loc 1 188 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 189:Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 237              		.loc 1 189 0
 238 0004 064B     		ldr	r3, .L9
 239 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 0008 002B     		cmp	r3, #0
 241 000a 04D1     		bne	.L8
 190:Generated_Source\PSoC5/SPIS.c ****     {
 191:Generated_Source\PSoC5/SPIS.c ****         SPIS_Init();
 242              		.loc 1 191 0
 243 000c FFF7FEFF 		bl	SPIS_Init
 192:Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 244              		.loc 1 192 0
 245 0010 034B     		ldr	r3, .L9
 246 0012 0122     		movs	r2, #1
 247 0014 1A70     		strb	r2, [r3]
 248              	.L8:
 193:Generated_Source\PSoC5/SPIS.c ****     }
 194:Generated_Source\PSoC5/SPIS.c **** 
 195:Generated_Source\PSoC5/SPIS.c ****     SPIS_Enable();
 249              		.loc 1 195 0
 250 0016 FFF7FEFF 		bl	SPIS_Enable
 196:Generated_Source\PSoC5/SPIS.c **** }
 251              		.loc 1 196 0
 252 001a 00BF     		nop
 253 001c 80BD     		pop	{r7, pc}
 254              	.L10:
 255 001e 00BF     		.align	2
 256              	.L9:
 257 0020 00000000 		.word	SPIS_initVar
 258              		.cfi_endproc
 259              	.LFE2:
 260              		.size	SPIS_Start, .-SPIS_Start
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 9


 261              		.section	.text.SPIS_Stop,"ax",%progbits
 262              		.align	2
 263              		.global	SPIS_Stop
 264              		.thumb
 265              		.thumb_func
 266              		.type	SPIS_Stop, %function
 267              	SPIS_Stop:
 268              	.LFB3:
 197:Generated_Source\PSoC5/SPIS.c **** 
 198:Generated_Source\PSoC5/SPIS.c **** 
 199:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 200:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Stop
 201:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 202:Generated_Source\PSoC5/SPIS.c **** *
 203:Generated_Source\PSoC5/SPIS.c **** * Summary:
 204:Generated_Source\PSoC5/SPIS.c **** *  Disable the SPI Slave component.
 205:Generated_Source\PSoC5/SPIS.c **** *
 206:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 207:Generated_Source\PSoC5/SPIS.c **** *  None.
 208:Generated_Source\PSoC5/SPIS.c **** *
 209:Generated_Source\PSoC5/SPIS.c **** * Return:
 210:Generated_Source\PSoC5/SPIS.c **** *  None.
 211:Generated_Source\PSoC5/SPIS.c **** *
 212:Generated_Source\PSoC5/SPIS.c **** * Theory:
 213:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt if one is used.
 214:Generated_Source\PSoC5/SPIS.c **** *
 215:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/SPIS.c **** void SPIS_Stop(void) 
 217:Generated_Source\PSoC5/SPIS.c **** {
 269              		.loc 1 217 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 219:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 281              		.loc 1 219 0
 282 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 283 000a 0346     		mov	r3, r0
 284 000c FB71     		strb	r3, [r7, #7]
 220:Generated_Source\PSoC5/SPIS.c **** 
 221:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 285              		.loc 1 221 0
 286 000e 0F4A     		ldr	r2, .L12
 287 0010 0E4B     		ldr	r3, .L12
 288 0012 1B78     		ldrb	r3, [r3]
 289 0014 DBB2     		uxtb	r3, r3
 290 0016 23F01003 		bic	r3, r3, #16
 291 001a DBB2     		uxtb	r3, r3
 292 001c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 10


 222:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 293              		.loc 1 222 0
 294 001e 0C4A     		ldr	r2, .L12+4
 295 0020 0B4B     		ldr	r3, .L12+4
 296 0022 1B78     		ldrb	r3, [r3]
 297 0024 DBB2     		uxtb	r3, r3
 298 0026 23F01003 		bic	r3, r3, #16
 299 002a DBB2     		uxtb	r3, r3
 300 002c 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/SPIS.c **** 
 224:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 301              		.loc 1 224 0
 302 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 303 0030 1846     		mov	r0, r3
 304 0032 FFF7FEFF 		bl	CyExitCriticalSection
 225:Generated_Source\PSoC5/SPIS.c **** 
 226:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 227:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 305              		.loc 1 227 0
 306 0036 074B     		ldr	r3, .L12+8
 307 0038 0822     		movs	r2, #8
 308 003a 1A60     		str	r2, [r3]
 228:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 229:Generated_Source\PSoC5/SPIS.c **** 
 230:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 231:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 309              		.loc 1 231 0
 310 003c 054B     		ldr	r3, .L12+8
 311 003e 0422     		movs	r2, #4
 312 0040 1A60     		str	r2, [r3]
 232:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 233:Generated_Source\PSoC5/SPIS.c **** }
 313              		.loc 1 233 0
 314 0042 00BF     		nop
 315 0044 0837     		adds	r7, r7, #8
 316              		.cfi_def_cfa_offset 8
 317 0046 BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0048 80BD     		pop	{r7, pc}
 321              	.L13:
 322 004a 00BF     		.align	2
 323              	.L12:
 324 004c 92640040 		.word	1073767570
 325 0050 94650040 		.word	1073767828
 326 0054 80E100E0 		.word	-536813184
 327              		.cfi_endproc
 328              	.LFE3:
 329              		.size	SPIS_Stop, .-SPIS_Stop
 330              		.section	.text.SPIS_EnableTxInt,"ax",%progbits
 331              		.align	2
 332              		.global	SPIS_EnableTxInt
 333              		.thumb
 334              		.thumb_func
 335              		.type	SPIS_EnableTxInt, %function
 336              	SPIS_EnableTxInt:
 337              	.LFB4:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 11


 234:Generated_Source\PSoC5/SPIS.c **** 
 235:Generated_Source\PSoC5/SPIS.c **** 
 236:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 237:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableTxInt
 238:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 239:Generated_Source\PSoC5/SPIS.c **** *
 240:Generated_Source\PSoC5/SPIS.c **** * Summary:
 241:Generated_Source\PSoC5/SPIS.c **** *  Enable internal Tx interrupt generation.
 242:Generated_Source\PSoC5/SPIS.c **** *
 243:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 244:Generated_Source\PSoC5/SPIS.c **** *  None.
 245:Generated_Source\PSoC5/SPIS.c **** *
 246:Generated_Source\PSoC5/SPIS.c **** * Return:
 247:Generated_Source\PSoC5/SPIS.c **** *  None.
 248:Generated_Source\PSoC5/SPIS.c **** *
 249:Generated_Source\PSoC5/SPIS.c **** * Theory:
 250:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:Generated_Source\PSoC5/SPIS.c **** *
 252:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 253:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableTxInt(void) 
 254:Generated_Source\PSoC5/SPIS.c **** {
 338              		.loc 1 254 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 255:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 256:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 348              		.loc 1 256 0
 349 0004 034B     		ldr	r3, .L15
 350 0006 0822     		movs	r2, #8
 351 0008 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 258:Generated_Source\PSoC5/SPIS.c **** }
 352              		.loc 1 258 0
 353 000a 00BF     		nop
 354 000c BD46     		mov	sp, r7
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 000e 80BC     		pop	{r7}
 358              		.cfi_restore 7
 359              		.cfi_def_cfa_offset 0
 360 0010 7047     		bx	lr
 361              	.L16:
 362 0012 00BF     		.align	2
 363              	.L15:
 364 0014 00E100E0 		.word	-536813312
 365              		.cfi_endproc
 366              	.LFE4:
 367              		.size	SPIS_EnableTxInt, .-SPIS_EnableTxInt
 368              		.section	.text.SPIS_EnableRxInt,"ax",%progbits
 369              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 12


 370              		.global	SPIS_EnableRxInt
 371              		.thumb
 372              		.thumb_func
 373              		.type	SPIS_EnableRxInt, %function
 374              	SPIS_EnableRxInt:
 375              	.LFB5:
 259:Generated_Source\PSoC5/SPIS.c **** 
 260:Generated_Source\PSoC5/SPIS.c **** 
 261:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableRxInt
 263:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 264:Generated_Source\PSoC5/SPIS.c **** *
 265:Generated_Source\PSoC5/SPIS.c **** * Summary:
 266:Generated_Source\PSoC5/SPIS.c **** *  Enable internal Rx interrupt generation.
 267:Generated_Source\PSoC5/SPIS.c **** *
 268:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 269:Generated_Source\PSoC5/SPIS.c **** *  None.
 270:Generated_Source\PSoC5/SPIS.c **** *
 271:Generated_Source\PSoC5/SPIS.c **** * Return:
 272:Generated_Source\PSoC5/SPIS.c **** *  None.
 273:Generated_Source\PSoC5/SPIS.c **** *
 274:Generated_Source\PSoC5/SPIS.c **** * Theory:
 275:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:Generated_Source\PSoC5/SPIS.c **** *
 277:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 278:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableRxInt(void) 
 279:Generated_Source\PSoC5/SPIS.c **** {
 376              		.loc 1 279 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 00AF     		add	r7, sp, #0
 385              		.cfi_def_cfa_register 7
 280:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 281:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 386              		.loc 1 281 0
 387 0004 034B     		ldr	r3, .L18
 388 0006 0422     		movs	r2, #4
 389 0008 1A60     		str	r2, [r3]
 282:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 283:Generated_Source\PSoC5/SPIS.c **** }
 390              		.loc 1 283 0
 391 000a 00BF     		nop
 392 000c BD46     		mov	sp, r7
 393              		.cfi_def_cfa_register 13
 394              		@ sp needed
 395 000e 80BC     		pop	{r7}
 396              		.cfi_restore 7
 397              		.cfi_def_cfa_offset 0
 398 0010 7047     		bx	lr
 399              	.L19:
 400 0012 00BF     		.align	2
 401              	.L18:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 13


 402 0014 00E100E0 		.word	-536813312
 403              		.cfi_endproc
 404              	.LFE5:
 405              		.size	SPIS_EnableRxInt, .-SPIS_EnableRxInt
 406              		.section	.text.SPIS_DisableTxInt,"ax",%progbits
 407              		.align	2
 408              		.global	SPIS_DisableTxInt
 409              		.thumb
 410              		.thumb_func
 411              		.type	SPIS_DisableTxInt, %function
 412              	SPIS_DisableTxInt:
 413              	.LFB6:
 284:Generated_Source\PSoC5/SPIS.c **** 
 285:Generated_Source\PSoC5/SPIS.c **** 
 286:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableTxInt
 288:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 289:Generated_Source\PSoC5/SPIS.c **** *
 290:Generated_Source\PSoC5/SPIS.c **** * Summary:
 291:Generated_Source\PSoC5/SPIS.c **** *  Disable internal Tx interrupt generation.
 292:Generated_Source\PSoC5/SPIS.c **** *
 293:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 294:Generated_Source\PSoC5/SPIS.c **** *  None.
 295:Generated_Source\PSoC5/SPIS.c **** *
 296:Generated_Source\PSoC5/SPIS.c **** * Return:
 297:Generated_Source\PSoC5/SPIS.c **** *  None.
 298:Generated_Source\PSoC5/SPIS.c **** *
 299:Generated_Source\PSoC5/SPIS.c **** * Theory:
 300:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:Generated_Source\PSoC5/SPIS.c **** *
 302:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 303:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableTxInt(void) 
 304:Generated_Source\PSoC5/SPIS.c **** {
 414              		.loc 1 304 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 80B4     		push	{r7}
 420              		.cfi_def_cfa_offset 4
 421              		.cfi_offset 7, -4
 422 0002 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 305:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 306:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 424              		.loc 1 306 0
 425 0004 034B     		ldr	r3, .L21
 426 0006 0822     		movs	r2, #8
 427 0008 1A60     		str	r2, [r3]
 307:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 308:Generated_Source\PSoC5/SPIS.c **** }
 428              		.loc 1 308 0
 429 000a 00BF     		nop
 430 000c BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 14


 434              		.cfi_restore 7
 435              		.cfi_def_cfa_offset 0
 436 0010 7047     		bx	lr
 437              	.L22:
 438 0012 00BF     		.align	2
 439              	.L21:
 440 0014 80E100E0 		.word	-536813184
 441              		.cfi_endproc
 442              	.LFE6:
 443              		.size	SPIS_DisableTxInt, .-SPIS_DisableTxInt
 444              		.section	.text.SPIS_DisableRxInt,"ax",%progbits
 445              		.align	2
 446              		.global	SPIS_DisableRxInt
 447              		.thumb
 448              		.thumb_func
 449              		.type	SPIS_DisableRxInt, %function
 450              	SPIS_DisableRxInt:
 451              	.LFB7:
 309:Generated_Source\PSoC5/SPIS.c **** 
 310:Generated_Source\PSoC5/SPIS.c **** 
 311:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableRxInt
 313:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 314:Generated_Source\PSoC5/SPIS.c **** *
 315:Generated_Source\PSoC5/SPIS.c **** * Summary:
 316:Generated_Source\PSoC5/SPIS.c **** *  Disable internal Rx interrupt generation.
 317:Generated_Source\PSoC5/SPIS.c **** *
 318:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 319:Generated_Source\PSoC5/SPIS.c **** *  None.
 320:Generated_Source\PSoC5/SPIS.c **** *
 321:Generated_Source\PSoC5/SPIS.c **** * Return:
 322:Generated_Source\PSoC5/SPIS.c **** *  None.
 323:Generated_Source\PSoC5/SPIS.c **** *
 324:Generated_Source\PSoC5/SPIS.c **** * Theory:
 325:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:Generated_Source\PSoC5/SPIS.c **** *
 327:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableRxInt(void) 
 329:Generated_Source\PSoC5/SPIS.c **** {
 452              		.loc 1 329 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              		.cfi_def_cfa_offset 4
 459              		.cfi_offset 7, -4
 460 0002 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
 330:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 331:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 462              		.loc 1 331 0
 463 0004 034B     		ldr	r3, .L24
 464 0006 0422     		movs	r2, #4
 465 0008 1A60     		str	r2, [r3]
 332:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 333:Generated_Source\PSoC5/SPIS.c **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 15


 466              		.loc 1 333 0
 467 000a 00BF     		nop
 468 000c BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 000e 80BC     		pop	{r7}
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0010 7047     		bx	lr
 475              	.L25:
 476 0012 00BF     		.align	2
 477              	.L24:
 478 0014 80E100E0 		.word	-536813184
 479              		.cfi_endproc
 480              	.LFE7:
 481              		.size	SPIS_DisableRxInt, .-SPIS_DisableRxInt
 482              		.section	.text.SPIS_SetTxInterruptMode,"ax",%progbits
 483              		.align	2
 484              		.global	SPIS_SetTxInterruptMode
 485              		.thumb
 486              		.thumb_func
 487              		.type	SPIS_SetTxInterruptMode, %function
 488              	SPIS_SetTxInterruptMode:
 489              	.LFB8:
 334:Generated_Source\PSoC5/SPIS.c **** 
 335:Generated_Source\PSoC5/SPIS.c **** 
 336:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 337:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetTxInterruptMode
 338:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 339:Generated_Source\PSoC5/SPIS.c **** *
 340:Generated_Source\PSoC5/SPIS.c **** * Summary:
 341:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:Generated_Source\PSoC5/SPIS.c **** *
 343:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 344:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:Generated_Source\PSoC5/SPIS.c **** *  header file).
 346:Generated_Source\PSoC5/SPIS.c **** *
 347:Generated_Source\PSoC5/SPIS.c **** * Return:
 348:Generated_Source\PSoC5/SPIS.c **** *  None.
 349:Generated_Source\PSoC5/SPIS.c **** *
 350:Generated_Source\PSoC5/SPIS.c **** * Theory:
 351:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:Generated_Source\PSoC5/SPIS.c **** *
 353:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 354:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:Generated_Source\PSoC5/SPIS.c **** {
 490              		.loc 1 355 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 16


 501              		.cfi_def_cfa_register 7
 502 0006 0346     		mov	r3, r0
 503 0008 FB71     		strb	r3, [r7, #7]
 356:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 504              		.loc 1 356 0
 505 000a 044A     		ldr	r2, .L27
 506 000c FB79     		ldrb	r3, [r7, #7]
 507 000e 1370     		strb	r3, [r2]
 357:Generated_Source\PSoC5/SPIS.c **** }
 508              		.loc 1 357 0
 509 0010 00BF     		nop
 510 0012 0C37     		adds	r7, r7, #12
 511              		.cfi_def_cfa_offset 4
 512 0014 BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 0016 80BC     		pop	{r7}
 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 0018 7047     		bx	lr
 519              	.L28:
 520 001a 00BF     		.align	2
 521              	.L27:
 522 001c 82640040 		.word	1073767554
 523              		.cfi_endproc
 524              	.LFE8:
 525              		.size	SPIS_SetTxInterruptMode, .-SPIS_SetTxInterruptMode
 526              		.section	.text.SPIS_SetRxInterruptMode,"ax",%progbits
 527              		.align	2
 528              		.global	SPIS_SetRxInterruptMode
 529              		.thumb
 530              		.thumb_func
 531              		.type	SPIS_SetRxInterruptMode, %function
 532              	SPIS_SetRxInterruptMode:
 533              	.LFB9:
 358:Generated_Source\PSoC5/SPIS.c **** 
 359:Generated_Source\PSoC5/SPIS.c **** 
 360:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetRxInterruptMode
 362:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 363:Generated_Source\PSoC5/SPIS.c **** *
 364:Generated_Source\PSoC5/SPIS.c **** * Summary:
 365:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:Generated_Source\PSoC5/SPIS.c **** *
 367:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 368:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:Generated_Source\PSoC5/SPIS.c **** *  header file).
 370:Generated_Source\PSoC5/SPIS.c **** *
 371:Generated_Source\PSoC5/SPIS.c **** * Return:
 372:Generated_Source\PSoC5/SPIS.c **** *  None.
 373:Generated_Source\PSoC5/SPIS.c **** *
 374:Generated_Source\PSoC5/SPIS.c **** * Theory:
 375:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:Generated_Source\PSoC5/SPIS.c **** *
 377:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 378:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:Generated_Source\PSoC5/SPIS.c **** {
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 17


 534              		.loc 1 379 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 8
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 83B0     		sub	sp, sp, #12
 543              		.cfi_def_cfa_offset 16
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 546 0006 0346     		mov	r3, r0
 547 0008 FB71     		strb	r3, [r7, #7]
 380:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 548              		.loc 1 380 0
 549 000a 044A     		ldr	r2, .L30
 550 000c FB79     		ldrb	r3, [r7, #7]
 551 000e 1370     		strb	r3, [r2]
 381:Generated_Source\PSoC5/SPIS.c **** }
 552              		.loc 1 381 0
 553 0010 00BF     		nop
 554 0012 0C37     		adds	r7, r7, #12
 555              		.cfi_def_cfa_offset 4
 556 0014 BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 0016 80BC     		pop	{r7}
 560              		.cfi_restore 7
 561              		.cfi_def_cfa_offset 0
 562 0018 7047     		bx	lr
 563              	.L31:
 564 001a 00BF     		.align	2
 565              	.L30:
 566 001c 84650040 		.word	1073767812
 567              		.cfi_endproc
 568              	.LFE9:
 569              		.size	SPIS_SetRxInterruptMode, .-SPIS_SetRxInterruptMode
 570              		.section	.text.SPIS_ReadTxStatus,"ax",%progbits
 571              		.align	2
 572              		.global	SPIS_ReadTxStatus
 573              		.thumb
 574              		.thumb_func
 575              		.type	SPIS_ReadTxStatus, %function
 576              	SPIS_ReadTxStatus:
 577              	.LFB10:
 382:Generated_Source\PSoC5/SPIS.c **** 
 383:Generated_Source\PSoC5/SPIS.c **** 
 384:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 385:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadTxStatus
 386:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 387:Generated_Source\PSoC5/SPIS.c **** *
 388:Generated_Source\PSoC5/SPIS.c **** * Summary:
 389:Generated_Source\PSoC5/SPIS.c **** *  Read the Tx status register for the component.
 390:Generated_Source\PSoC5/SPIS.c **** *
 391:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 392:Generated_Source\PSoC5/SPIS.c **** *  None.
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 18


 393:Generated_Source\PSoC5/SPIS.c **** *
 394:Generated_Source\PSoC5/SPIS.c **** * Return:
 395:Generated_Source\PSoC5/SPIS.c **** *  Contents of the Tx status register.
 396:Generated_Source\PSoC5/SPIS.c **** *
 397:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 398:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusTx - used to store in software status register,
 399:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 400:Generated_Source\PSoC5/SPIS.c **** *
 401:Generated_Source\PSoC5/SPIS.c **** * Theory:
 402:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 404:Generated_Source\PSoC5/SPIS.c **** *
 405:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 406:Generated_Source\PSoC5/SPIS.c **** *  Clear Tx status register of the component.
 407:Generated_Source\PSoC5/SPIS.c **** *
 408:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 409:Generated_Source\PSoC5/SPIS.c **** *  No.
 410:Generated_Source\PSoC5/SPIS.c **** *
 411:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 412:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadTxStatus(void) 
 413:Generated_Source\PSoC5/SPIS.c **** {
 578              		.loc 1 413 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 8
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582 0000 80B5     		push	{r7, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 82B0     		sub	sp, sp, #8
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 414:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 415:Generated_Source\PSoC5/SPIS.c **** 
 416:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:Generated_Source\PSoC5/SPIS.c **** 
 418:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 590              		.loc 1 418 0
 591 0006 FFF7FEFF 		bl	SPIS_DisableTxInt
 419:Generated_Source\PSoC5/SPIS.c **** 
 420:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 592              		.loc 1 420 0
 593 000a 0A4B     		ldr	r3, .L34
 594 000c 1B78     		ldrb	r3, [r3]
 595 000e DAB2     		uxtb	r2, r3
 596 0010 094B     		ldr	r3, .L34+4
 597 0012 1B78     		ldrb	r3, [r3]
 598 0014 DBB2     		uxtb	r3, r3
 599 0016 03F06103 		and	r3, r3, #97
 600 001a DBB2     		uxtb	r3, r3
 601 001c 1343     		orrs	r3, r3, r2
 602 001e FB71     		strb	r3, [r7, #7]
 421:Generated_Source\PSoC5/SPIS.c **** 
 422:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 603              		.loc 1 422 0
 604 0020 054B     		ldr	r3, .L34+4
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 19


 605 0022 0022     		movs	r2, #0
 606 0024 1A70     		strb	r2, [r3]
 423:Generated_Source\PSoC5/SPIS.c **** 
 424:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 425:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 607              		.loc 1 425 0
 608 0026 FFF7FEFF 		bl	SPIS_EnableTxInt
 426:Generated_Source\PSoC5/SPIS.c **** 
 427:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:Generated_Source\PSoC5/SPIS.c **** 
 429:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG;
 430:Generated_Source\PSoC5/SPIS.c **** 
 431:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:Generated_Source\PSoC5/SPIS.c **** 
 433:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 609              		.loc 1 433 0
 610 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/SPIS.c **** }
 611              		.loc 1 434 0
 612 002c 1846     		mov	r0, r3
 613 002e 0837     		adds	r7, r7, #8
 614              		.cfi_def_cfa_offset 8
 615 0030 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 0032 80BD     		pop	{r7, pc}
 619              	.L35:
 620              		.align	2
 621              	.L34:
 622 0034 62640040 		.word	1073767522
 623 0038 00000000 		.word	SPIS_swStatusTx
 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	SPIS_ReadTxStatus, .-SPIS_ReadTxStatus
 627              		.section	.text.SPIS_ReadRxStatus,"ax",%progbits
 628              		.align	2
 629              		.global	SPIS_ReadRxStatus
 630              		.thumb
 631              		.thumb_func
 632              		.type	SPIS_ReadRxStatus, %function
 633              	SPIS_ReadRxStatus:
 634              	.LFB11:
 435:Generated_Source\PSoC5/SPIS.c **** 
 436:Generated_Source\PSoC5/SPIS.c **** 
 437:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 438:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxStatus
 439:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 440:Generated_Source\PSoC5/SPIS.c **** *
 441:Generated_Source\PSoC5/SPIS.c **** * Summary:
 442:Generated_Source\PSoC5/SPIS.c **** *  Read the Rx status register for the component.
 443:Generated_Source\PSoC5/SPIS.c **** *
 444:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 445:Generated_Source\PSoC5/SPIS.c **** *  None.
 446:Generated_Source\PSoC5/SPIS.c **** *
 447:Generated_Source\PSoC5/SPIS.c **** * Return:
 448:Generated_Source\PSoC5/SPIS.c **** *  Contents of the Rx status register.
 449:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 20


 450:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 451:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusRx - used to store in software Rx status register,
 452:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 453:Generated_Source\PSoC5/SPIS.c **** *
 454:Generated_Source\PSoC5/SPIS.c **** * Theory:
 455:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 457:Generated_Source\PSoC5/SPIS.c **** *
 458:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 459:Generated_Source\PSoC5/SPIS.c **** *  Clear Rx status register of the component.
 460:Generated_Source\PSoC5/SPIS.c **** *
 461:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 462:Generated_Source\PSoC5/SPIS.c **** *  No.
 463:Generated_Source\PSoC5/SPIS.c **** *
 464:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxStatus(void) 
 466:Generated_Source\PSoC5/SPIS.c **** {
 635              		.loc 1 466 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 8
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 82B0     		sub	sp, sp, #8
 644              		.cfi_def_cfa_offset 16
 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 467:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 468:Generated_Source\PSoC5/SPIS.c **** 
 469:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:Generated_Source\PSoC5/SPIS.c **** 
 471:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 647              		.loc 1 471 0
 648 0006 FFF7FEFF 		bl	SPIS_DisableRxInt
 472:Generated_Source\PSoC5/SPIS.c **** 
 473:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_RX(SPIS_swStatusRx);
 649              		.loc 1 473 0
 650 000a 0A4B     		ldr	r3, .L38
 651 000c 1B78     		ldrb	r3, [r3]
 652 000e DAB2     		uxtb	r2, r3
 653 0010 094B     		ldr	r3, .L38+4
 654 0012 1B78     		ldrb	r3, [r3]
 655 0014 DBB2     		uxtb	r3, r3
 656 0016 03F06103 		and	r3, r3, #97
 657 001a DBB2     		uxtb	r3, r3
 658 001c 1343     		orrs	r3, r3, r2
 659 001e FB71     		strb	r3, [r7, #7]
 474:Generated_Source\PSoC5/SPIS.c **** 
 475:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 660              		.loc 1 475 0
 661 0020 054B     		ldr	r3, .L38+4
 662 0022 0022     		movs	r2, #0
 663 0024 1A70     		strb	r2, [r3]
 476:Generated_Source\PSoC5/SPIS.c **** 
 477:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 21


 478:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 664              		.loc 1 478 0
 665 0026 FFF7FEFF 		bl	SPIS_EnableRxInt
 479:Generated_Source\PSoC5/SPIS.c **** 
 480:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:Generated_Source\PSoC5/SPIS.c **** 
 482:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_RX_STATUS_REG;
 483:Generated_Source\PSoC5/SPIS.c **** 
 484:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:Generated_Source\PSoC5/SPIS.c **** 
 486:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 666              		.loc 1 486 0
 667 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487:Generated_Source\PSoC5/SPIS.c **** }
 668              		.loc 1 487 0
 669 002c 1846     		mov	r0, r3
 670 002e 0837     		adds	r7, r7, #8
 671              		.cfi_def_cfa_offset 8
 672 0030 BD46     		mov	sp, r7
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 0032 80BD     		pop	{r7, pc}
 676              	.L39:
 677              		.align	2
 678              	.L38:
 679 0034 64650040 		.word	1073767780
 680 0038 00000000 		.word	SPIS_swStatusRx
 681              		.cfi_endproc
 682              	.LFE11:
 683              		.size	SPIS_ReadRxStatus, .-SPIS_ReadRxStatus
 684              		.section	.text.SPIS_WriteTxData,"ax",%progbits
 685              		.align	2
 686              		.global	SPIS_WriteTxData
 687              		.thumb
 688              		.thumb_func
 689              		.type	SPIS_WriteTxData, %function
 690              	SPIS_WriteTxData:
 691              	.LFB12:
 488:Generated_Source\PSoC5/SPIS.c **** 
 489:Generated_Source\PSoC5/SPIS.c **** 
 490:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 491:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_WriteTxData
 492:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 493:Generated_Source\PSoC5/SPIS.c **** *
 494:Generated_Source\PSoC5/SPIS.c **** * Summary:
 495:Generated_Source\PSoC5/SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:Generated_Source\PSoC5/SPIS.c **** *
 497:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 498:Generated_Source\PSoC5/SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:Generated_Source\PSoC5/SPIS.c **** *
 500:Generated_Source\PSoC5/SPIS.c **** * Return:
 501:Generated_Source\PSoC5/SPIS.c **** *  None.
 502:Generated_Source\PSoC5/SPIS.c **** *
 503:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 504:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 505:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:Generated_Source\PSoC5/SPIS.c **** *  call if TX Software Buffer is used.
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 22


 507:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 508:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 509:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBuffer[SPIS_TX_BUFFER_SIZE] - used to store
 510:Generated_Source\PSoC5/SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:Generated_Source\PSoC5/SPIS.c **** *
 512:Generated_Source\PSoC5/SPIS.c **** * Theory:
 513:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:Generated_Source\PSoC5/SPIS.c **** *
 515:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 516:Generated_Source\PSoC5/SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:Generated_Source\PSoC5/SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:Generated_Source\PSoC5/SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:Generated_Source\PSoC5/SPIS.c **** *
 520:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 521:Generated_Source\PSoC5/SPIS.c **** *  No.
 522:Generated_Source\PSoC5/SPIS.c **** *
 523:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 524:Generated_Source\PSoC5/SPIS.c **** void SPIS_WriteTxData(uint8 txData) 
 525:Generated_Source\PSoC5/SPIS.c **** {
 692              		.loc 1 525 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 16
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 84B0     		sub	sp, sp, #16
 701              		.cfi_def_cfa_offset 24
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 0346     		mov	r3, r0
 705 0008 FB71     		strb	r3, [r7, #7]
 706              	.L43:
 526:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:Generated_Source\PSoC5/SPIS.c **** 
 528:Generated_Source\PSoC5/SPIS.c ****         uint8 tempStatus;
 529:Generated_Source\PSoC5/SPIS.c ****         uint8 tmpTxBufferRead;
 530:Generated_Source\PSoC5/SPIS.c **** 
 531:Generated_Source\PSoC5/SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:Generated_Source\PSoC5/SPIS.c ****         do
 533:Generated_Source\PSoC5/SPIS.c ****         {
 534:Generated_Source\PSoC5/SPIS.c ****             tmpTxBufferRead = SPIS_txBufferRead;
 707              		.loc 1 534 0
 708 000a 394B     		ldr	r3, .L49
 709 000c 1B78     		ldrb	r3, [r3]
 710 000e FB73     		strb	r3, [r7, #15]
 535:Generated_Source\PSoC5/SPIS.c ****             if (0u == tmpTxBufferRead)
 711              		.loc 1 535 0
 712 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 713 0012 002B     		cmp	r3, #0
 714 0014 02D1     		bne	.L41
 536:Generated_Source\PSoC5/SPIS.c ****             {
 537:Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead = SPIS_TX_BUFFER_SIZE - 1u;
 715              		.loc 1 537 0
 716 0016 1F23     		movs	r3, #31
 717 0018 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 23


 718 001a 02E0     		b	.L42
 719              	.L41:
 538:Generated_Source\PSoC5/SPIS.c ****             }
 539:Generated_Source\PSoC5/SPIS.c ****             else
 540:Generated_Source\PSoC5/SPIS.c ****             {
 541:Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead--;
 720              		.loc 1 541 0
 721 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 722 001e 013B     		subs	r3, r3, #1
 723 0020 FB73     		strb	r3, [r7, #15]
 724              	.L42:
 542:Generated_Source\PSoC5/SPIS.c ****             }
 543:Generated_Source\PSoC5/SPIS.c **** 
 544:Generated_Source\PSoC5/SPIS.c ****         }
 545:Generated_Source\PSoC5/SPIS.c ****         while(tmpTxBufferRead == SPIS_txBufferWrite);
 725              		.loc 1 545 0
 726 0022 344B     		ldr	r3, .L49+4
 727 0024 1B78     		ldrb	r3, [r3]
 728 0026 DBB2     		uxtb	r3, r3
 729 0028 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 730 002a 9A42     		cmp	r2, r3
 731 002c EDD0     		beq	.L43
 546:Generated_Source\PSoC5/SPIS.c **** 
 547:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 732              		.loc 1 548 0
 733 002e FFF7FEFF 		bl	SPIS_DisableTxInt
 549:Generated_Source\PSoC5/SPIS.c **** 
 550:Generated_Source\PSoC5/SPIS.c ****         tempStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 734              		.loc 1 550 0
 735 0032 314B     		ldr	r3, .L49+8
 736 0034 1B78     		ldrb	r3, [r3]
 737 0036 DAB2     		uxtb	r2, r3
 738 0038 304B     		ldr	r3, .L49+12
 739 003a 1B78     		ldrb	r3, [r3]
 740 003c DBB2     		uxtb	r3, r3
 741 003e 03F06103 		and	r3, r3, #97
 742 0042 DBB2     		uxtb	r3, r3
 743 0044 1343     		orrs	r3, r3, r2
 744 0046 BB73     		strb	r3, [r7, #14]
 551:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = tempStatus;
 745              		.loc 1 551 0
 746 0048 2C4A     		ldr	r2, .L49+12
 747 004a BB7B     		ldrb	r3, [r7, #14]
 748 004c 1370     		strb	r3, [r2]
 552:Generated_Source\PSoC5/SPIS.c **** 
 553:Generated_Source\PSoC5/SPIS.c ****         if((SPIS_txBufferRead == SPIS_txBufferWrite) &&
 749              		.loc 1 553 0
 750 004e 284B     		ldr	r3, .L49
 751 0050 1B78     		ldrb	r3, [r3]
 752 0052 DAB2     		uxtb	r2, r3
 753 0054 274B     		ldr	r3, .L49+4
 754 0056 1B78     		ldrb	r3, [r3]
 755 0058 DBB2     		uxtb	r3, r3
 756 005a 9A42     		cmp	r2, r3
 757 005c 0AD1     		bne	.L44
 554:Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 24


 758              		.loc 1 554 0 discriminator 1
 759 005e 274B     		ldr	r3, .L49+12
 760 0060 1B78     		ldrb	r3, [r3]
 761 0062 DBB2     		uxtb	r3, r3
 762 0064 03F00203 		and	r3, r3, #2
 553:Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
 763              		.loc 1 553 0 discriminator 1
 764 0068 002B     		cmp	r3, #0
 765 006a 03D0     		beq	.L44
 555:Generated_Source\PSoC5/SPIS.c ****         {
 556:Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the TX FIFO */
 557:Generated_Source\PSoC5/SPIS.c ****             CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 766              		.loc 1 557 0
 767 006c 244A     		ldr	r2, .L49+16
 768 006e FB79     		ldrb	r3, [r7, #7]
 769 0070 1370     		strb	r3, [r2]
 770 0072 37E0     		b	.L45
 771              	.L44:
 558:Generated_Source\PSoC5/SPIS.c ****         }
 559:Generated_Source\PSoC5/SPIS.c ****         else
 560:Generated_Source\PSoC5/SPIS.c ****         {
 561:Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the software buffer */
 562:Generated_Source\PSoC5/SPIS.c ****             SPIS_txBufferWrite++;
 772              		.loc 1 562 0
 773 0074 1F4B     		ldr	r3, .L49+4
 774 0076 1B78     		ldrb	r3, [r3]
 775 0078 DBB2     		uxtb	r3, r3
 776 007a 0133     		adds	r3, r3, #1
 777 007c DAB2     		uxtb	r2, r3
 778 007e 1D4B     		ldr	r3, .L49+4
 779 0080 1A70     		strb	r2, [r3]
 563:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite >= SPIS_TX_BUFFER_SIZE)
 780              		.loc 1 563 0
 781 0082 1C4B     		ldr	r3, .L49+4
 782 0084 1B78     		ldrb	r3, [r3]
 783 0086 DBB2     		uxtb	r3, r3
 784 0088 1F2B     		cmp	r3, #31
 785 008a 02D9     		bls	.L46
 564:Generated_Source\PSoC5/SPIS.c ****             {
 565:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferWrite = 0u;
 786              		.loc 1 565 0
 787 008c 194B     		ldr	r3, .L49+4
 788 008e 0022     		movs	r2, #0
 789 0090 1A70     		strb	r2, [r3]
 790              	.L46:
 566:Generated_Source\PSoC5/SPIS.c ****             }
 567:Generated_Source\PSoC5/SPIS.c **** 
 568:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite == SPIS_txBufferRead)
 791              		.loc 1 568 0
 792 0092 184B     		ldr	r3, .L49+4
 793 0094 1B78     		ldrb	r3, [r3]
 794 0096 DAB2     		uxtb	r2, r3
 795 0098 154B     		ldr	r3, .L49
 796 009a 1B78     		ldrb	r3, [r3]
 797 009c DBB2     		uxtb	r3, r3
 798 009e 9A42     		cmp	r2, r3
 799 00a0 11D1     		bne	.L47
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 25


 569:Generated_Source\PSoC5/SPIS.c ****             {
 570:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferRead++;
 800              		.loc 1 570 0
 801 00a2 134B     		ldr	r3, .L49
 802 00a4 1B78     		ldrb	r3, [r3]
 803 00a6 DBB2     		uxtb	r3, r3
 804 00a8 0133     		adds	r3, r3, #1
 805 00aa DAB2     		uxtb	r2, r3
 806 00ac 104B     		ldr	r3, .L49
 807 00ae 1A70     		strb	r2, [r3]
 571:Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_txBufferRead >= SPIS_RX_BUFFER_SIZE)
 808              		.loc 1 571 0
 809 00b0 0F4B     		ldr	r3, .L49
 810 00b2 1B78     		ldrb	r3, [r3]
 811 00b4 DBB2     		uxtb	r3, r3
 812 00b6 1F2B     		cmp	r3, #31
 813 00b8 02D9     		bls	.L48
 572:Generated_Source\PSoC5/SPIS.c ****                 {
 573:Generated_Source\PSoC5/SPIS.c ****                     SPIS_txBufferRead = 0u;
 814              		.loc 1 573 0
 815 00ba 0D4B     		ldr	r3, .L49
 816 00bc 0022     		movs	r2, #0
 817 00be 1A70     		strb	r2, [r3]
 818              	.L48:
 574:Generated_Source\PSoC5/SPIS.c ****                 }
 575:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferFull = 1u;
 819              		.loc 1 575 0
 820 00c0 104B     		ldr	r3, .L49+20
 821 00c2 0122     		movs	r2, #1
 822 00c4 1A70     		strb	r2, [r3]
 823              	.L47:
 576:Generated_Source\PSoC5/SPIS.c ****             }
 577:Generated_Source\PSoC5/SPIS.c **** 
 578:Generated_Source\PSoC5/SPIS.c ****             SPIS_txBuffer[SPIS_txBufferWrite] = txData;
 824              		.loc 1 578 0
 825 00c6 0B4B     		ldr	r3, .L49+4
 826 00c8 1B78     		ldrb	r3, [r3]
 827 00ca DBB2     		uxtb	r3, r3
 828 00cc 1946     		mov	r1, r3
 829 00ce 0E4A     		ldr	r2, .L49+24
 830 00d0 FB79     		ldrb	r3, [r7, #7]
 831 00d2 5354     		strb	r3, [r2, r1]
 579:Generated_Source\PSoC5/SPIS.c **** 
 580:Generated_Source\PSoC5/SPIS.c ****             SPIS_TX_STATUS_MASK_REG |= SPIS_STS_TX_FIFO_NOT_FULL;
 832              		.loc 1 580 0
 833 00d4 0D4A     		ldr	r2, .L49+28
 834 00d6 0D4B     		ldr	r3, .L49+28
 835 00d8 1B78     		ldrb	r3, [r3]
 836 00da DBB2     		uxtb	r3, r3
 837 00dc 43F00203 		orr	r3, r3, #2
 838 00e0 DBB2     		uxtb	r3, r3
 839 00e2 1370     		strb	r3, [r2]
 840              	.L45:
 581:Generated_Source\PSoC5/SPIS.c ****         }
 582:Generated_Source\PSoC5/SPIS.c **** 
 583:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 584:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 26


 841              		.loc 1 584 0
 842 00e4 FFF7FEFF 		bl	SPIS_EnableTxInt
 585:Generated_Source\PSoC5/SPIS.c **** 
 586:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:Generated_Source\PSoC5/SPIS.c ****         /* Wait until TX FIFO has a place */
 588:Generated_Source\PSoC5/SPIS.c ****         while(0u == (SPIS_TX_STATUS_REG & SPIS_STS_TX_FIFO_NOT_FULL))
 589:Generated_Source\PSoC5/SPIS.c ****         {
 590:Generated_Source\PSoC5/SPIS.c ****         }
 591:Generated_Source\PSoC5/SPIS.c **** 
 592:Generated_Source\PSoC5/SPIS.c ****         /* Put data element into the TX FIFO */
 593:Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 594:Generated_Source\PSoC5/SPIS.c ****         
 595:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:Generated_Source\PSoC5/SPIS.c **** }
 843              		.loc 1 596 0
 844 00e8 00BF     		nop
 845 00ea 1037     		adds	r7, r7, #16
 846              		.cfi_def_cfa_offset 8
 847 00ec BD46     		mov	sp, r7
 848              		.cfi_def_cfa_register 13
 849              		@ sp needed
 850 00ee 80BD     		pop	{r7, pc}
 851              	.L50:
 852              		.align	2
 853              	.L49:
 854 00f0 00000000 		.word	SPIS_txBufferRead
 855 00f4 00000000 		.word	SPIS_txBufferWrite
 856 00f8 62640040 		.word	1073767522
 857 00fc 00000000 		.word	SPIS_swStatusTx
 858 0100 44640040 		.word	1073767492
 859 0104 00000000 		.word	SPIS_txBufferFull
 860 0108 00000000 		.word	SPIS_txBuffer
 861 010c 82640040 		.word	1073767554
 862              		.cfi_endproc
 863              	.LFE12:
 864              		.size	SPIS_WriteTxData, .-SPIS_WriteTxData
 865              		.section	.text.SPIS_WriteTxDataZero,"ax",%progbits
 866              		.align	2
 867              		.global	SPIS_WriteTxDataZero
 868              		.thumb
 869              		.thumb_func
 870              		.type	SPIS_WriteTxDataZero, %function
 871              	SPIS_WriteTxDataZero:
 872              	.LFB13:
 597:Generated_Source\PSoC5/SPIS.c **** 
 598:Generated_Source\PSoC5/SPIS.c **** #if(SPIS_MODE_USE_ZERO != 0u)
 599:Generated_Source\PSoC5/SPIS.c **** 
 600:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 601:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_WriteTxDataZero
 602:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 603:Generated_Source\PSoC5/SPIS.c ****     *
 604:Generated_Source\PSoC5/SPIS.c ****     * Summary:
 605:Generated_Source\PSoC5/SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:Generated_Source\PSoC5/SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:Generated_Source\PSoC5/SPIS.c ****     *
 608:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 609:Generated_Source\PSoC5/SPIS.c ****     *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 27


 610:Generated_Source\PSoC5/SPIS.c ****     *
 611:Generated_Source\PSoC5/SPIS.c ****     * Return:
 612:Generated_Source\PSoC5/SPIS.c ****     *  None.
 613:Generated_Source\PSoC5/SPIS.c ****     *
 614:Generated_Source\PSoC5/SPIS.c ****     * Theory:
 615:Generated_Source\PSoC5/SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:Generated_Source\PSoC5/SPIS.c ****     *  status register of the component.
 617:Generated_Source\PSoC5/SPIS.c ****     *
 618:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 619:Generated_Source\PSoC5/SPIS.c ****     void SPIS_WriteTxDataZero(uint8 txDataByte)
 620:Generated_Source\PSoC5/SPIS.c ****                                         
 621:Generated_Source\PSoC5/SPIS.c ****     {
 873              		.loc 1 621 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 8
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 878 0000 80B4     		push	{r7}
 879              		.cfi_def_cfa_offset 4
 880              		.cfi_offset 7, -4
 881 0002 83B0     		sub	sp, sp, #12
 882              		.cfi_def_cfa_offset 16
 883 0004 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 885 0006 0346     		mov	r3, r0
 886 0008 FB71     		strb	r3, [r7, #7]
 622:Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_ZERO_PTR, txDataByte);
 887              		.loc 1 622 0
 888 000a 044A     		ldr	r2, .L52
 889 000c FB79     		ldrb	r3, [r7, #7]
 890 000e 1370     		strb	r3, [r2]
 623:Generated_Source\PSoC5/SPIS.c ****     }
 891              		.loc 1 623 0
 892 0010 00BF     		nop
 893 0012 0C37     		adds	r7, r7, #12
 894              		.cfi_def_cfa_offset 4
 895 0014 BD46     		mov	sp, r7
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 0016 80BC     		pop	{r7}
 899              		.cfi_restore 7
 900              		.cfi_def_cfa_offset 0
 901 0018 7047     		bx	lr
 902              	.L53:
 903 001a 00BF     		.align	2
 904              	.L52:
 905 001c 04640040 		.word	1073767428
 906              		.cfi_endproc
 907              	.LFE13:
 908              		.size	SPIS_WriteTxDataZero, .-SPIS_WriteTxDataZero
 909              		.section	.text.SPIS_ReadRxData,"ax",%progbits
 910              		.align	2
 911              		.global	SPIS_ReadRxData
 912              		.thumb
 913              		.thumb_func
 914              		.type	SPIS_ReadRxData, %function
 915              	SPIS_ReadRxData:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 28


 916              	.LFB14:
 624:Generated_Source\PSoC5/SPIS.c **** 
 625:Generated_Source\PSoC5/SPIS.c **** #endif /* (SPIS_MODE_USE_ZERO != 0u) */
 626:Generated_Source\PSoC5/SPIS.c **** 
 627:Generated_Source\PSoC5/SPIS.c **** 
 628:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxData
 630:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 631:Generated_Source\PSoC5/SPIS.c **** *
 632:Generated_Source\PSoC5/SPIS.c **** * Summary:
 633:Generated_Source\PSoC5/SPIS.c **** *  Read the next byte of data received across the SPI.
 634:Generated_Source\PSoC5/SPIS.c **** *
 635:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 636:Generated_Source\PSoC5/SPIS.c **** *  None.
 637:Generated_Source\PSoC5/SPIS.c **** *
 638:Generated_Source\PSoC5/SPIS.c **** * Return:
 639:Generated_Source\PSoC5/SPIS.c **** *  The next byte of data read from the FIFO.
 640:Generated_Source\PSoC5/SPIS.c **** *
 641:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 642:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 643:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 644:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 645:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:Generated_Source\PSoC5/SPIS.c **** *  call if RX Software Buffer is used.
 647:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE] - used to store
 648:Generated_Source\PSoC5/SPIS.c **** *  received data.
 649:Generated_Source\PSoC5/SPIS.c **** *
 650:Generated_Source\PSoC5/SPIS.c **** * Theory:
 651:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to read a byte of data received.
 652:Generated_Source\PSoC5/SPIS.c **** *
 653:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 654:Generated_Source\PSoC5/SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:Generated_Source\PSoC5/SPIS.c **** *  empty status before calling Read function.
 656:Generated_Source\PSoC5/SPIS.c **** *
 657:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 658:Generated_Source\PSoC5/SPIS.c **** *  No.
 659:Generated_Source\PSoC5/SPIS.c **** *
 660:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxData(void) 
 662:Generated_Source\PSoC5/SPIS.c **** {
 917              		.loc 1 662 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              		.cfi_def_cfa_offset 16
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 663:Generated_Source\PSoC5/SPIS.c ****     uint8 rxData;
 664:Generated_Source\PSoC5/SPIS.c **** 
 665:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:Generated_Source\PSoC5/SPIS.c **** 
 667:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 29


 668:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 929              		.loc 1 668 0
 930 0006 FFF7FEFF 		bl	SPIS_DisableRxInt
 669:Generated_Source\PSoC5/SPIS.c **** 
 670:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead != SPIS_rxBufferWrite)
 931              		.loc 1 670 0
 932 000a 174B     		ldr	r3, .L59
 933 000c 1B78     		ldrb	r3, [r3]
 934 000e DAB2     		uxtb	r2, r3
 935 0010 164B     		ldr	r3, .L59+4
 936 0012 1B78     		ldrb	r3, [r3]
 937 0014 DBB2     		uxtb	r3, r3
 938 0016 9A42     		cmp	r2, r3
 939 0018 17D0     		beq	.L55
 671:Generated_Source\PSoC5/SPIS.c ****         {
 672:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_rxBufferFull == 0u)
 940              		.loc 1 672 0
 941 001a 154B     		ldr	r3, .L59+8
 942 001c 1B78     		ldrb	r3, [r3]
 943 001e DBB2     		uxtb	r3, r3
 944 0020 002B     		cmp	r3, #0
 945 0022 0FD1     		bne	.L56
 673:Generated_Source\PSoC5/SPIS.c ****             {
 674:Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferRead++;
 946              		.loc 1 674 0
 947 0024 104B     		ldr	r3, .L59
 948 0026 1B78     		ldrb	r3, [r3]
 949 0028 DBB2     		uxtb	r3, r3
 950 002a 0133     		adds	r3, r3, #1
 951 002c DAB2     		uxtb	r2, r3
 952 002e 0E4B     		ldr	r3, .L59
 953 0030 1A70     		strb	r2, [r3]
 675:Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_rxBufferRead >= SPIS_RX_BUFFER_SIZE)
 954              		.loc 1 675 0
 955 0032 0D4B     		ldr	r3, .L59
 956 0034 1B78     		ldrb	r3, [r3]
 957 0036 DBB2     		uxtb	r3, r3
 958 0038 1F2B     		cmp	r3, #31
 959 003a 06D9     		bls	.L55
 676:Generated_Source\PSoC5/SPIS.c ****                 {
 677:Generated_Source\PSoC5/SPIS.c ****                     SPIS_rxBufferRead = 0u;
 960              		.loc 1 677 0
 961 003c 0A4B     		ldr	r3, .L59
 962 003e 0022     		movs	r2, #0
 963 0040 1A70     		strb	r2, [r3]
 964 0042 02E0     		b	.L55
 965              	.L56:
 678:Generated_Source\PSoC5/SPIS.c ****                 }
 679:Generated_Source\PSoC5/SPIS.c ****             }
 680:Generated_Source\PSoC5/SPIS.c ****             else
 681:Generated_Source\PSoC5/SPIS.c ****             {
 682:Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferFull = 0u;
 966              		.loc 1 682 0
 967 0044 0A4B     		ldr	r3, .L59+8
 968 0046 0022     		movs	r2, #0
 969 0048 1A70     		strb	r2, [r3]
 970              	.L55:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 30


 683:Generated_Source\PSoC5/SPIS.c ****             }
 684:Generated_Source\PSoC5/SPIS.c ****         }
 685:Generated_Source\PSoC5/SPIS.c **** 
 686:Generated_Source\PSoC5/SPIS.c ****         rxData = SPIS_rxBuffer[SPIS_rxBufferRead];
 971              		.loc 1 686 0
 972 004a 074B     		ldr	r3, .L59
 973 004c 1B78     		ldrb	r3, [r3]
 974 004e DBB2     		uxtb	r3, r3
 975 0050 1A46     		mov	r2, r3
 976 0052 084B     		ldr	r3, .L59+12
 977 0054 9B5C     		ldrb	r3, [r3, r2]
 978 0056 FB71     		strb	r3, [r7, #7]
 687:Generated_Source\PSoC5/SPIS.c **** 
 688:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 689:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 979              		.loc 1 689 0
 980 0058 FFF7FEFF 		bl	SPIS_EnableRxInt
 690:Generated_Source\PSoC5/SPIS.c **** 
 691:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:Generated_Source\PSoC5/SPIS.c **** 
 693:Generated_Source\PSoC5/SPIS.c ****         rxData = CY_GET_REG8(SPIS_RXDATA_PTR);
 694:Generated_Source\PSoC5/SPIS.c **** 
 695:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:Generated_Source\PSoC5/SPIS.c **** 
 697:Generated_Source\PSoC5/SPIS.c ****     return (rxData);
 981              		.loc 1 697 0
 982 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPIS.c **** 
 699:Generated_Source\PSoC5/SPIS.c **** }
 983              		.loc 1 699 0
 984 005e 1846     		mov	r0, r3
 985 0060 0837     		adds	r7, r7, #8
 986              		.cfi_def_cfa_offset 8
 987 0062 BD46     		mov	sp, r7
 988              		.cfi_def_cfa_register 13
 989              		@ sp needed
 990 0064 80BD     		pop	{r7, pc}
 991              	.L60:
 992 0066 00BF     		.align	2
 993              	.L59:
 994 0068 00000000 		.word	SPIS_rxBufferRead
 995 006c 00000000 		.word	SPIS_rxBufferWrite
 996 0070 00000000 		.word	SPIS_rxBufferFull
 997 0074 00000000 		.word	SPIS_rxBuffer
 998              		.cfi_endproc
 999              	.LFE14:
 1000              		.size	SPIS_ReadRxData, .-SPIS_ReadRxData
 1001              		.section	.text.SPIS_GetRxBufferSize,"ax",%progbits
 1002              		.align	2
 1003              		.global	SPIS_GetRxBufferSize
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	SPIS_GetRxBufferSize, %function
 1007              	SPIS_GetRxBufferSize:
 1008              	.LFB15:
 700:Generated_Source\PSoC5/SPIS.c **** 
 701:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 31


 702:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 703:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetRxBufferSize
 704:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 705:Generated_Source\PSoC5/SPIS.c **** *
 706:Generated_Source\PSoC5/SPIS.c **** * Summary:
 707:Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:Generated_Source\PSoC5/SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:Generated_Source\PSoC5/SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:Generated_Source\PSoC5/SPIS.c **** *
 711:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIS.c **** *  None.
 713:Generated_Source\PSoC5/SPIS.c **** *
 714:Generated_Source\PSoC5/SPIS.c **** * Return:
 715:Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:Generated_Source\PSoC5/SPIS.c **** *
 717:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 720:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer.
 722:Generated_Source\PSoC5/SPIS.c **** *
 723:Generated_Source\PSoC5/SPIS.c **** * Theory:
 724:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:Generated_Source\PSoC5/SPIS.c **** *
 726:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_GetRxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIS.c **** {
 1009              		.loc 1 728 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 82B0     		sub	sp, sp, #8
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIS.c **** 
 731:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIS.c **** 
 733:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 734:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 1021              		.loc 1 734 0
 1022 0006 FFF7FEFF 		bl	SPIS_DisableRxInt
 735:Generated_Source\PSoC5/SPIS.c **** 
 736:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead == SPIS_rxBufferWrite)
 1023              		.loc 1 736 0
 1024 000a 164B     		ldr	r3, .L66
 1025 000c 1B78     		ldrb	r3, [r3]
 1026 000e DAB2     		uxtb	r2, r3
 1027 0010 154B     		ldr	r3, .L66+4
 1028 0012 1B78     		ldrb	r3, [r3]
 1029 0014 DBB2     		uxtb	r3, r3
 1030 0016 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 32


 1031 0018 02D1     		bne	.L62
 737:Generated_Source\PSoC5/SPIS.c ****         {
 738:Generated_Source\PSoC5/SPIS.c ****             size = 0u; /* No data in RX buffer */
 1032              		.loc 1 738 0
 1033 001a 0023     		movs	r3, #0
 1034 001c FB71     		strb	r3, [r7, #7]
 1035 001e 1AE0     		b	.L63
 1036              	.L62:
 739:Generated_Source\PSoC5/SPIS.c ****         }
 740:Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_rxBufferRead < SPIS_rxBufferWrite)
 1037              		.loc 1 740 0
 1038 0020 104B     		ldr	r3, .L66
 1039 0022 1B78     		ldrb	r3, [r3]
 1040 0024 DAB2     		uxtb	r2, r3
 1041 0026 104B     		ldr	r3, .L66+4
 1042 0028 1B78     		ldrb	r3, [r3]
 1043 002a DBB2     		uxtb	r3, r3
 1044 002c 9A42     		cmp	r2, r3
 1045 002e 08D2     		bcs	.L64
 741:Generated_Source\PSoC5/SPIS.c ****         {
 742:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_rxBufferWrite - SPIS_rxBufferRead);
 1046              		.loc 1 742 0
 1047 0030 0D4B     		ldr	r3, .L66+4
 1048 0032 1B78     		ldrb	r3, [r3]
 1049 0034 DAB2     		uxtb	r2, r3
 1050 0036 0B4B     		ldr	r3, .L66
 1051 0038 1B78     		ldrb	r3, [r3]
 1052 003a DBB2     		uxtb	r3, r3
 1053 003c D31A     		subs	r3, r2, r3
 1054 003e FB71     		strb	r3, [r7, #7]
 1055 0040 09E0     		b	.L63
 1056              	.L64:
 743:Generated_Source\PSoC5/SPIS.c ****         }
 744:Generated_Source\PSoC5/SPIS.c ****         else
 745:Generated_Source\PSoC5/SPIS.c ****         {
 746:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_RX_BUFFER_SIZE - SPIS_rxBufferRead) + SPIS_rxBufferWrite;
 1057              		.loc 1 746 0
 1058 0042 094B     		ldr	r3, .L66+4
 1059 0044 1B78     		ldrb	r3, [r3]
 1060 0046 DAB2     		uxtb	r2, r3
 1061 0048 064B     		ldr	r3, .L66
 1062 004a 1B78     		ldrb	r3, [r3]
 1063 004c DBB2     		uxtb	r3, r3
 1064 004e D31A     		subs	r3, r2, r3
 1065 0050 DBB2     		uxtb	r3, r3
 1066 0052 2033     		adds	r3, r3, #32
 1067 0054 FB71     		strb	r3, [r7, #7]
 1068              	.L63:
 747:Generated_Source\PSoC5/SPIS.c ****         }
 748:Generated_Source\PSoC5/SPIS.c **** 
 749:Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 750:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 1069              		.loc 1 750 0
 1070 0056 FFF7FEFF 		bl	SPIS_EnableRxInt
 751:Generated_Source\PSoC5/SPIS.c **** 
 752:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 33


 754:Generated_Source\PSoC5/SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:Generated_Source\PSoC5/SPIS.c ****         size = ((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 756:Generated_Source\PSoC5/SPIS.c **** 
 757:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:Generated_Source\PSoC5/SPIS.c **** 
 759:Generated_Source\PSoC5/SPIS.c ****     return (size);
 1071              		.loc 1 759 0
 1072 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 760:Generated_Source\PSoC5/SPIS.c **** }
 1073              		.loc 1 760 0
 1074 005c 1846     		mov	r0, r3
 1075 005e 0837     		adds	r7, r7, #8
 1076              		.cfi_def_cfa_offset 8
 1077 0060 BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0062 80BD     		pop	{r7, pc}
 1081              	.L67:
 1082              		.align	2
 1083              	.L66:
 1084 0064 00000000 		.word	SPIS_rxBufferRead
 1085 0068 00000000 		.word	SPIS_rxBufferWrite
 1086              		.cfi_endproc
 1087              	.LFE15:
 1088              		.size	SPIS_GetRxBufferSize, .-SPIS_GetRxBufferSize
 1089              		.section	.text.SPIS_GetTxBufferSize,"ax",%progbits
 1090              		.align	2
 1091              		.global	SPIS_GetTxBufferSize
 1092              		.thumb
 1093              		.thumb_func
 1094              		.type	SPIS_GetTxBufferSize, %function
 1095              	SPIS_GetTxBufferSize:
 1096              	.LFB16:
 761:Generated_Source\PSoC5/SPIS.c **** 
 762:Generated_Source\PSoC5/SPIS.c **** 
 763:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 764:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetTxBufferSize
 765:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 766:Generated_Source\PSoC5/SPIS.c **** *
 767:Generated_Source\PSoC5/SPIS.c **** * Summary:
 768:Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:Generated_Source\PSoC5/SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:Generated_Source\PSoC5/SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:Generated_Source\PSoC5/SPIS.c **** *  Software Buffer.
 772:Generated_Source\PSoC5/SPIS.c **** *
 773:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 774:Generated_Source\PSoC5/SPIS.c **** *  None.
 775:Generated_Source\PSoC5/SPIS.c **** *
 776:Generated_Source\PSoC5/SPIS.c **** * Return:
 777:Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:Generated_Source\PSoC5/SPIS.c **** *
 779:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 780:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 781:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer.
 782:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 783:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 784:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 34


 785:Generated_Source\PSoC5/SPIS.c **** * Theory:
 786:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:Generated_Source\PSoC5/SPIS.c **** *
 788:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 789:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
 790:Generated_Source\PSoC5/SPIS.c **** *
 791:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 792:Generated_Source\PSoC5/SPIS.c **** uint8  SPIS_GetTxBufferSize(void) 
 793:Generated_Source\PSoC5/SPIS.c **** {
 1097              		.loc 1 793 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 8
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101 0000 80B5     		push	{r7, lr}
 1102              		.cfi_def_cfa_offset 8
 1103              		.cfi_offset 7, -8
 1104              		.cfi_offset 14, -4
 1105 0002 82B0     		sub	sp, sp, #8
 1106              		.cfi_def_cfa_offset 16
 1107 0004 00AF     		add	r7, sp, #0
 1108              		.cfi_def_cfa_register 7
 794:Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 795:Generated_Source\PSoC5/SPIS.c **** 
 796:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:Generated_Source\PSoC5/SPIS.c **** 
 798:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 1109              		.loc 1 799 0
 1110 0006 FFF7FEFF 		bl	SPIS_DisableTxInt
 800:Generated_Source\PSoC5/SPIS.c **** 
 801:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_txBufferRead == SPIS_txBufferWrite)
 1111              		.loc 1 801 0
 1112 000a 164B     		ldr	r3, .L73
 1113 000c 1B78     		ldrb	r3, [r3]
 1114 000e DAB2     		uxtb	r2, r3
 1115 0010 154B     		ldr	r3, .L73+4
 1116 0012 1B78     		ldrb	r3, [r3]
 1117 0014 DBB2     		uxtb	r3, r3
 1118 0016 9A42     		cmp	r2, r3
 1119 0018 02D1     		bne	.L69
 802:Generated_Source\PSoC5/SPIS.c ****         {
 803:Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 1120              		.loc 1 803 0
 1121 001a 0023     		movs	r3, #0
 1122 001c FB71     		strb	r3, [r7, #7]
 1123 001e 1AE0     		b	.L70
 1124              	.L69:
 804:Generated_Source\PSoC5/SPIS.c ****         }
 805:Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_txBufferRead < SPIS_txBufferWrite)
 1125              		.loc 1 805 0
 1126 0020 104B     		ldr	r3, .L73
 1127 0022 1B78     		ldrb	r3, [r3]
 1128 0024 DAB2     		uxtb	r2, r3
 1129 0026 104B     		ldr	r3, .L73+4
 1130 0028 1B78     		ldrb	r3, [r3]
 1131 002a DBB2     		uxtb	r3, r3
 1132 002c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 35


 1133 002e 08D2     		bcs	.L71
 806:Generated_Source\PSoC5/SPIS.c ****         {
 807:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_txBufferWrite - SPIS_txBufferRead);
 1134              		.loc 1 807 0
 1135 0030 0D4B     		ldr	r3, .L73+4
 1136 0032 1B78     		ldrb	r3, [r3]
 1137 0034 DAB2     		uxtb	r2, r3
 1138 0036 0B4B     		ldr	r3, .L73
 1139 0038 1B78     		ldrb	r3, [r3]
 1140 003a DBB2     		uxtb	r3, r3
 1141 003c D31A     		subs	r3, r2, r3
 1142 003e FB71     		strb	r3, [r7, #7]
 1143 0040 09E0     		b	.L70
 1144              	.L71:
 808:Generated_Source\PSoC5/SPIS.c ****         }
 809:Generated_Source\PSoC5/SPIS.c ****         else
 810:Generated_Source\PSoC5/SPIS.c ****         {
 811:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_TX_BUFFER_SIZE - SPIS_txBufferRead) + SPIS_txBufferWrite;
 1145              		.loc 1 811 0
 1146 0042 094B     		ldr	r3, .L73+4
 1147 0044 1B78     		ldrb	r3, [r3]
 1148 0046 DAB2     		uxtb	r2, r3
 1149 0048 064B     		ldr	r3, .L73
 1150 004a 1B78     		ldrb	r3, [r3]
 1151 004c DBB2     		uxtb	r3, r3
 1152 004e D31A     		subs	r3, r2, r3
 1153 0050 DBB2     		uxtb	r3, r3
 1154 0052 2033     		adds	r3, r3, #32
 1155 0054 FB71     		strb	r3, [r7, #7]
 1156              	.L70:
 812:Generated_Source\PSoC5/SPIS.c ****         }
 813:Generated_Source\PSoC5/SPIS.c **** 
 814:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 815:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 1157              		.loc 1 815 0
 1158 0056 FFF7FEFF 		bl	SPIS_EnableTxInt
 816:Generated_Source\PSoC5/SPIS.c **** 
 817:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:Generated_Source\PSoC5/SPIS.c **** 
 819:Generated_Source\PSoC5/SPIS.c ****         size = SPIS_TX_STATUS_REG;
 820:Generated_Source\PSoC5/SPIS.c **** 
 821:Generated_Source\PSoC5/SPIS.c ****         /* Is the fifo is full. */
 822:Generated_Source\PSoC5/SPIS.c ****         if((size & SPIS_STS_TX_FIFO_EMPTY) != 0u)
 823:Generated_Source\PSoC5/SPIS.c ****         {
 824:Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 825:Generated_Source\PSoC5/SPIS.c ****         }
 826:Generated_Source\PSoC5/SPIS.c ****         else if((size & SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 827:Generated_Source\PSoC5/SPIS.c ****         {
 828:Generated_Source\PSoC5/SPIS.c ****             size = 1u;
 829:Generated_Source\PSoC5/SPIS.c ****         }
 830:Generated_Source\PSoC5/SPIS.c ****         else
 831:Generated_Source\PSoC5/SPIS.c ****         {
 832:Generated_Source\PSoC5/SPIS.c ****             size = 4u;
 833:Generated_Source\PSoC5/SPIS.c ****         }
 834:Generated_Source\PSoC5/SPIS.c **** 
 835:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 36


 837:Generated_Source\PSoC5/SPIS.c ****     return (size);
 1159              		.loc 1 837 0
 1160 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838:Generated_Source\PSoC5/SPIS.c **** }
 1161              		.loc 1 838 0
 1162 005c 1846     		mov	r0, r3
 1163 005e 0837     		adds	r7, r7, #8
 1164              		.cfi_def_cfa_offset 8
 1165 0060 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0062 80BD     		pop	{r7, pc}
 1169              	.L74:
 1170              		.align	2
 1171              	.L73:
 1172 0064 00000000 		.word	SPIS_txBufferRead
 1173 0068 00000000 		.word	SPIS_txBufferWrite
 1174              		.cfi_endproc
 1175              	.LFE16:
 1176              		.size	SPIS_GetTxBufferSize, .-SPIS_GetTxBufferSize
 1177              		.section	.text.SPIS_ClearRxBuffer,"ax",%progbits
 1178              		.align	2
 1179              		.global	SPIS_ClearRxBuffer
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	SPIS_ClearRxBuffer, %function
 1183              	SPIS_ClearRxBuffer:
 1184              	.LFB17:
 839:Generated_Source\PSoC5/SPIS.c **** 
 840:Generated_Source\PSoC5/SPIS.c **** 
 841:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 842:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearRxBuffer
 843:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 844:Generated_Source\PSoC5/SPIS.c **** *
 845:Generated_Source\PSoC5/SPIS.c **** * Summary:
 846:Generated_Source\PSoC5/SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:Generated_Source\PSoC5/SPIS.c **** *
 848:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 849:Generated_Source\PSoC5/SPIS.c **** *  None.
 850:Generated_Source\PSoC5/SPIS.c **** *
 851:Generated_Source\PSoC5/SPIS.c **** * Return:
 852:Generated_Source\PSoC5/SPIS.c **** *  None.
 853:Generated_Source\PSoC5/SPIS.c **** *
 854:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 855:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 856:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 858:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 859:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 861:Generated_Source\PSoC5/SPIS.c **** *
 862:Generated_Source\PSoC5/SPIS.c **** * Theory:
 863:Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 866:Generated_Source\PSoC5/SPIS.c **** *
 867:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 37


 868:Generated_Source\PSoC5/SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:Generated_Source\PSoC5/SPIS.c **** *
 870:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 871:Generated_Source\PSoC5/SPIS.c **** *  No.
 872:Generated_Source\PSoC5/SPIS.c **** *
 873:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 874:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearRxBuffer(void) 
 875:Generated_Source\PSoC5/SPIS.c **** {
 1185              		.loc 1 875 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189 0000 80B5     		push	{r7, lr}
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 7, -8
 1192              		.cfi_offset 14, -4
 1193 0002 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 876:Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware RX FIFO */
 877:Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1195              		.loc 1 877 0
 1196 0004 01E0     		b	.L76
 1197              	.L77:
 878:Generated_Source\PSoC5/SPIS.c ****     {
 879:Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 1198              		.loc 1 879 0
 1199 0006 0C4B     		ldr	r3, .L78
 1200 0008 1B78     		ldrb	r3, [r3]
 1201              	.L76:
 877:Generated_Source\PSoC5/SPIS.c ****     {
 1202              		.loc 1 877 0
 1203 000a 0C4B     		ldr	r3, .L78+4
 1204 000c 1B78     		ldrb	r3, [r3]
 1205 000e DBB2     		uxtb	r3, r3
 1206 0010 03F00803 		and	r3, r3, #8
 1207 0014 002B     		cmp	r3, #0
 1208 0016 F6D1     		bne	.L77
 880:Generated_Source\PSoC5/SPIS.c ****     }
 881:Generated_Source\PSoC5/SPIS.c **** 
 882:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:Generated_Source\PSoC5/SPIS.c **** 
 884:Generated_Source\PSoC5/SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 1209              		.loc 1 885 0
 1210 0018 FFF7FEFF 		bl	SPIS_DisableRxInt
 886:Generated_Source\PSoC5/SPIS.c **** 
 887:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead  = 0u;
 1211              		.loc 1 887 0
 1212 001c 084B     		ldr	r3, .L78+8
 1213 001e 0022     		movs	r2, #0
 1214 0020 1A70     		strb	r2, [r3]
 888:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 1215              		.loc 1 888 0
 1216 0022 084B     		ldr	r3, .L78+12
 1217 0024 0022     		movs	r2, #0
 1218 0026 1A70     		strb	r2, [r3]
 889:Generated_Source\PSoC5/SPIS.c **** 		SPIS_rxBufferFull  = 0u;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 38


 1219              		.loc 1 889 0
 1220 0028 074B     		ldr	r3, .L78+16
 1221 002a 0022     		movs	r2, #0
 1222 002c 1A70     		strb	r2, [r3]
 890:Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 891:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 1223              		.loc 1 891 0
 1224 002e FFF7FEFF 		bl	SPIS_EnableRxInt
 892:Generated_Source\PSoC5/SPIS.c **** 
 893:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 894:Generated_Source\PSoC5/SPIS.c **** }
 1225              		.loc 1 894 0
 1226 0032 00BF     		nop
 1227 0034 80BD     		pop	{r7, pc}
 1228              	.L79:
 1229 0036 00BF     		.align	2
 1230              	.L78:
 1231 0038 54640040 		.word	1073767508
 1232 003c 64650040 		.word	1073767780
 1233 0040 00000000 		.word	SPIS_rxBufferRead
 1234 0044 00000000 		.word	SPIS_rxBufferWrite
 1235 0048 00000000 		.word	SPIS_rxBufferFull
 1236              		.cfi_endproc
 1237              	.LFE17:
 1238              		.size	SPIS_ClearRxBuffer, .-SPIS_ClearRxBuffer
 1239              		.section	.text.SPIS_ClearTxBuffer,"ax",%progbits
 1240              		.align	2
 1241              		.global	SPIS_ClearTxBuffer
 1242              		.thumb
 1243              		.thumb_func
 1244              		.type	SPIS_ClearTxBuffer, %function
 1245              	SPIS_ClearTxBuffer:
 1246              	.LFB18:
 895:Generated_Source\PSoC5/SPIS.c **** 
 896:Generated_Source\PSoC5/SPIS.c **** 
 897:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 898:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearTxBuffer
 899:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 900:Generated_Source\PSoC5/SPIS.c **** *
 901:Generated_Source\PSoC5/SPIS.c **** * Summary:
 902:Generated_Source\PSoC5/SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:Generated_Source\PSoC5/SPIS.c **** *
 904:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 905:Generated_Source\PSoC5/SPIS.c **** *  None.
 906:Generated_Source\PSoC5/SPIS.c **** *
 907:Generated_Source\PSoC5/SPIS.c **** * Return:
 908:Generated_Source\PSoC5/SPIS.c **** *  None.
 909:Generated_Source\PSoC5/SPIS.c **** *
 910:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 911:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 912:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 914:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 915:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 917:Generated_Source\PSoC5/SPIS.c **** *
 918:Generated_Source\PSoC5/SPIS.c **** * Theory:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 39


 919:Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 922:Generated_Source\PSoC5/SPIS.c **** *
 923:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 924:Generated_Source\PSoC5/SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:Generated_Source\PSoC5/SPIS.c **** *  overwritten.
 926:Generated_Source\PSoC5/SPIS.c **** *
 927:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 928:Generated_Source\PSoC5/SPIS.c **** *  No.
 929:Generated_Source\PSoC5/SPIS.c **** *
 930:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 931:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearTxBuffer(void) 
 932:Generated_Source\PSoC5/SPIS.c **** {
 1247              		.loc 1 932 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 8
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 82B0     		sub	sp, sp, #8
 1256              		.cfi_def_cfa_offset 16
 1257 0004 00AF     		add	r7, sp, #0
 1258              		.cfi_def_cfa_register 7
 933:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 934:Generated_Source\PSoC5/SPIS.c **** 
 935:Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware TX FIFO */
 936:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 1259              		.loc 1 936 0
 1260 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1261 000a 0346     		mov	r3, r0
 1262 000c FB71     		strb	r3, [r7, #7]
 937:Generated_Source\PSoC5/SPIS.c **** 
 938:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
 939:Generated_Source\PSoC5/SPIS.c **** 
 940:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 941:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 1263              		.loc 1 941 0
 1264 000e 164A     		ldr	r2, .L81
 1265 0010 154B     		ldr	r3, .L81
 1266 0012 1B78     		ldrb	r3, [r3]
 1267 0014 DBB2     		uxtb	r3, r3
 1268 0016 43F00303 		orr	r3, r3, #3
 1269 001a DBB2     		uxtb	r3, r3
 1270 001c 1370     		strb	r3, [r2]
 942:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 1271              		.loc 1 942 0
 1272 001e 124A     		ldr	r2, .L81
 1273 0020 114B     		ldr	r3, .L81
 1274 0022 1B78     		ldrb	r3, [r3]
 1275 0024 DBB2     		uxtb	r3, r3
 1276 0026 23F00303 		bic	r3, r3, #3
 1277 002a DBB2     		uxtb	r3, r3
 1278 002c 1370     		strb	r3, [r2]
 943:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 40


 944:Generated_Source\PSoC5/SPIS.c ****     #else
 945:Generated_Source\PSoC5/SPIS.c **** 
 946:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 947:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 948:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 949:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 950:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 951:Generated_Source\PSoC5/SPIS.c **** 
 952:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH > 8u */
 953:Generated_Source\PSoC5/SPIS.c **** 
 954:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1279              		.loc 1 954 0
 1280 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1281 0030 1846     		mov	r0, r3
 1282 0032 FFF7FEFF 		bl	CyExitCriticalSection
 955:Generated_Source\PSoC5/SPIS.c **** 
 956:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:Generated_Source\PSoC5/SPIS.c **** 
 958:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 1283              		.loc 1 959 0
 1284 0036 FFF7FEFF 		bl	SPIS_DisableTxInt
 960:Generated_Source\PSoC5/SPIS.c **** 
 961:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead  = 0u;
 1285              		.loc 1 961 0
 1286 003a 0C4B     		ldr	r3, .L81+4
 1287 003c 0022     		movs	r2, #0
 1288 003e 1A70     		strb	r2, [r3]
 962:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 1289              		.loc 1 962 0
 1290 0040 0B4B     		ldr	r3, .L81+8
 1291 0042 0022     		movs	r2, #0
 1292 0044 1A70     		strb	r2, [r3]
 963:Generated_Source\PSoC5/SPIS.c **** 		SPIS_txBufferFull  = 0u;
 1293              		.loc 1 963 0
 1294 0046 0B4B     		ldr	r3, .L81+12
 1295 0048 0022     		movs	r2, #0
 1296 004a 1A70     		strb	r2, [r3]
 964:Generated_Source\PSoC5/SPIS.c **** 		
 965:Generated_Source\PSoC5/SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG &= (uint8)~SPIS_STS_TX_FIFO_NOT_FULL;
 1297              		.loc 1 966 0
 1298 004c 0A4A     		ldr	r2, .L81+16
 1299 004e 0A4B     		ldr	r3, .L81+16
 1300 0050 1B78     		ldrb	r3, [r3]
 1301 0052 DBB2     		uxtb	r3, r3
 1302 0054 23F00203 		bic	r3, r3, #2
 1303 0058 DBB2     		uxtb	r3, r3
 1304 005a 1370     		strb	r3, [r2]
 967:Generated_Source\PSoC5/SPIS.c **** 
 968:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 969:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 1305              		.loc 1 969 0
 1306 005c FFF7FEFF 		bl	SPIS_EnableTxInt
 970:Generated_Source\PSoC5/SPIS.c **** 
 971:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:Generated_Source\PSoC5/SPIS.c **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 41


 1307              		.loc 1 972 0
 1308 0060 00BF     		nop
 1309 0062 0837     		adds	r7, r7, #8
 1310              		.cfi_def_cfa_offset 8
 1311 0064 BD46     		mov	sp, r7
 1312              		.cfi_def_cfa_register 13
 1313              		@ sp needed
 1314 0066 80BD     		pop	{r7, pc}
 1315              	.L82:
 1316              		.align	2
 1317              	.L81:
 1318 0068 94640040 		.word	1073767572
 1319 006c 00000000 		.word	SPIS_txBufferRead
 1320 0070 00000000 		.word	SPIS_txBufferWrite
 1321 0074 00000000 		.word	SPIS_txBufferFull
 1322 0078 82640040 		.word	1073767554
 1323              		.cfi_endproc
 1324              	.LFE18:
 1325              		.size	SPIS_ClearTxBuffer, .-SPIS_ClearTxBuffer
 1326              		.section	.text.SPIS_PutArray,"ax",%progbits
 1327              		.align	2
 1328              		.global	SPIS_PutArray
 1329              		.thumb
 1330              		.thumb_func
 1331              		.type	SPIS_PutArray, %function
 1332              	SPIS_PutArray:
 1333              	.LFB19:
 973:Generated_Source\PSoC5/SPIS.c **** 
 974:Generated_Source\PSoC5/SPIS.c **** 
 975:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_BIDIRECTIONAL_MODE != 0u)
 976:Generated_Source\PSoC5/SPIS.c **** 
 977:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 978:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxEnable
 979:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 980:Generated_Source\PSoC5/SPIS.c ****     *
 981:Generated_Source\PSoC5/SPIS.c ****     * Summary:
 982:Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:Generated_Source\PSoC5/SPIS.c ****     *
 985:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 986:Generated_Source\PSoC5/SPIS.c ****     *  None.
 987:Generated_Source\PSoC5/SPIS.c ****     *
 988:Generated_Source\PSoC5/SPIS.c ****     * Return:
 989:Generated_Source\PSoC5/SPIS.c ****     *  None.
 990:Generated_Source\PSoC5/SPIS.c ****     *
 991:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 992:Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxEnable(void) 
 993:Generated_Source\PSoC5/SPIS.c ****     {
 994:Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG |= SPIS_CTRL_TX_SIGNAL_EN;
 995:Generated_Source\PSoC5/SPIS.c ****     }
 996:Generated_Source\PSoC5/SPIS.c **** 
 997:Generated_Source\PSoC5/SPIS.c **** 
 998:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 999:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxDisable
1000:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
1001:Generated_Source\PSoC5/SPIS.c ****     *
1002:Generated_Source\PSoC5/SPIS.c ****     * Summary:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 42


1003:Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to receive.
1005:Generated_Source\PSoC5/SPIS.c ****     *
1006:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
1007:Generated_Source\PSoC5/SPIS.c ****     *  None.
1008:Generated_Source\PSoC5/SPIS.c ****     *
1009:Generated_Source\PSoC5/SPIS.c ****     * Return:
1010:Generated_Source\PSoC5/SPIS.c ****     *  None.
1011:Generated_Source\PSoC5/SPIS.c ****     *
1012:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
1013:Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxDisable(void) 
1014:Generated_Source\PSoC5/SPIS.c ****     {
1015:Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG &= (uint8)~SPIS_CTRL_TX_SIGNAL_EN;
1016:Generated_Source\PSoC5/SPIS.c ****     }
1017:Generated_Source\PSoC5/SPIS.c **** 
1018:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_BIDIRECTIONAL_MODE != 0u */
1019:Generated_Source\PSoC5/SPIS.c **** 
1020:Generated_Source\PSoC5/SPIS.c **** 
1021:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1022:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_PutArray
1023:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1024:Generated_Source\PSoC5/SPIS.c **** *
1025:Generated_Source\PSoC5/SPIS.c **** * Summary:
1026:Generated_Source\PSoC5/SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:Generated_Source\PSoC5/SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:Generated_Source\PSoC5/SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:Generated_Source\PSoC5/SPIS.c **** *  WriteTxDataZero() function.
1030:Generated_Source\PSoC5/SPIS.c **** *
1031:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:Generated_Source\PSoC5/SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:Generated_Source\PSoC5/SPIS.c **** *
1035:Generated_Source\PSoC5/SPIS.c **** * Return:
1036:Generated_Source\PSoC5/SPIS.c **** *  None.
1037:Generated_Source\PSoC5/SPIS.c **** *
1038:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1039:Generated_Source\PSoC5/SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:Generated_Source\PSoC5/SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:Generated_Source\PSoC5/SPIS.c **** *  enough room in the TX FIFO.
1042:Generated_Source\PSoC5/SPIS.c **** *
1043:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1044:Generated_Source\PSoC5/SPIS.c **** *  No.
1045:Generated_Source\PSoC5/SPIS.c **** *
1046:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1047:Generated_Source\PSoC5/SPIS.c **** void SPIS_PutArray(const uint8 buffer[], uint8 byteCount)
1048:Generated_Source\PSoC5/SPIS.c ****                                                                     
1049:Generated_Source\PSoC5/SPIS.c **** {
 1334              		.loc 1 1049 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 16
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 84B0     		sub	sp, sp, #16
 1343              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 43


 1344 0004 00AF     		add	r7, sp, #0
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
 1347 0008 0B46     		mov	r3, r1
 1348 000a FB70     		strb	r3, [r7, #3]
1050:Generated_Source\PSoC5/SPIS.c ****     uint8 bufIndex;
1051:Generated_Source\PSoC5/SPIS.c ****     bufIndex = 0u;
 1349              		.loc 1 1051 0
 1350 000c 0023     		movs	r3, #0
 1351 000e FB73     		strb	r3, [r7, #15]
1052:Generated_Source\PSoC5/SPIS.c **** 
1053:Generated_Source\PSoC5/SPIS.c ****     while(byteCount > 0u)
 1352              		.loc 1 1053 0
 1353 0010 0CE0     		b	.L84
 1354              	.L85:
1054:Generated_Source\PSoC5/SPIS.c ****     {
1055:Generated_Source\PSoC5/SPIS.c ****         SPIS_WriteTxData(buffer[bufIndex]);
 1355              		.loc 1 1055 0
 1356 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1357 0014 7A68     		ldr	r2, [r7, #4]
 1358 0016 1344     		add	r3, r3, r2
 1359 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1360 001a 1846     		mov	r0, r3
 1361 001c FFF7FEFF 		bl	SPIS_WriteTxData
1056:Generated_Source\PSoC5/SPIS.c ****         bufIndex++;
 1362              		.loc 1 1056 0
 1363 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1364 0022 0133     		adds	r3, r3, #1
 1365 0024 FB73     		strb	r3, [r7, #15]
1057:Generated_Source\PSoC5/SPIS.c ****         byteCount--;
 1366              		.loc 1 1057 0
 1367 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1368 0028 013B     		subs	r3, r3, #1
 1369 002a FB70     		strb	r3, [r7, #3]
 1370              	.L84:
1053:Generated_Source\PSoC5/SPIS.c ****     {
 1371              		.loc 1 1053 0
 1372 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1373 002e 002B     		cmp	r3, #0
 1374 0030 EFD1     		bne	.L85
1058:Generated_Source\PSoC5/SPIS.c ****     }
1059:Generated_Source\PSoC5/SPIS.c **** }
 1375              		.loc 1 1059 0
 1376 0032 00BF     		nop
 1377 0034 1037     		adds	r7, r7, #16
 1378              		.cfi_def_cfa_offset 8
 1379 0036 BD46     		mov	sp, r7
 1380              		.cfi_def_cfa_register 13
 1381              		@ sp needed
 1382 0038 80BD     		pop	{r7, pc}
 1383              		.cfi_endproc
 1384              	.LFE19:
 1385              		.size	SPIS_PutArray, .-SPIS_PutArray
 1386 003a 00BF     		.section	.text.SPIS_ClearFIFO,"ax",%progbits
 1387              		.align	2
 1388              		.global	SPIS_ClearFIFO
 1389              		.thumb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 44


 1390              		.thumb_func
 1391              		.type	SPIS_ClearFIFO, %function
 1392              	SPIS_ClearFIFO:
 1393              	.LFB20:
1060:Generated_Source\PSoC5/SPIS.c **** 
1061:Generated_Source\PSoC5/SPIS.c **** 
1062:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1063:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearFIFO
1064:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1065:Generated_Source\PSoC5/SPIS.c **** *
1066:Generated_Source\PSoC5/SPIS.c **** * Summary:
1067:Generated_Source\PSoC5/SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:Generated_Source\PSoC5/SPIS.c **** *
1069:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1070:Generated_Source\PSoC5/SPIS.c **** *  None.
1071:Generated_Source\PSoC5/SPIS.c **** *
1072:Generated_Source\PSoC5/SPIS.c **** * Return:
1073:Generated_Source\PSoC5/SPIS.c **** *  None.
1074:Generated_Source\PSoC5/SPIS.c **** *
1075:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1076:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1077:Generated_Source\PSoC5/SPIS.c **** *
1078:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1079:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearFIFO(void) 
1080:Generated_Source\PSoC5/SPIS.c **** {
 1394              		.loc 1 1080 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 8
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 82B0     		sub	sp, sp, #8
 1403              		.cfi_def_cfa_offset 16
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
1081:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
1082:Generated_Source\PSoC5/SPIS.c **** 
1083:Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1406              		.loc 1 1083 0
 1407 0006 01E0     		b	.L87
 1408              	.L88:
1084:Generated_Source\PSoC5/SPIS.c ****     {
1085:Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 1409              		.loc 1 1085 0
 1410 0008 124B     		ldr	r3, .L89
 1411 000a 1B78     		ldrb	r3, [r3]
 1412              	.L87:
1083:Generated_Source\PSoC5/SPIS.c ****     {
 1413              		.loc 1 1083 0
 1414 000c 124B     		ldr	r3, .L89+4
 1415 000e 1B78     		ldrb	r3, [r3]
 1416 0010 DBB2     		uxtb	r3, r3
 1417 0012 03F00803 		and	r3, r3, #8
 1418 0016 002B     		cmp	r3, #0
 1419 0018 F6D1     		bne	.L88
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 45


1086:Generated_Source\PSoC5/SPIS.c ****     }
1087:Generated_Source\PSoC5/SPIS.c **** 
1088:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 1420              		.loc 1 1088 0
 1421 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1422 001e 0346     		mov	r3, r0
 1423 0020 FB71     		strb	r3, [r7, #7]
1089:Generated_Source\PSoC5/SPIS.c **** 
1090:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
1091:Generated_Source\PSoC5/SPIS.c **** 
1092:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1093:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 1424              		.loc 1 1093 0
 1425 0022 0E4A     		ldr	r2, .L89+8
 1426 0024 0D4B     		ldr	r3, .L89+8
 1427 0026 1B78     		ldrb	r3, [r3]
 1428 0028 DBB2     		uxtb	r3, r3
 1429 002a 43F00303 		orr	r3, r3, #3
 1430 002e DBB2     		uxtb	r3, r3
 1431 0030 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 1432              		.loc 1 1094 0
 1433 0032 0A4A     		ldr	r2, .L89+8
 1434 0034 094B     		ldr	r3, .L89+8
 1435 0036 1B78     		ldrb	r3, [r3]
 1436 0038 DBB2     		uxtb	r3, r3
 1437 003a 23F00303 		bic	r3, r3, #3
 1438 003e DBB2     		uxtb	r3, r3
 1439 0040 1370     		strb	r3, [r2]
1095:Generated_Source\PSoC5/SPIS.c **** 
1096:Generated_Source\PSoC5/SPIS.c ****     #else
1097:Generated_Source\PSoC5/SPIS.c **** 
1098:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1099:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
1100:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
1101:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
1102:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
1103:Generated_Source\PSoC5/SPIS.c **** 
1104:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH <= 8u */
1105:Generated_Source\PSoC5/SPIS.c **** 
1106:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1440              		.loc 1 1106 0
 1441 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1442 0044 1846     		mov	r0, r3
 1443 0046 FFF7FEFF 		bl	CyExitCriticalSection
1107:Generated_Source\PSoC5/SPIS.c **** }
 1444              		.loc 1 1107 0
 1445 004a 00BF     		nop
 1446 004c 0837     		adds	r7, r7, #8
 1447              		.cfi_def_cfa_offset 8
 1448 004e BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 0050 80BD     		pop	{r7, pc}
 1452              	.L90:
 1453 0052 00BF     		.align	2
 1454              	.L89:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 46


 1455 0054 54640040 		.word	1073767508
 1456 0058 64650040 		.word	1073767780
 1457 005c 94640040 		.word	1073767572
 1458              		.cfi_endproc
 1459              	.LFE20:
 1460              		.size	SPIS_ClearFIFO, .-SPIS_ClearFIFO
 1461              		.section	.text.SPIS_EnableInt,"ax",%progbits
 1462              		.align	2
 1463              		.global	SPIS_EnableInt
 1464              		.thumb
 1465              		.thumb_func
 1466              		.type	SPIS_EnableInt, %function
 1467              	SPIS_EnableInt:
 1468              	.LFB21:
1108:Generated_Source\PSoC5/SPIS.c **** 
1109:Generated_Source\PSoC5/SPIS.c **** 
1110:Generated_Source\PSoC5/SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:Generated_Source\PSoC5/SPIS.c **** *  Please do not use it in new projects.
1112:Generated_Source\PSoC5/SPIS.c **** */
1113:Generated_Source\PSoC5/SPIS.c **** 
1114:Generated_Source\PSoC5/SPIS.c **** 
1115:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1116:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableInt
1117:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1118:Generated_Source\PSoC5/SPIS.c **** *
1119:Generated_Source\PSoC5/SPIS.c **** * Summary:
1120:Generated_Source\PSoC5/SPIS.c **** *  Enable internal interrupt generation.
1121:Generated_Source\PSoC5/SPIS.c **** *
1122:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1123:Generated_Source\PSoC5/SPIS.c **** *  None.
1124:Generated_Source\PSoC5/SPIS.c **** *
1125:Generated_Source\PSoC5/SPIS.c **** * Return:
1126:Generated_Source\PSoC5/SPIS.c **** *  None.
1127:Generated_Source\PSoC5/SPIS.c **** *
1128:Generated_Source\PSoC5/SPIS.c **** * Theory:
1129:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:Generated_Source\PSoC5/SPIS.c **** *
1131:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1132:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableInt(void) 
1133:Generated_Source\PSoC5/SPIS.c **** {
 1469              		.loc 1 1133 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473              		@ link register save eliminated.
 1474 0000 80B4     		push	{r7}
 1475              		.cfi_def_cfa_offset 4
 1476              		.cfi_offset 7, -4
 1477 0002 00AF     		add	r7, sp, #0
 1478              		.cfi_def_cfa_register 7
1134:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1135:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 1479              		.loc 1 1135 0
 1480 0004 044B     		ldr	r3, .L92
 1481 0006 0822     		movs	r2, #8
 1482 0008 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 47


1137:Generated_Source\PSoC5/SPIS.c **** 
1138:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1139:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 1483              		.loc 1 1139 0
 1484 000a 034B     		ldr	r3, .L92
 1485 000c 0422     		movs	r2, #4
 1486 000e 1A60     		str	r2, [r3]
1140:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1141:Generated_Source\PSoC5/SPIS.c **** }
 1487              		.loc 1 1141 0
 1488 0010 00BF     		nop
 1489 0012 BD46     		mov	sp, r7
 1490              		.cfi_def_cfa_register 13
 1491              		@ sp needed
 1492 0014 80BC     		pop	{r7}
 1493              		.cfi_restore 7
 1494              		.cfi_def_cfa_offset 0
 1495 0016 7047     		bx	lr
 1496              	.L93:
 1497              		.align	2
 1498              	.L92:
 1499 0018 00E100E0 		.word	-536813312
 1500              		.cfi_endproc
 1501              	.LFE21:
 1502              		.size	SPIS_EnableInt, .-SPIS_EnableInt
 1503              		.section	.text.SPIS_DisableInt,"ax",%progbits
 1504              		.align	2
 1505              		.global	SPIS_DisableInt
 1506              		.thumb
 1507              		.thumb_func
 1508              		.type	SPIS_DisableInt, %function
 1509              	SPIS_DisableInt:
 1510              	.LFB22:
1142:Generated_Source\PSoC5/SPIS.c **** 
1143:Generated_Source\PSoC5/SPIS.c **** 
1144:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1145:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableInt
1146:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1147:Generated_Source\PSoC5/SPIS.c **** *
1148:Generated_Source\PSoC5/SPIS.c **** * Summary:
1149:Generated_Source\PSoC5/SPIS.c **** *  Disable internal interrupt generation.
1150:Generated_Source\PSoC5/SPIS.c **** *
1151:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1152:Generated_Source\PSoC5/SPIS.c **** *  None.
1153:Generated_Source\PSoC5/SPIS.c **** *
1154:Generated_Source\PSoC5/SPIS.c **** * Return:
1155:Generated_Source\PSoC5/SPIS.c **** *  None.
1156:Generated_Source\PSoC5/SPIS.c **** *
1157:Generated_Source\PSoC5/SPIS.c **** * Theory:
1158:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:Generated_Source\PSoC5/SPIS.c **** *
1160:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1161:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableInt(void) 
1162:Generated_Source\PSoC5/SPIS.c **** {
 1511              		.loc 1 1162 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 48


 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 1516 0000 80B4     		push	{r7}
 1517              		.cfi_def_cfa_offset 4
 1518              		.cfi_offset 7, -4
 1519 0002 00AF     		add	r7, sp, #0
 1520              		.cfi_def_cfa_register 7
1163:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1164:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 1521              		.loc 1 1164 0
 1522 0004 044B     		ldr	r3, .L95
 1523 0006 0822     		movs	r2, #8
 1524 0008 1A60     		str	r2, [r3]
1165:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1166:Generated_Source\PSoC5/SPIS.c **** 
1167:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1168:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 1525              		.loc 1 1168 0
 1526 000a 034B     		ldr	r3, .L95
 1527 000c 0422     		movs	r2, #4
 1528 000e 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1170:Generated_Source\PSoC5/SPIS.c **** }
 1529              		.loc 1 1170 0
 1530 0010 00BF     		nop
 1531 0012 BD46     		mov	sp, r7
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 0014 80BC     		pop	{r7}
 1535              		.cfi_restore 7
 1536              		.cfi_def_cfa_offset 0
 1537 0016 7047     		bx	lr
 1538              	.L96:
 1539              		.align	2
 1540              	.L95:
 1541 0018 80E100E0 		.word	-536813184
 1542              		.cfi_endproc
 1543              	.LFE22:
 1544              		.size	SPIS_DisableInt, .-SPIS_DisableInt
 1545              		.section	.text.SPIS_SetInterruptMode,"ax",%progbits
 1546              		.align	2
 1547              		.global	SPIS_SetInterruptMode
 1548              		.thumb
 1549              		.thumb_func
 1550              		.type	SPIS_SetInterruptMode, %function
 1551              	SPIS_SetInterruptMode:
 1552              	.LFB23:
1171:Generated_Source\PSoC5/SPIS.c **** 
1172:Generated_Source\PSoC5/SPIS.c **** 
1173:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1174:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetInterruptMode
1175:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1176:Generated_Source\PSoC5/SPIS.c **** *
1177:Generated_Source\PSoC5/SPIS.c **** * Summary:
1178:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:Generated_Source\PSoC5/SPIS.c **** *
1180:Generated_Source\PSoC5/SPIS.c **** * Parameters:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 49


1181:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:Generated_Source\PSoC5/SPIS.c **** *  header file).
1183:Generated_Source\PSoC5/SPIS.c **** *
1184:Generated_Source\PSoC5/SPIS.c **** * Return:
1185:Generated_Source\PSoC5/SPIS.c **** *  None.
1186:Generated_Source\PSoC5/SPIS.c **** *
1187:Generated_Source\PSoC5/SPIS.c **** * Theory:
1188:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:Generated_Source\PSoC5/SPIS.c **** *
1190:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1191:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetInterruptMode(uint8 intSrc) 
1192:Generated_Source\PSoC5/SPIS.c **** {
 1553              		.loc 1 1192 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 8
 1556              		@ frame_needed = 1, uses_anonymous_args = 0
 1557              		@ link register save eliminated.
 1558 0000 80B4     		push	{r7}
 1559              		.cfi_def_cfa_offset 4
 1560              		.cfi_offset 7, -4
 1561 0002 83B0     		sub	sp, sp, #12
 1562              		.cfi_def_cfa_offset 16
 1563 0004 00AF     		add	r7, sp, #0
 1564              		.cfi_def_cfa_register 7
 1565 0006 0346     		mov	r3, r0
 1566 0008 FB71     		strb	r3, [r7, #7]
1193:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 1567              		.loc 1 1193 0
 1568 000a 054A     		ldr	r2, .L98
 1569 000c FB79     		ldrb	r3, [r7, #7]
 1570 000e 1370     		strb	r3, [r2]
1194:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 1571              		.loc 1 1194 0
 1572 0010 044A     		ldr	r2, .L98+4
 1573 0012 FB79     		ldrb	r3, [r7, #7]
 1574 0014 1370     		strb	r3, [r2]
1195:Generated_Source\PSoC5/SPIS.c **** }
 1575              		.loc 1 1195 0
 1576 0016 00BF     		nop
 1577 0018 0C37     		adds	r7, r7, #12
 1578              		.cfi_def_cfa_offset 4
 1579 001a BD46     		mov	sp, r7
 1580              		.cfi_def_cfa_register 13
 1581              		@ sp needed
 1582 001c 80BC     		pop	{r7}
 1583              		.cfi_restore 7
 1584              		.cfi_def_cfa_offset 0
 1585 001e 7047     		bx	lr
 1586              	.L99:
 1587              		.align	2
 1588              	.L98:
 1589 0020 82640040 		.word	1073767554
 1590 0024 84650040 		.word	1073767812
 1591              		.cfi_endproc
 1592              	.LFE23:
 1593              		.size	SPIS_SetInterruptMode, .-SPIS_SetInterruptMode
 1594              		.section	.text.SPIS_ReadStatus,"ax",%progbits
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 50


 1595              		.align	2
 1596              		.global	SPIS_ReadStatus
 1597              		.thumb
 1598              		.thumb_func
 1599              		.type	SPIS_ReadStatus, %function
 1600              	SPIS_ReadStatus:
 1601              	.LFB24:
1196:Generated_Source\PSoC5/SPIS.c **** 
1197:Generated_Source\PSoC5/SPIS.c **** 
1198:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1199:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadStatus
1200:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1201:Generated_Source\PSoC5/SPIS.c **** *
1202:Generated_Source\PSoC5/SPIS.c **** * Summary:
1203:Generated_Source\PSoC5/SPIS.c **** *  Read the status register for the component.
1204:Generated_Source\PSoC5/SPIS.c **** *
1205:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1206:Generated_Source\PSoC5/SPIS.c **** *  None.
1207:Generated_Source\PSoC5/SPIS.c **** *
1208:Generated_Source\PSoC5/SPIS.c **** * Return:
1209:Generated_Source\PSoC5/SPIS.c **** *  Contents of the status register.
1210:Generated_Source\PSoC5/SPIS.c **** *
1211:Generated_Source\PSoC5/SPIS.c **** * Global variables:
1212:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatus - used to store in software status register,
1213:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
1214:Generated_Source\PSoC5/SPIS.c **** *
1215:Generated_Source\PSoC5/SPIS.c **** * Theory:
1216:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:Generated_Source\PSoC5/SPIS.c **** *  and flow control.
1218:Generated_Source\PSoC5/SPIS.c **** *
1219:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1220:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1221:Generated_Source\PSoC5/SPIS.c **** *
1222:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1223:Generated_Source\PSoC5/SPIS.c **** *  No.
1224:Generated_Source\PSoC5/SPIS.c **** *
1225:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1226:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadStatus(void) 
1227:Generated_Source\PSoC5/SPIS.c **** {
 1602              		.loc 1 1227 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 8
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606 0000 80B5     		push	{r7, lr}
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 7, -8
 1609              		.cfi_offset 14, -4
 1610 0002 82B0     		sub	sp, sp, #8
 1611              		.cfi_def_cfa_offset 16
 1612 0004 00AF     		add	r7, sp, #0
 1613              		.cfi_def_cfa_register 7
1228:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
1229:Generated_Source\PSoC5/SPIS.c **** 
1230:Generated_Source\PSoC5/SPIS.c ****     #if ((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED))
1231:Generated_Source\PSoC5/SPIS.c **** 
1232:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableInt();
 1614              		.loc 1 1232 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 51


 1615 0006 FFF7FEFF 		bl	SPIS_DisableInt
1233:Generated_Source\PSoC5/SPIS.c **** 
1234:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx) |
 1616              		.loc 1 1234 0
 1617 000a 154B     		ldr	r3, .L102
 1618 000c 1B78     		ldrb	r3, [r3]
 1619 000e DAB2     		uxtb	r2, r3
 1620 0010 144B     		ldr	r3, .L102+4
 1621 0012 1B78     		ldrb	r3, [r3]
 1622 0014 DBB2     		uxtb	r3, r3
 1623 0016 03F06103 		and	r3, r3, #97
 1624 001a DBB2     		uxtb	r3, r3
 1625 001c 1343     		orrs	r3, r3, r2
 1626 001e DBB2     		uxtb	r3, r3
 1627 0020 5AB2     		sxtb	r2, r3
1235:Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
 1628              		.loc 1 1235 0
 1629 0022 114B     		ldr	r3, .L102+8
 1630 0024 1B78     		ldrb	r3, [r3]
 1631 0026 D9B2     		uxtb	r1, r3
 1632 0028 104B     		ldr	r3, .L102+12
 1633 002a 1B78     		ldrb	r3, [r3]
 1634 002c DBB2     		uxtb	r3, r3
 1635 002e 03F06103 		and	r3, r3, #97
 1636 0032 DBB2     		uxtb	r3, r3
 1637 0034 0B43     		orrs	r3, r3, r1
 1638 0036 DBB2     		uxtb	r3, r3
1234:Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
 1639              		.loc 1 1234 0
 1640 0038 5BB2     		sxtb	r3, r3
 1641 003a 23F04003 		bic	r3, r3, #64
 1642 003e 5BB2     		sxtb	r3, r3
 1643 0040 1343     		orrs	r3, r3, r2
 1644 0042 5BB2     		sxtb	r3, r3
 1645 0044 FB71     		strb	r3, [r7, #7]
1236:Generated_Source\PSoC5/SPIS.c **** 
1237:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 1646              		.loc 1 1237 0
 1647 0046 074B     		ldr	r3, .L102+4
 1648 0048 0022     		movs	r2, #0
 1649 004a 1A70     		strb	r2, [r3]
1238:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 1650              		.loc 1 1238 0
 1651 004c 074B     		ldr	r3, .L102+12
 1652 004e 0022     		movs	r2, #0
 1653 0050 1A70     		strb	r2, [r3]
1239:Generated_Source\PSoC5/SPIS.c **** 
1240:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
1241:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableInt();
 1654              		.loc 1 1241 0
 1655 0052 FFF7FEFF 		bl	SPIS_EnableInt
1242:Generated_Source\PSoC5/SPIS.c **** 
1243:Generated_Source\PSoC5/SPIS.c ****     #else /* !((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:Generated_Source\PSoC5/SPIS.c **** 
1245:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG | (SPIS_RX_STATUS_REG &
1246:Generated_Source\PSoC5/SPIS.c ****                                                       (uint8)~SPIS_STS_RX_FIFO_FULL);
1247:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 52


1248:Generated_Source\PSoC5/SPIS.c ****     #endif /* (SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:Generated_Source\PSoC5/SPIS.c **** 
1250:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 1656              		.loc 1 1250 0
 1657 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1251:Generated_Source\PSoC5/SPIS.c **** }
 1658              		.loc 1 1251 0
 1659 0058 1846     		mov	r0, r3
 1660 005a 0837     		adds	r7, r7, #8
 1661              		.cfi_def_cfa_offset 8
 1662 005c BD46     		mov	sp, r7
 1663              		.cfi_def_cfa_register 13
 1664              		@ sp needed
 1665 005e 80BD     		pop	{r7, pc}
 1666              	.L103:
 1667              		.align	2
 1668              	.L102:
 1669 0060 62640040 		.word	1073767522
 1670 0064 00000000 		.word	SPIS_swStatusTx
 1671 0068 64650040 		.word	1073767780
 1672 006c 00000000 		.word	SPIS_swStatusRx
 1673              		.cfi_endproc
 1674              	.LFE24:
 1675              		.size	SPIS_ReadStatus, .-SPIS_ReadStatus
 1676              		.text
 1677              	.Letext0:
 1678              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1679              		.section	.debug_info,"",%progbits
 1680              	.Ldebug_info0:
 1681 0000 F4040000 		.4byte	0x4f4
 1682 0004 0400     		.2byte	0x4
 1683 0006 00000000 		.4byte	.Ldebug_abbrev0
 1684 000a 04       		.byte	0x4
 1685 000b 01       		.uleb128 0x1
 1686 000c 66000000 		.4byte	.LASF66
 1687 0010 0C       		.byte	0xc
 1688 0011 60030000 		.4byte	.LASF67
 1689 0015 8C010000 		.4byte	.LASF68
 1690 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1691 001d 00000000 		.4byte	0
 1692 0021 00000000 		.4byte	.Ldebug_line0
 1693 0025 02       		.uleb128 0x2
 1694 0026 01       		.byte	0x1
 1695 0027 06       		.byte	0x6
 1696 0028 36010000 		.4byte	.LASF0
 1697 002c 02       		.uleb128 0x2
 1698 002d 01       		.byte	0x1
 1699 002e 08       		.byte	0x8
 1700 002f 52030000 		.4byte	.LASF1
 1701 0033 02       		.uleb128 0x2
 1702 0034 02       		.byte	0x2
 1703 0035 05       		.byte	0x5
 1704 0036 8E030000 		.4byte	.LASF2
 1705 003a 02       		.uleb128 0x2
 1706 003b 02       		.byte	0x2
 1707 003c 07       		.byte	0x7
 1708 003d 2D020000 		.4byte	.LASF3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 53


 1709 0041 02       		.uleb128 0x2
 1710 0042 04       		.byte	0x4
 1711 0043 05       		.byte	0x5
 1712 0044 54010000 		.4byte	.LASF4
 1713 0048 02       		.uleb128 0x2
 1714 0049 04       		.byte	0x4
 1715 004a 07       		.byte	0x7
 1716 004b 16020000 		.4byte	.LASF5
 1717 004f 02       		.uleb128 0x2
 1718 0050 08       		.byte	0x8
 1719 0051 05       		.byte	0x5
 1720 0052 28010000 		.4byte	.LASF6
 1721 0056 02       		.uleb128 0x2
 1722 0057 08       		.byte	0x8
 1723 0058 07       		.byte	0x7
 1724 0059 F4000000 		.4byte	.LASF7
 1725 005d 03       		.uleb128 0x3
 1726 005e 04       		.byte	0x4
 1727 005f 05       		.byte	0x5
 1728 0060 696E7400 		.ascii	"int\000"
 1729 0064 02       		.uleb128 0x2
 1730 0065 04       		.byte	0x4
 1731 0066 07       		.byte	0x7
 1732 0067 F9010000 		.4byte	.LASF8
 1733 006b 04       		.uleb128 0x4
 1734 006c 7F010000 		.4byte	.LASF9
 1735 0070 02       		.byte	0x2
 1736 0071 9201     		.2byte	0x192
 1737 0073 2C000000 		.4byte	0x2c
 1738 0077 04       		.uleb128 0x4
 1739 0078 CB010000 		.4byte	.LASF10
 1740 007c 02       		.byte	0x2
 1741 007d 9401     		.2byte	0x194
 1742 007f 48000000 		.4byte	0x48
 1743 0083 02       		.uleb128 0x2
 1744 0084 04       		.byte	0x4
 1745 0085 04       		.byte	0x4
 1746 0086 1C030000 		.4byte	.LASF11
 1747 008a 02       		.uleb128 0x2
 1748 008b 08       		.byte	0x8
 1749 008c 04       		.byte	0x4
 1750 008d 85010000 		.4byte	.LASF12
 1751 0091 02       		.uleb128 0x2
 1752 0092 01       		.byte	0x1
 1753 0093 08       		.byte	0x8
 1754 0094 CC030000 		.4byte	.LASF13
 1755 0098 04       		.uleb128 0x4
 1756 0099 3C030000 		.4byte	.LASF14
 1757 009d 02       		.byte	0x2
 1758 009e 3C02     		.2byte	0x23c
 1759 00a0 A4000000 		.4byte	0xa4
 1760 00a4 05       		.uleb128 0x5
 1761 00a5 6B000000 		.4byte	0x6b
 1762 00a9 04       		.uleb128 0x4
 1763 00aa B8020000 		.4byte	.LASF15
 1764 00ae 02       		.byte	0x2
 1765 00af 3E02     		.2byte	0x23e
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 54


 1766 00b1 B5000000 		.4byte	0xb5
 1767 00b5 05       		.uleb128 0x5
 1768 00b6 77000000 		.4byte	0x77
 1769 00ba 02       		.uleb128 0x2
 1770 00bb 08       		.byte	0x8
 1771 00bc 04       		.byte	0x4
 1772 00bd F5020000 		.4byte	.LASF16
 1773 00c1 02       		.uleb128 0x2
 1774 00c2 04       		.byte	0x4
 1775 00c3 07       		.byte	0x7
 1776 00c4 EC020000 		.4byte	.LASF17
 1777 00c8 06       		.uleb128 0x6
 1778 00c9 00000000 		.4byte	.LASF18
 1779 00cd 01       		.byte	0x1
 1780 00ce 43       		.byte	0x43
 1781 00cf 00000000 		.4byte	.LFB0
 1782 00d3 A8000000 		.4byte	.LFE0-.LFB0
 1783 00d7 01       		.uleb128 0x1
 1784 00d8 9C       		.byte	0x9c
 1785 00d9 07       		.uleb128 0x7
 1786 00da BF010000 		.4byte	.LASF20
 1787 00de 01       		.byte	0x1
 1788 00df 8E       		.byte	0x8e
 1789 00e0 00000000 		.4byte	.LFB1
 1790 00e4 6C000000 		.4byte	.LFE1-.LFB1
 1791 00e8 01       		.uleb128 0x1
 1792 00e9 9C       		.byte	0x9c
 1793 00ea FD000000 		.4byte	0xfd
 1794 00ee 08       		.uleb128 0x8
 1795 00ef 25040000 		.4byte	.LASF22
 1796 00f3 01       		.byte	0x1
 1797 00f4 90       		.byte	0x90
 1798 00f5 6B000000 		.4byte	0x6b
 1799 00f9 02       		.uleb128 0x2
 1800 00fa 91       		.byte	0x91
 1801 00fb 77       		.sleb128 -9
 1802 00fc 00       		.byte	0
 1803 00fd 06       		.uleb128 0x6
 1804 00fe A2030000 		.4byte	.LASF19
 1805 0102 01       		.byte	0x1
 1806 0103 BB       		.byte	0xbb
 1807 0104 00000000 		.4byte	.LFB2
 1808 0108 24000000 		.4byte	.LFE2-.LFB2
 1809 010c 01       		.uleb128 0x1
 1810 010d 9C       		.byte	0x9c
 1811 010e 07       		.uleb128 0x7
 1812 010f 22030000 		.4byte	.LASF21
 1813 0113 01       		.byte	0x1
 1814 0114 D8       		.byte	0xd8
 1815 0115 00000000 		.4byte	.LFB3
 1816 0119 58000000 		.4byte	.LFE3-.LFB3
 1817 011d 01       		.uleb128 0x1
 1818 011e 9C       		.byte	0x9c
 1819 011f 32010000 		.4byte	0x132
 1820 0123 08       		.uleb128 0x8
 1821 0124 25040000 		.4byte	.LASF22
 1822 0128 01       		.byte	0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 55


 1823 0129 DA       		.byte	0xda
 1824 012a 6B000000 		.4byte	0x6b
 1825 012e 02       		.uleb128 0x2
 1826 012f 91       		.byte	0x91
 1827 0130 77       		.sleb128 -9
 1828 0131 00       		.byte	0
 1829 0132 09       		.uleb128 0x9
 1830 0133 36040000 		.4byte	.LASF23
 1831 0137 01       		.byte	0x1
 1832 0138 FD       		.byte	0xfd
 1833 0139 00000000 		.4byte	.LFB4
 1834 013d 18000000 		.4byte	.LFE4-.LFB4
 1835 0141 01       		.uleb128 0x1
 1836 0142 9C       		.byte	0x9c
 1837 0143 0A       		.uleb128 0xa
 1838 0144 41030000 		.4byte	.LASF24
 1839 0148 01       		.byte	0x1
 1840 0149 1601     		.2byte	0x116
 1841 014b 00000000 		.4byte	.LFB5
 1842 014f 18000000 		.4byte	.LFE5-.LFB5
 1843 0153 01       		.uleb128 0x1
 1844 0154 9C       		.byte	0x9c
 1845 0155 0A       		.uleb128 0xa
 1846 0156 A6020000 		.4byte	.LASF25
 1847 015a 01       		.byte	0x1
 1848 015b 2F01     		.2byte	0x12f
 1849 015d 00000000 		.4byte	.LFB6
 1850 0161 18000000 		.4byte	.LFE6-.LFB6
 1851 0165 01       		.uleb128 0x1
 1852 0166 9C       		.byte	0x9c
 1853 0167 0A       		.uleb128 0xa
 1854 0168 6D010000 		.4byte	.LASF26
 1855 016c 01       		.byte	0x1
 1856 016d 4801     		.2byte	0x148
 1857 016f 00000000 		.4byte	.LFB7
 1858 0173 18000000 		.4byte	.LFE7-.LFB7
 1859 0177 01       		.uleb128 0x1
 1860 0178 9C       		.byte	0x9c
 1861 0179 0B       		.uleb128 0xb
 1862 017a 0A000000 		.4byte	.LASF27
 1863 017e 01       		.byte	0x1
 1864 017f 6201     		.2byte	0x162
 1865 0181 00000000 		.4byte	.LFB8
 1866 0185 20000000 		.4byte	.LFE8-.LFB8
 1867 0189 01       		.uleb128 0x1
 1868 018a 9C       		.byte	0x9c
 1869 018b 9F010000 		.4byte	0x19f
 1870 018f 0C       		.uleb128 0xc
 1871 0190 8D020000 		.4byte	.LASF29
 1872 0194 01       		.byte	0x1
 1873 0195 6201     		.2byte	0x162
 1874 0197 6B000000 		.4byte	0x6b
 1875 019b 02       		.uleb128 0x2
 1876 019c 91       		.byte	0x91
 1877 019d 77       		.sleb128 -9
 1878 019e 00       		.byte	0
 1879 019f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 56


 1880 01a0 AD030000 		.4byte	.LASF28
 1881 01a4 01       		.byte	0x1
 1882 01a5 7A01     		.2byte	0x17a
 1883 01a7 00000000 		.4byte	.LFB9
 1884 01ab 20000000 		.4byte	.LFE9-.LFB9
 1885 01af 01       		.uleb128 0x1
 1886 01b0 9C       		.byte	0x9c
 1887 01b1 C5010000 		.4byte	0x1c5
 1888 01b5 0C       		.uleb128 0xc
 1889 01b6 8D020000 		.4byte	.LASF29
 1890 01ba 01       		.byte	0x1
 1891 01bb 7A01     		.2byte	0x17a
 1892 01bd 6B000000 		.4byte	0x6b
 1893 01c1 02       		.uleb128 0x2
 1894 01c2 91       		.byte	0x91
 1895 01c3 77       		.sleb128 -9
 1896 01c4 00       		.byte	0
 1897 01c5 0D       		.uleb128 0xd
 1898 01c6 94020000 		.4byte	.LASF31
 1899 01ca 01       		.byte	0x1
 1900 01cb 9C01     		.2byte	0x19c
 1901 01cd 6B000000 		.4byte	0x6b
 1902 01d1 00000000 		.4byte	.LFB10
 1903 01d5 3C000000 		.4byte	.LFE10-.LFB10
 1904 01d9 01       		.uleb128 0x1
 1905 01da 9C       		.byte	0x9c
 1906 01db EF010000 		.4byte	0x1ef
 1907 01df 0E       		.uleb128 0xe
 1908 01e0 0B010000 		.4byte	.LASF30
 1909 01e4 01       		.byte	0x1
 1910 01e5 9E01     		.2byte	0x19e
 1911 01e7 6B000000 		.4byte	0x6b
 1912 01eb 02       		.uleb128 0x2
 1913 01ec 91       		.byte	0x91
 1914 01ed 77       		.sleb128 -9
 1915 01ee 00       		.byte	0
 1916 01ef 0D       		.uleb128 0xd
 1917 01f0 D1030000 		.4byte	.LASF32
 1918 01f4 01       		.byte	0x1
 1919 01f5 D101     		.2byte	0x1d1
 1920 01f7 6B000000 		.4byte	0x6b
 1921 01fb 00000000 		.4byte	.LFB11
 1922 01ff 3C000000 		.4byte	.LFE11-.LFB11
 1923 0203 01       		.uleb128 0x1
 1924 0204 9C       		.byte	0x9c
 1925 0205 19020000 		.4byte	0x219
 1926 0209 0E       		.uleb128 0xe
 1927 020a 0B010000 		.4byte	.LASF30
 1928 020e 01       		.byte	0x1
 1929 020f D301     		.2byte	0x1d3
 1930 0211 6B000000 		.4byte	0x6b
 1931 0215 02       		.uleb128 0x2
 1932 0216 91       		.byte	0x91
 1933 0217 77       		.sleb128 -9
 1934 0218 00       		.byte	0
 1935 0219 0F       		.uleb128 0xf
 1936 021a 49020000 		.4byte	.LASF33
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 57


 1937 021e 01       		.byte	0x1
 1938 021f 0C02     		.2byte	0x20c
 1939 0221 00000000 		.4byte	.LFB12
 1940 0225 10010000 		.4byte	.LFE12-.LFB12
 1941 0229 01       		.uleb128 0x1
 1942 022a 9C       		.byte	0x9c
 1943 022b 5D020000 		.4byte	0x25d
 1944 022f 0C       		.uleb128 0xc
 1945 0230 74040000 		.4byte	.LASF34
 1946 0234 01       		.byte	0x1
 1947 0235 0C02     		.2byte	0x20c
 1948 0237 6B000000 		.4byte	0x6b
 1949 023b 02       		.uleb128 0x2
 1950 023c 91       		.byte	0x91
 1951 023d 6F       		.sleb128 -17
 1952 023e 0E       		.uleb128 0xe
 1953 023f 11030000 		.4byte	.LASF35
 1954 0243 01       		.byte	0x1
 1955 0244 1002     		.2byte	0x210
 1956 0246 6B000000 		.4byte	0x6b
 1957 024a 02       		.uleb128 0x2
 1958 024b 91       		.byte	0x91
 1959 024c 76       		.sleb128 -10
 1960 024d 0E       		.uleb128 0xe
 1961 024e 5D010000 		.4byte	.LASF36
 1962 0252 01       		.byte	0x1
 1963 0253 1102     		.2byte	0x211
 1964 0255 6B000000 		.4byte	0x6b
 1965 0259 02       		.uleb128 0x2
 1966 025a 91       		.byte	0x91
 1967 025b 77       		.sleb128 -9
 1968 025c 00       		.byte	0
 1969 025d 0B       		.uleb128 0xb
 1970 025e D2010000 		.4byte	.LASF37
 1971 0262 01       		.byte	0x1
 1972 0263 6B02     		.2byte	0x26b
 1973 0265 00000000 		.4byte	.LFB13
 1974 0269 20000000 		.4byte	.LFE13-.LFB13
 1975 026d 01       		.uleb128 0x1
 1976 026e 9C       		.byte	0x9c
 1977 026f 83020000 		.4byte	0x283
 1978 0273 0C       		.uleb128 0xc
 1979 0274 47040000 		.4byte	.LASF38
 1980 0278 01       		.byte	0x1
 1981 0279 6B02     		.2byte	0x26b
 1982 027b 6B000000 		.4byte	0x6b
 1983 027f 02       		.uleb128 0x2
 1984 0280 91       		.byte	0x91
 1985 0281 77       		.sleb128 -9
 1986 0282 00       		.byte	0
 1987 0283 0D       		.uleb128 0xd
 1988 0284 01030000 		.4byte	.LASF39
 1989 0288 01       		.byte	0x1
 1990 0289 9502     		.2byte	0x295
 1991 028b 6B000000 		.4byte	0x6b
 1992 028f 00000000 		.4byte	.LFB14
 1993 0293 78000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 58


 1994 0297 01       		.uleb128 0x1
 1995 0298 9C       		.byte	0x9c
 1996 0299 AD020000 		.4byte	0x2ad
 1997 029d 0E       		.uleb128 0xe
 1998 029e C5030000 		.4byte	.LASF40
 1999 02a2 01       		.byte	0x1
 2000 02a3 9702     		.2byte	0x297
 2001 02a5 6B000000 		.4byte	0x6b
 2002 02a9 02       		.uleb128 0x2
 2003 02aa 91       		.byte	0x91
 2004 02ab 77       		.sleb128 -9
 2005 02ac 00       		.byte	0
 2006 02ad 0D       		.uleb128 0xd
 2007 02ae 51000000 		.4byte	.LASF41
 2008 02b2 01       		.byte	0x1
 2009 02b3 D702     		.2byte	0x2d7
 2010 02b5 6B000000 		.4byte	0x6b
 2011 02b9 00000000 		.4byte	.LFB15
 2012 02bd 6C000000 		.4byte	.LFE15-.LFB15
 2013 02c1 01       		.uleb128 0x1
 2014 02c2 9C       		.byte	0x9c
 2015 02c3 D7020000 		.4byte	0x2d7
 2016 02c7 0E       		.uleb128 0xe
 2017 02c8 28020000 		.4byte	.LASF42
 2018 02cc 01       		.byte	0x1
 2019 02cd D902     		.2byte	0x2d9
 2020 02cf 6B000000 		.4byte	0x6b
 2021 02d3 02       		.uleb128 0x2
 2022 02d4 91       		.byte	0x91
 2023 02d5 77       		.sleb128 -9
 2024 02d6 00       		.byte	0
 2025 02d7 0D       		.uleb128 0xd
 2026 02d8 E3030000 		.4byte	.LASF43
 2027 02dc 01       		.byte	0x1
 2028 02dd 1803     		.2byte	0x318
 2029 02df 6B000000 		.4byte	0x6b
 2030 02e3 00000000 		.4byte	.LFB16
 2031 02e7 6C000000 		.4byte	.LFE16-.LFB16
 2032 02eb 01       		.uleb128 0x1
 2033 02ec 9C       		.byte	0x9c
 2034 02ed 01030000 		.4byte	0x301
 2035 02f1 0E       		.uleb128 0xe
 2036 02f2 28020000 		.4byte	.LASF42
 2037 02f6 01       		.byte	0x1
 2038 02f7 1A03     		.2byte	0x31a
 2039 02f9 6B000000 		.4byte	0x6b
 2040 02fd 02       		.uleb128 0x2
 2041 02fe 91       		.byte	0x91
 2042 02ff 77       		.sleb128 -9
 2043 0300 00       		.byte	0
 2044 0301 10       		.uleb128 0x10
 2045 0302 15010000 		.4byte	.LASF44
 2046 0306 01       		.byte	0x1
 2047 0307 6A03     		.2byte	0x36a
 2048 0309 00000000 		.4byte	.LFB17
 2049 030d 4C000000 		.4byte	.LFE17-.LFB17
 2050 0311 01       		.uleb128 0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 59


 2051 0312 9C       		.byte	0x9c
 2052 0313 0F       		.uleb128 0xf
 2053 0314 D9020000 		.4byte	.LASF45
 2054 0318 01       		.byte	0x1
 2055 0319 A303     		.2byte	0x3a3
 2056 031b 00000000 		.4byte	.LFB18
 2057 031f 7C000000 		.4byte	.LFE18-.LFB18
 2058 0323 01       		.uleb128 0x1
 2059 0324 9C       		.byte	0x9c
 2060 0325 39030000 		.4byte	0x339
 2061 0329 0E       		.uleb128 0xe
 2062 032a 25040000 		.4byte	.LASF22
 2063 032e 01       		.byte	0x1
 2064 032f A503     		.2byte	0x3a5
 2065 0331 6B000000 		.4byte	0x6b
 2066 0335 02       		.uleb128 0x2
 2067 0336 91       		.byte	0x91
 2068 0337 77       		.sleb128 -9
 2069 0338 00       		.byte	0
 2070 0339 0F       		.uleb128 0xf
 2071 033a CB020000 		.4byte	.LASF46
 2072 033e 01       		.byte	0x1
 2073 033f 1704     		.2byte	0x417
 2074 0341 00000000 		.4byte	.LFB19
 2075 0345 3A000000 		.4byte	.LFE19-.LFB19
 2076 0349 01       		.uleb128 0x1
 2077 034a 9C       		.byte	0x9c
 2078 034b 7D030000 		.4byte	0x37d
 2079 034f 0C       		.uleb128 0xc
 2080 0350 F8030000 		.4byte	.LASF47
 2081 0354 01       		.byte	0x1
 2082 0355 1704     		.2byte	0x417
 2083 0357 7D030000 		.4byte	0x37d
 2084 035b 02       		.uleb128 0x2
 2085 035c 91       		.byte	0x91
 2086 035d 6C       		.sleb128 -20
 2087 035e 0C       		.uleb128 0xc
 2088 035f 98030000 		.4byte	.LASF48
 2089 0363 01       		.byte	0x1
 2090 0364 1704     		.2byte	0x417
 2091 0366 6B000000 		.4byte	0x6b
 2092 036a 02       		.uleb128 0x2
 2093 036b 91       		.byte	0x91
 2094 036c 6B       		.sleb128 -21
 2095 036d 0E       		.uleb128 0xe
 2096 036e 40020000 		.4byte	.LASF49
 2097 0372 01       		.byte	0x1
 2098 0373 1A04     		.2byte	0x41a
 2099 0375 6B000000 		.4byte	0x6b
 2100 0379 02       		.uleb128 0x2
 2101 037a 91       		.byte	0x91
 2102 037b 77       		.sleb128 -9
 2103 037c 00       		.byte	0
 2104 037d 11       		.uleb128 0x11
 2105 037e 04       		.byte	0x4
 2106 037f 83030000 		.4byte	0x383
 2107 0383 12       		.uleb128 0x12
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 60


 2108 0384 6B000000 		.4byte	0x6b
 2109 0388 0F       		.uleb128 0xf
 2110 0389 42000000 		.4byte	.LASF50
 2111 038d 01       		.byte	0x1
 2112 038e 3704     		.2byte	0x437
 2113 0390 00000000 		.4byte	.LFB20
 2114 0394 60000000 		.4byte	.LFE20-.LFB20
 2115 0398 01       		.uleb128 0x1
 2116 0399 9C       		.byte	0x9c
 2117 039a AE030000 		.4byte	0x3ae
 2118 039e 0E       		.uleb128 0xe
 2119 039f 25040000 		.4byte	.LASF22
 2120 03a3 01       		.byte	0x1
 2121 03a4 3904     		.2byte	0x439
 2122 03a6 6B000000 		.4byte	0x6b
 2123 03aa 02       		.uleb128 0x2
 2124 03ab 91       		.byte	0x91
 2125 03ac 77       		.sleb128 -9
 2126 03ad 00       		.byte	0
 2127 03ae 0A       		.uleb128 0xa
 2128 03af 65040000 		.4byte	.LASF51
 2129 03b3 01       		.byte	0x1
 2130 03b4 6C04     		.2byte	0x46c
 2131 03b6 00000000 		.4byte	.LFB21
 2132 03ba 1C000000 		.4byte	.LFE21-.LFB21
 2133 03be 01       		.uleb128 0x1
 2134 03bf 9C       		.byte	0x9c
 2135 03c0 0A       		.uleb128 0xa
 2136 03c1 15040000 		.4byte	.LASF52
 2137 03c5 01       		.byte	0x1
 2138 03c6 8904     		.2byte	0x489
 2139 03c8 00000000 		.4byte	.LFB22
 2140 03cc 1C000000 		.4byte	.LFE22-.LFB22
 2141 03d0 01       		.uleb128 0x1
 2142 03d1 9C       		.byte	0x9c
 2143 03d2 0B       		.uleb128 0xb
 2144 03d3 FF030000 		.4byte	.LASF53
 2145 03d7 01       		.byte	0x1
 2146 03d8 A704     		.2byte	0x4a7
 2147 03da 00000000 		.4byte	.LFB23
 2148 03de 28000000 		.4byte	.LFE23-.LFB23
 2149 03e2 01       		.uleb128 0x1
 2150 03e3 9C       		.byte	0x9c
 2151 03e4 F8030000 		.4byte	0x3f8
 2152 03e8 0C       		.uleb128 0xc
 2153 03e9 8D020000 		.4byte	.LASF29
 2154 03ed 01       		.byte	0x1
 2155 03ee A704     		.2byte	0x4a7
 2156 03f0 6B000000 		.4byte	0x6b
 2157 03f4 02       		.uleb128 0x2
 2158 03f5 91       		.byte	0x91
 2159 03f6 77       		.sleb128 -9
 2160 03f7 00       		.byte	0
 2161 03f8 0D       		.uleb128 0xd
 2162 03f9 7E030000 		.4byte	.LASF54
 2163 03fd 01       		.byte	0x1
 2164 03fe CA04     		.2byte	0x4ca
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 61


 2165 0400 6B000000 		.4byte	0x6b
 2166 0404 00000000 		.4byte	.LFB24
 2167 0408 70000000 		.4byte	.LFE24-.LFB24
 2168 040c 01       		.uleb128 0x1
 2169 040d 9C       		.byte	0x9c
 2170 040e 22040000 		.4byte	0x422
 2171 0412 0E       		.uleb128 0xe
 2172 0413 0B010000 		.4byte	.LASF30
 2173 0417 01       		.byte	0x1
 2174 0418 CC04     		.2byte	0x4cc
 2175 041a 6B000000 		.4byte	0x6b
 2176 041e 02       		.uleb128 0x2
 2177 041f 91       		.byte	0x91
 2178 0420 77       		.sleb128 -9
 2179 0421 00       		.byte	0
 2180 0422 13       		.uleb128 0x13
 2181 0423 BE020000 		.4byte	.LASF55
 2182 0427 01       		.byte	0x1
 2183 0428 26       		.byte	0x26
 2184 0429 6B000000 		.4byte	0x6b
 2185 042d 05       		.uleb128 0x5
 2186 042e 03       		.byte	0x3
 2187 042f 00000000 		.4byte	SPIS_initVar
 2188 0433 13       		.uleb128 0x13
 2189 0434 2C030000 		.4byte	.LASF56
 2190 0438 01       		.byte	0x1
 2191 0439 28       		.byte	0x28
 2192 043a A4000000 		.4byte	0xa4
 2193 043e 05       		.uleb128 0x5
 2194 043f 03       		.byte	0x3
 2195 0440 00000000 		.4byte	SPIS_swStatusTx
 2196 0444 13       		.uleb128 0x13
 2197 0445 06020000 		.4byte	.LASF57
 2198 0449 01       		.byte	0x1
 2199 044a 29       		.byte	0x29
 2200 044b A4000000 		.4byte	0xa4
 2201 044f 05       		.uleb128 0x5
 2202 0450 03       		.byte	0x3
 2203 0451 00000000 		.4byte	SPIS_swStatusRx
 2204 0455 14       		.uleb128 0x14
 2205 0456 A4000000 		.4byte	0xa4
 2206 045a 65040000 		.4byte	0x465
 2207 045e 15       		.uleb128 0x15
 2208 045f C1000000 		.4byte	0xc1
 2209 0463 1F       		.byte	0x1f
 2210 0464 00       		.byte	0
 2211 0465 13       		.uleb128 0x13
 2212 0466 22000000 		.4byte	.LASF58
 2213 046a 01       		.byte	0x1
 2214 046b 1F       		.byte	0x1f
 2215 046c 76040000 		.4byte	0x476
 2216 0470 05       		.uleb128 0x5
 2217 0471 03       		.byte	0x3
 2218 0472 00000000 		.4byte	SPIS_rxBuffer
 2219 0476 05       		.uleb128 0x5
 2220 0477 55040000 		.4byte	0x455
 2221 047b 13       		.uleb128 0x13
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 62


 2222 047c 6D020000 		.4byte	.LASF59
 2223 0480 01       		.byte	0x1
 2224 0481 20       		.byte	0x20
 2225 0482 A4000000 		.4byte	0xa4
 2226 0486 05       		.uleb128 0x5
 2227 0487 03       		.byte	0x3
 2228 0488 00000000 		.4byte	SPIS_rxBufferRead
 2229 048c 13       		.uleb128 0x13
 2230 048d 5A020000 		.4byte	.LASF60
 2231 0491 01       		.byte	0x1
 2232 0492 21       		.byte	0x21
 2233 0493 A4000000 		.4byte	0xa4
 2234 0497 05       		.uleb128 0x5
 2235 0498 03       		.byte	0x3
 2236 0499 00000000 		.4byte	SPIS_rxBufferWrite
 2237 049d 13       		.uleb128 0x13
 2238 049e E7010000 		.4byte	.LASF61
 2239 04a2 01       		.byte	0x1
 2240 04a3 22       		.byte	0x22
 2241 04a4 A4000000 		.4byte	0xa4
 2242 04a8 05       		.uleb128 0x5
 2243 04a9 03       		.byte	0x3
 2244 04aa 00000000 		.4byte	SPIS_rxBufferFull
 2245 04ae 13       		.uleb128 0x13
 2246 04af 7F020000 		.4byte	.LASF62
 2247 04b3 01       		.byte	0x1
 2248 04b4 16       		.byte	0x16
 2249 04b5 BF040000 		.4byte	0x4bf
 2250 04b9 05       		.uleb128 0x5
 2251 04ba 03       		.byte	0x3
 2252 04bb 00000000 		.4byte	SPIS_txBuffer
 2253 04bf 05       		.uleb128 0x5
 2254 04c0 55040000 		.4byte	0x455
 2255 04c4 13       		.uleb128 0x13
 2256 04c5 42010000 		.4byte	.LASF63
 2257 04c9 01       		.byte	0x1
 2258 04ca 17       		.byte	0x17
 2259 04cb A4000000 		.4byte	0xa4
 2260 04cf 05       		.uleb128 0x5
 2261 04d0 03       		.byte	0x3
 2262 04d1 00000000 		.4byte	SPIS_txBufferRead
 2263 04d5 13       		.uleb128 0x13
 2264 04d6 52040000 		.4byte	.LASF64
 2265 04da 01       		.byte	0x1
 2266 04db 18       		.byte	0x18
 2267 04dc A4000000 		.4byte	0xa4
 2268 04e0 05       		.uleb128 0x5
 2269 04e1 03       		.byte	0x3
 2270 04e2 00000000 		.4byte	SPIS_txBufferWrite
 2271 04e6 13       		.uleb128 0x13
 2272 04e7 30000000 		.4byte	.LASF65
 2273 04eb 01       		.byte	0x1
 2274 04ec 19       		.byte	0x19
 2275 04ed A4000000 		.4byte	0xa4
 2276 04f1 05       		.uleb128 0x5
 2277 04f2 03       		.byte	0x3
 2278 04f3 00000000 		.4byte	SPIS_txBufferFull
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 63


 2279 04f7 00       		.byte	0
 2280              		.section	.debug_abbrev,"",%progbits
 2281              	.Ldebug_abbrev0:
 2282 0000 01       		.uleb128 0x1
 2283 0001 11       		.uleb128 0x11
 2284 0002 01       		.byte	0x1
 2285 0003 25       		.uleb128 0x25
 2286 0004 0E       		.uleb128 0xe
 2287 0005 13       		.uleb128 0x13
 2288 0006 0B       		.uleb128 0xb
 2289 0007 03       		.uleb128 0x3
 2290 0008 0E       		.uleb128 0xe
 2291 0009 1B       		.uleb128 0x1b
 2292 000a 0E       		.uleb128 0xe
 2293 000b 55       		.uleb128 0x55
 2294 000c 17       		.uleb128 0x17
 2295 000d 11       		.uleb128 0x11
 2296 000e 01       		.uleb128 0x1
 2297 000f 10       		.uleb128 0x10
 2298 0010 17       		.uleb128 0x17
 2299 0011 00       		.byte	0
 2300 0012 00       		.byte	0
 2301 0013 02       		.uleb128 0x2
 2302 0014 24       		.uleb128 0x24
 2303 0015 00       		.byte	0
 2304 0016 0B       		.uleb128 0xb
 2305 0017 0B       		.uleb128 0xb
 2306 0018 3E       		.uleb128 0x3e
 2307 0019 0B       		.uleb128 0xb
 2308 001a 03       		.uleb128 0x3
 2309 001b 0E       		.uleb128 0xe
 2310 001c 00       		.byte	0
 2311 001d 00       		.byte	0
 2312 001e 03       		.uleb128 0x3
 2313 001f 24       		.uleb128 0x24
 2314 0020 00       		.byte	0
 2315 0021 0B       		.uleb128 0xb
 2316 0022 0B       		.uleb128 0xb
 2317 0023 3E       		.uleb128 0x3e
 2318 0024 0B       		.uleb128 0xb
 2319 0025 03       		.uleb128 0x3
 2320 0026 08       		.uleb128 0x8
 2321 0027 00       		.byte	0
 2322 0028 00       		.byte	0
 2323 0029 04       		.uleb128 0x4
 2324 002a 16       		.uleb128 0x16
 2325 002b 00       		.byte	0
 2326 002c 03       		.uleb128 0x3
 2327 002d 0E       		.uleb128 0xe
 2328 002e 3A       		.uleb128 0x3a
 2329 002f 0B       		.uleb128 0xb
 2330 0030 3B       		.uleb128 0x3b
 2331 0031 05       		.uleb128 0x5
 2332 0032 49       		.uleb128 0x49
 2333 0033 13       		.uleb128 0x13
 2334 0034 00       		.byte	0
 2335 0035 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 64


 2336 0036 05       		.uleb128 0x5
 2337 0037 35       		.uleb128 0x35
 2338 0038 00       		.byte	0
 2339 0039 49       		.uleb128 0x49
 2340 003a 13       		.uleb128 0x13
 2341 003b 00       		.byte	0
 2342 003c 00       		.byte	0
 2343 003d 06       		.uleb128 0x6
 2344 003e 2E       		.uleb128 0x2e
 2345 003f 00       		.byte	0
 2346 0040 3F       		.uleb128 0x3f
 2347 0041 19       		.uleb128 0x19
 2348 0042 03       		.uleb128 0x3
 2349 0043 0E       		.uleb128 0xe
 2350 0044 3A       		.uleb128 0x3a
 2351 0045 0B       		.uleb128 0xb
 2352 0046 3B       		.uleb128 0x3b
 2353 0047 0B       		.uleb128 0xb
 2354 0048 27       		.uleb128 0x27
 2355 0049 19       		.uleb128 0x19
 2356 004a 11       		.uleb128 0x11
 2357 004b 01       		.uleb128 0x1
 2358 004c 12       		.uleb128 0x12
 2359 004d 06       		.uleb128 0x6
 2360 004e 40       		.uleb128 0x40
 2361 004f 18       		.uleb128 0x18
 2362 0050 9642     		.uleb128 0x2116
 2363 0052 19       		.uleb128 0x19
 2364 0053 00       		.byte	0
 2365 0054 00       		.byte	0
 2366 0055 07       		.uleb128 0x7
 2367 0056 2E       		.uleb128 0x2e
 2368 0057 01       		.byte	0x1
 2369 0058 3F       		.uleb128 0x3f
 2370 0059 19       		.uleb128 0x19
 2371 005a 03       		.uleb128 0x3
 2372 005b 0E       		.uleb128 0xe
 2373 005c 3A       		.uleb128 0x3a
 2374 005d 0B       		.uleb128 0xb
 2375 005e 3B       		.uleb128 0x3b
 2376 005f 0B       		.uleb128 0xb
 2377 0060 27       		.uleb128 0x27
 2378 0061 19       		.uleb128 0x19
 2379 0062 11       		.uleb128 0x11
 2380 0063 01       		.uleb128 0x1
 2381 0064 12       		.uleb128 0x12
 2382 0065 06       		.uleb128 0x6
 2383 0066 40       		.uleb128 0x40
 2384 0067 18       		.uleb128 0x18
 2385 0068 9642     		.uleb128 0x2116
 2386 006a 19       		.uleb128 0x19
 2387 006b 01       		.uleb128 0x1
 2388 006c 13       		.uleb128 0x13
 2389 006d 00       		.byte	0
 2390 006e 00       		.byte	0
 2391 006f 08       		.uleb128 0x8
 2392 0070 34       		.uleb128 0x34
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 65


 2393 0071 00       		.byte	0
 2394 0072 03       		.uleb128 0x3
 2395 0073 0E       		.uleb128 0xe
 2396 0074 3A       		.uleb128 0x3a
 2397 0075 0B       		.uleb128 0xb
 2398 0076 3B       		.uleb128 0x3b
 2399 0077 0B       		.uleb128 0xb
 2400 0078 49       		.uleb128 0x49
 2401 0079 13       		.uleb128 0x13
 2402 007a 02       		.uleb128 0x2
 2403 007b 18       		.uleb128 0x18
 2404 007c 00       		.byte	0
 2405 007d 00       		.byte	0
 2406 007e 09       		.uleb128 0x9
 2407 007f 2E       		.uleb128 0x2e
 2408 0080 00       		.byte	0
 2409 0081 3F       		.uleb128 0x3f
 2410 0082 19       		.uleb128 0x19
 2411 0083 03       		.uleb128 0x3
 2412 0084 0E       		.uleb128 0xe
 2413 0085 3A       		.uleb128 0x3a
 2414 0086 0B       		.uleb128 0xb
 2415 0087 3B       		.uleb128 0x3b
 2416 0088 0B       		.uleb128 0xb
 2417 0089 27       		.uleb128 0x27
 2418 008a 19       		.uleb128 0x19
 2419 008b 11       		.uleb128 0x11
 2420 008c 01       		.uleb128 0x1
 2421 008d 12       		.uleb128 0x12
 2422 008e 06       		.uleb128 0x6
 2423 008f 40       		.uleb128 0x40
 2424 0090 18       		.uleb128 0x18
 2425 0091 9742     		.uleb128 0x2117
 2426 0093 19       		.uleb128 0x19
 2427 0094 00       		.byte	0
 2428 0095 00       		.byte	0
 2429 0096 0A       		.uleb128 0xa
 2430 0097 2E       		.uleb128 0x2e
 2431 0098 00       		.byte	0
 2432 0099 3F       		.uleb128 0x3f
 2433 009a 19       		.uleb128 0x19
 2434 009b 03       		.uleb128 0x3
 2435 009c 0E       		.uleb128 0xe
 2436 009d 3A       		.uleb128 0x3a
 2437 009e 0B       		.uleb128 0xb
 2438 009f 3B       		.uleb128 0x3b
 2439 00a0 05       		.uleb128 0x5
 2440 00a1 27       		.uleb128 0x27
 2441 00a2 19       		.uleb128 0x19
 2442 00a3 11       		.uleb128 0x11
 2443 00a4 01       		.uleb128 0x1
 2444 00a5 12       		.uleb128 0x12
 2445 00a6 06       		.uleb128 0x6
 2446 00a7 40       		.uleb128 0x40
 2447 00a8 18       		.uleb128 0x18
 2448 00a9 9742     		.uleb128 0x2117
 2449 00ab 19       		.uleb128 0x19
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 66


 2450 00ac 00       		.byte	0
 2451 00ad 00       		.byte	0
 2452 00ae 0B       		.uleb128 0xb
 2453 00af 2E       		.uleb128 0x2e
 2454 00b0 01       		.byte	0x1
 2455 00b1 3F       		.uleb128 0x3f
 2456 00b2 19       		.uleb128 0x19
 2457 00b3 03       		.uleb128 0x3
 2458 00b4 0E       		.uleb128 0xe
 2459 00b5 3A       		.uleb128 0x3a
 2460 00b6 0B       		.uleb128 0xb
 2461 00b7 3B       		.uleb128 0x3b
 2462 00b8 05       		.uleb128 0x5
 2463 00b9 27       		.uleb128 0x27
 2464 00ba 19       		.uleb128 0x19
 2465 00bb 11       		.uleb128 0x11
 2466 00bc 01       		.uleb128 0x1
 2467 00bd 12       		.uleb128 0x12
 2468 00be 06       		.uleb128 0x6
 2469 00bf 40       		.uleb128 0x40
 2470 00c0 18       		.uleb128 0x18
 2471 00c1 9742     		.uleb128 0x2117
 2472 00c3 19       		.uleb128 0x19
 2473 00c4 01       		.uleb128 0x1
 2474 00c5 13       		.uleb128 0x13
 2475 00c6 00       		.byte	0
 2476 00c7 00       		.byte	0
 2477 00c8 0C       		.uleb128 0xc
 2478 00c9 05       		.uleb128 0x5
 2479 00ca 00       		.byte	0
 2480 00cb 03       		.uleb128 0x3
 2481 00cc 0E       		.uleb128 0xe
 2482 00cd 3A       		.uleb128 0x3a
 2483 00ce 0B       		.uleb128 0xb
 2484 00cf 3B       		.uleb128 0x3b
 2485 00d0 05       		.uleb128 0x5
 2486 00d1 49       		.uleb128 0x49
 2487 00d2 13       		.uleb128 0x13
 2488 00d3 02       		.uleb128 0x2
 2489 00d4 18       		.uleb128 0x18
 2490 00d5 00       		.byte	0
 2491 00d6 00       		.byte	0
 2492 00d7 0D       		.uleb128 0xd
 2493 00d8 2E       		.uleb128 0x2e
 2494 00d9 01       		.byte	0x1
 2495 00da 3F       		.uleb128 0x3f
 2496 00db 19       		.uleb128 0x19
 2497 00dc 03       		.uleb128 0x3
 2498 00dd 0E       		.uleb128 0xe
 2499 00de 3A       		.uleb128 0x3a
 2500 00df 0B       		.uleb128 0xb
 2501 00e0 3B       		.uleb128 0x3b
 2502 00e1 05       		.uleb128 0x5
 2503 00e2 27       		.uleb128 0x27
 2504 00e3 19       		.uleb128 0x19
 2505 00e4 49       		.uleb128 0x49
 2506 00e5 13       		.uleb128 0x13
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 67


 2507 00e6 11       		.uleb128 0x11
 2508 00e7 01       		.uleb128 0x1
 2509 00e8 12       		.uleb128 0x12
 2510 00e9 06       		.uleb128 0x6
 2511 00ea 40       		.uleb128 0x40
 2512 00eb 18       		.uleb128 0x18
 2513 00ec 9642     		.uleb128 0x2116
 2514 00ee 19       		.uleb128 0x19
 2515 00ef 01       		.uleb128 0x1
 2516 00f0 13       		.uleb128 0x13
 2517 00f1 00       		.byte	0
 2518 00f2 00       		.byte	0
 2519 00f3 0E       		.uleb128 0xe
 2520 00f4 34       		.uleb128 0x34
 2521 00f5 00       		.byte	0
 2522 00f6 03       		.uleb128 0x3
 2523 00f7 0E       		.uleb128 0xe
 2524 00f8 3A       		.uleb128 0x3a
 2525 00f9 0B       		.uleb128 0xb
 2526 00fa 3B       		.uleb128 0x3b
 2527 00fb 05       		.uleb128 0x5
 2528 00fc 49       		.uleb128 0x49
 2529 00fd 13       		.uleb128 0x13
 2530 00fe 02       		.uleb128 0x2
 2531 00ff 18       		.uleb128 0x18
 2532 0100 00       		.byte	0
 2533 0101 00       		.byte	0
 2534 0102 0F       		.uleb128 0xf
 2535 0103 2E       		.uleb128 0x2e
 2536 0104 01       		.byte	0x1
 2537 0105 3F       		.uleb128 0x3f
 2538 0106 19       		.uleb128 0x19
 2539 0107 03       		.uleb128 0x3
 2540 0108 0E       		.uleb128 0xe
 2541 0109 3A       		.uleb128 0x3a
 2542 010a 0B       		.uleb128 0xb
 2543 010b 3B       		.uleb128 0x3b
 2544 010c 05       		.uleb128 0x5
 2545 010d 27       		.uleb128 0x27
 2546 010e 19       		.uleb128 0x19
 2547 010f 11       		.uleb128 0x11
 2548 0110 01       		.uleb128 0x1
 2549 0111 12       		.uleb128 0x12
 2550 0112 06       		.uleb128 0x6
 2551 0113 40       		.uleb128 0x40
 2552 0114 18       		.uleb128 0x18
 2553 0115 9642     		.uleb128 0x2116
 2554 0117 19       		.uleb128 0x19
 2555 0118 01       		.uleb128 0x1
 2556 0119 13       		.uleb128 0x13
 2557 011a 00       		.byte	0
 2558 011b 00       		.byte	0
 2559 011c 10       		.uleb128 0x10
 2560 011d 2E       		.uleb128 0x2e
 2561 011e 00       		.byte	0
 2562 011f 3F       		.uleb128 0x3f
 2563 0120 19       		.uleb128 0x19
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 68


 2564 0121 03       		.uleb128 0x3
 2565 0122 0E       		.uleb128 0xe
 2566 0123 3A       		.uleb128 0x3a
 2567 0124 0B       		.uleb128 0xb
 2568 0125 3B       		.uleb128 0x3b
 2569 0126 05       		.uleb128 0x5
 2570 0127 27       		.uleb128 0x27
 2571 0128 19       		.uleb128 0x19
 2572 0129 11       		.uleb128 0x11
 2573 012a 01       		.uleb128 0x1
 2574 012b 12       		.uleb128 0x12
 2575 012c 06       		.uleb128 0x6
 2576 012d 40       		.uleb128 0x40
 2577 012e 18       		.uleb128 0x18
 2578 012f 9642     		.uleb128 0x2116
 2579 0131 19       		.uleb128 0x19
 2580 0132 00       		.byte	0
 2581 0133 00       		.byte	0
 2582 0134 11       		.uleb128 0x11
 2583 0135 0F       		.uleb128 0xf
 2584 0136 00       		.byte	0
 2585 0137 0B       		.uleb128 0xb
 2586 0138 0B       		.uleb128 0xb
 2587 0139 49       		.uleb128 0x49
 2588 013a 13       		.uleb128 0x13
 2589 013b 00       		.byte	0
 2590 013c 00       		.byte	0
 2591 013d 12       		.uleb128 0x12
 2592 013e 26       		.uleb128 0x26
 2593 013f 00       		.byte	0
 2594 0140 49       		.uleb128 0x49
 2595 0141 13       		.uleb128 0x13
 2596 0142 00       		.byte	0
 2597 0143 00       		.byte	0
 2598 0144 13       		.uleb128 0x13
 2599 0145 34       		.uleb128 0x34
 2600 0146 00       		.byte	0
 2601 0147 03       		.uleb128 0x3
 2602 0148 0E       		.uleb128 0xe
 2603 0149 3A       		.uleb128 0x3a
 2604 014a 0B       		.uleb128 0xb
 2605 014b 3B       		.uleb128 0x3b
 2606 014c 0B       		.uleb128 0xb
 2607 014d 49       		.uleb128 0x49
 2608 014e 13       		.uleb128 0x13
 2609 014f 3F       		.uleb128 0x3f
 2610 0150 19       		.uleb128 0x19
 2611 0151 02       		.uleb128 0x2
 2612 0152 18       		.uleb128 0x18
 2613 0153 00       		.byte	0
 2614 0154 00       		.byte	0
 2615 0155 14       		.uleb128 0x14
 2616 0156 01       		.uleb128 0x1
 2617 0157 01       		.byte	0x1
 2618 0158 49       		.uleb128 0x49
 2619 0159 13       		.uleb128 0x13
 2620 015a 01       		.uleb128 0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 69


 2621 015b 13       		.uleb128 0x13
 2622 015c 00       		.byte	0
 2623 015d 00       		.byte	0
 2624 015e 15       		.uleb128 0x15
 2625 015f 21       		.uleb128 0x21
 2626 0160 00       		.byte	0
 2627 0161 49       		.uleb128 0x49
 2628 0162 13       		.uleb128 0x13
 2629 0163 2F       		.uleb128 0x2f
 2630 0164 0B       		.uleb128 0xb
 2631 0165 00       		.byte	0
 2632 0166 00       		.byte	0
 2633 0167 00       		.byte	0
 2634              		.section	.debug_aranges,"",%progbits
 2635 0000 DC000000 		.4byte	0xdc
 2636 0004 0200     		.2byte	0x2
 2637 0006 00000000 		.4byte	.Ldebug_info0
 2638 000a 04       		.byte	0x4
 2639 000b 00       		.byte	0
 2640 000c 0000     		.2byte	0
 2641 000e 0000     		.2byte	0
 2642 0010 00000000 		.4byte	.LFB0
 2643 0014 A8000000 		.4byte	.LFE0-.LFB0
 2644 0018 00000000 		.4byte	.LFB1
 2645 001c 6C000000 		.4byte	.LFE1-.LFB1
 2646 0020 00000000 		.4byte	.LFB2
 2647 0024 24000000 		.4byte	.LFE2-.LFB2
 2648 0028 00000000 		.4byte	.LFB3
 2649 002c 58000000 		.4byte	.LFE3-.LFB3
 2650 0030 00000000 		.4byte	.LFB4
 2651 0034 18000000 		.4byte	.LFE4-.LFB4
 2652 0038 00000000 		.4byte	.LFB5
 2653 003c 18000000 		.4byte	.LFE5-.LFB5
 2654 0040 00000000 		.4byte	.LFB6
 2655 0044 18000000 		.4byte	.LFE6-.LFB6
 2656 0048 00000000 		.4byte	.LFB7
 2657 004c 18000000 		.4byte	.LFE7-.LFB7
 2658 0050 00000000 		.4byte	.LFB8
 2659 0054 20000000 		.4byte	.LFE8-.LFB8
 2660 0058 00000000 		.4byte	.LFB9
 2661 005c 20000000 		.4byte	.LFE9-.LFB9
 2662 0060 00000000 		.4byte	.LFB10
 2663 0064 3C000000 		.4byte	.LFE10-.LFB10
 2664 0068 00000000 		.4byte	.LFB11
 2665 006c 3C000000 		.4byte	.LFE11-.LFB11
 2666 0070 00000000 		.4byte	.LFB12
 2667 0074 10010000 		.4byte	.LFE12-.LFB12
 2668 0078 00000000 		.4byte	.LFB13
 2669 007c 20000000 		.4byte	.LFE13-.LFB13
 2670 0080 00000000 		.4byte	.LFB14
 2671 0084 78000000 		.4byte	.LFE14-.LFB14
 2672 0088 00000000 		.4byte	.LFB15
 2673 008c 6C000000 		.4byte	.LFE15-.LFB15
 2674 0090 00000000 		.4byte	.LFB16
 2675 0094 6C000000 		.4byte	.LFE16-.LFB16
 2676 0098 00000000 		.4byte	.LFB17
 2677 009c 4C000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 70


 2678 00a0 00000000 		.4byte	.LFB18
 2679 00a4 7C000000 		.4byte	.LFE18-.LFB18
 2680 00a8 00000000 		.4byte	.LFB19
 2681 00ac 3A000000 		.4byte	.LFE19-.LFB19
 2682 00b0 00000000 		.4byte	.LFB20
 2683 00b4 60000000 		.4byte	.LFE20-.LFB20
 2684 00b8 00000000 		.4byte	.LFB21
 2685 00bc 1C000000 		.4byte	.LFE21-.LFB21
 2686 00c0 00000000 		.4byte	.LFB22
 2687 00c4 1C000000 		.4byte	.LFE22-.LFB22
 2688 00c8 00000000 		.4byte	.LFB23
 2689 00cc 28000000 		.4byte	.LFE23-.LFB23
 2690 00d0 00000000 		.4byte	.LFB24
 2691 00d4 70000000 		.4byte	.LFE24-.LFB24
 2692 00d8 00000000 		.4byte	0
 2693 00dc 00000000 		.4byte	0
 2694              		.section	.debug_ranges,"",%progbits
 2695              	.Ldebug_ranges0:
 2696 0000 00000000 		.4byte	.LFB0
 2697 0004 A8000000 		.4byte	.LFE0
 2698 0008 00000000 		.4byte	.LFB1
 2699 000c 6C000000 		.4byte	.LFE1
 2700 0010 00000000 		.4byte	.LFB2
 2701 0014 24000000 		.4byte	.LFE2
 2702 0018 00000000 		.4byte	.LFB3
 2703 001c 58000000 		.4byte	.LFE3
 2704 0020 00000000 		.4byte	.LFB4
 2705 0024 18000000 		.4byte	.LFE4
 2706 0028 00000000 		.4byte	.LFB5
 2707 002c 18000000 		.4byte	.LFE5
 2708 0030 00000000 		.4byte	.LFB6
 2709 0034 18000000 		.4byte	.LFE6
 2710 0038 00000000 		.4byte	.LFB7
 2711 003c 18000000 		.4byte	.LFE7
 2712 0040 00000000 		.4byte	.LFB8
 2713 0044 20000000 		.4byte	.LFE8
 2714 0048 00000000 		.4byte	.LFB9
 2715 004c 20000000 		.4byte	.LFE9
 2716 0050 00000000 		.4byte	.LFB10
 2717 0054 3C000000 		.4byte	.LFE10
 2718 0058 00000000 		.4byte	.LFB11
 2719 005c 3C000000 		.4byte	.LFE11
 2720 0060 00000000 		.4byte	.LFB12
 2721 0064 10010000 		.4byte	.LFE12
 2722 0068 00000000 		.4byte	.LFB13
 2723 006c 20000000 		.4byte	.LFE13
 2724 0070 00000000 		.4byte	.LFB14
 2725 0074 78000000 		.4byte	.LFE14
 2726 0078 00000000 		.4byte	.LFB15
 2727 007c 6C000000 		.4byte	.LFE15
 2728 0080 00000000 		.4byte	.LFB16
 2729 0084 6C000000 		.4byte	.LFE16
 2730 0088 00000000 		.4byte	.LFB17
 2731 008c 4C000000 		.4byte	.LFE17
 2732 0090 00000000 		.4byte	.LFB18
 2733 0094 7C000000 		.4byte	.LFE18
 2734 0098 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 71


 2735 009c 3A000000 		.4byte	.LFE19
 2736 00a0 00000000 		.4byte	.LFB20
 2737 00a4 60000000 		.4byte	.LFE20
 2738 00a8 00000000 		.4byte	.LFB21
 2739 00ac 1C000000 		.4byte	.LFE21
 2740 00b0 00000000 		.4byte	.LFB22
 2741 00b4 1C000000 		.4byte	.LFE22
 2742 00b8 00000000 		.4byte	.LFB23
 2743 00bc 28000000 		.4byte	.LFE23
 2744 00c0 00000000 		.4byte	.LFB24
 2745 00c4 70000000 		.4byte	.LFE24
 2746 00c8 00000000 		.4byte	0
 2747 00cc 00000000 		.4byte	0
 2748              		.section	.debug_line,"",%progbits
 2749              	.Ldebug_line0:
 2750 0000 98020000 		.section	.debug_str,"MS",%progbits,1
 2750      02004100 
 2750      00000201 
 2750      FB0E0D00 
 2750      01010101 
 2751              	.LASF18:
 2752 0000 53504953 		.ascii	"SPIS_Init\000"
 2752      5F496E69 
 2752      7400
 2753              	.LASF27:
 2754 000a 53504953 		.ascii	"SPIS_SetTxInterruptMode\000"
 2754      5F536574 
 2754      5478496E 
 2754      74657272 
 2754      7570744D 
 2755              	.LASF58:
 2756 0022 53504953 		.ascii	"SPIS_rxBuffer\000"
 2756      5F727842 
 2756      75666665 
 2756      7200
 2757              	.LASF65:
 2758 0030 53504953 		.ascii	"SPIS_txBufferFull\000"
 2758      5F747842 
 2758      75666665 
 2758      7246756C 
 2758      6C00
 2759              	.LASF50:
 2760 0042 53504953 		.ascii	"SPIS_ClearFIFO\000"
 2760      5F436C65 
 2760      61724649 
 2760      464F00
 2761              	.LASF41:
 2762 0051 53504953 		.ascii	"SPIS_GetRxBufferSize\000"
 2762      5F476574 
 2762      52784275 
 2762      66666572 
 2762      53697A65 
 2763              	.LASF66:
 2764 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2764      43313120 
 2764      352E342E 
 2764      31203230 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 72


 2764      31363036 
 2765 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2765      20726576 
 2765      6973696F 
 2765      6E203233 
 2765      37373135 
 2766 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2766      66756E63 
 2766      74696F6E 
 2766      2D736563 
 2766      74696F6E 
 2767              	.LASF7:
 2768 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2768      206C6F6E 
 2768      6720756E 
 2768      7369676E 
 2768      65642069 
 2769              	.LASF30:
 2770 010b 746D7053 		.ascii	"tmpStatus\000"
 2770      74617475 
 2770      7300
 2771              	.LASF44:
 2772 0115 53504953 		.ascii	"SPIS_ClearRxBuffer\000"
 2772      5F436C65 
 2772      61725278 
 2772      42756666 
 2772      657200
 2773              	.LASF6:
 2774 0128 6C6F6E67 		.ascii	"long long int\000"
 2774      206C6F6E 
 2774      6720696E 
 2774      7400
 2775              	.LASF0:
 2776 0136 7369676E 		.ascii	"signed char\000"
 2776      65642063 
 2776      68617200 
 2777              	.LASF63:
 2778 0142 53504953 		.ascii	"SPIS_txBufferRead\000"
 2778      5F747842 
 2778      75666665 
 2778      72526561 
 2778      6400
 2779              	.LASF4:
 2780 0154 6C6F6E67 		.ascii	"long int\000"
 2780      20696E74 
 2780      00
 2781              	.LASF36:
 2782 015d 746D7054 		.ascii	"tmpTxBufferRead\000"
 2782      78427566 
 2782      66657252 
 2782      65616400 
 2783              	.LASF26:
 2784 016d 53504953 		.ascii	"SPIS_DisableRxInt\000"
 2784      5F446973 
 2784      61626C65 
 2784      5278496E 
 2784      7400
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 73


 2785              	.LASF9:
 2786 017f 75696E74 		.ascii	"uint8\000"
 2786      3800
 2787              	.LASF12:
 2788 0185 646F7562 		.ascii	"double\000"
 2788      6C6500
 2789              	.LASF68:
 2790 018c 453A5C5F 		.ascii	"E:\\_CODE\\PSoC Projektai\\PSoC_MIS2\\stendo_MIS.cy"
 2790      434F4445 
 2790      5C50536F 
 2790      43205072 
 2790      6F6A656B 
 2791 01bb 64736E00 		.ascii	"dsn\000"
 2792              	.LASF20:
 2793 01bf 53504953 		.ascii	"SPIS_Enable\000"
 2793      5F456E61 
 2793      626C6500 
 2794              	.LASF10:
 2795 01cb 75696E74 		.ascii	"uint32\000"
 2795      333200
 2796              	.LASF37:
 2797 01d2 53504953 		.ascii	"SPIS_WriteTxDataZero\000"
 2797      5F577269 
 2797      74655478 
 2797      44617461 
 2797      5A65726F 
 2798              	.LASF61:
 2799 01e7 53504953 		.ascii	"SPIS_rxBufferFull\000"
 2799      5F727842 
 2799      75666665 
 2799      7246756C 
 2799      6C00
 2800              	.LASF8:
 2801 01f9 756E7369 		.ascii	"unsigned int\000"
 2801      676E6564 
 2801      20696E74 
 2801      00
 2802              	.LASF57:
 2803 0206 53504953 		.ascii	"SPIS_swStatusRx\000"
 2803      5F737753 
 2803      74617475 
 2803      73527800 
 2804              	.LASF5:
 2805 0216 6C6F6E67 		.ascii	"long unsigned int\000"
 2805      20756E73 
 2805      69676E65 
 2805      6420696E 
 2805      7400
 2806              	.LASF42:
 2807 0228 73697A65 		.ascii	"size\000"
 2807      00
 2808              	.LASF3:
 2809 022d 73686F72 		.ascii	"short unsigned int\000"
 2809      7420756E 
 2809      7369676E 
 2809      65642069 
 2809      6E7400
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 74


 2810              	.LASF49:
 2811 0240 62756649 		.ascii	"bufIndex\000"
 2811      6E646578 
 2811      00
 2812              	.LASF33:
 2813 0249 53504953 		.ascii	"SPIS_WriteTxData\000"
 2813      5F577269 
 2813      74655478 
 2813      44617461 
 2813      00
 2814              	.LASF60:
 2815 025a 53504953 		.ascii	"SPIS_rxBufferWrite\000"
 2815      5F727842 
 2815      75666665 
 2815      72577269 
 2815      746500
 2816              	.LASF59:
 2817 026d 53504953 		.ascii	"SPIS_rxBufferRead\000"
 2817      5F727842 
 2817      75666665 
 2817      72526561 
 2817      6400
 2818              	.LASF62:
 2819 027f 53504953 		.ascii	"SPIS_txBuffer\000"
 2819      5F747842 
 2819      75666665 
 2819      7200
 2820              	.LASF29:
 2821 028d 696E7453 		.ascii	"intSrc\000"
 2821      726300
 2822              	.LASF31:
 2823 0294 53504953 		.ascii	"SPIS_ReadTxStatus\000"
 2823      5F526561 
 2823      64547853 
 2823      74617475 
 2823      7300
 2824              	.LASF25:
 2825 02a6 53504953 		.ascii	"SPIS_DisableTxInt\000"
 2825      5F446973 
 2825      61626C65 
 2825      5478496E 
 2825      7400
 2826              	.LASF15:
 2827 02b8 72656733 		.ascii	"reg32\000"
 2827      3200
 2828              	.LASF55:
 2829 02be 53504953 		.ascii	"SPIS_initVar\000"
 2829      5F696E69 
 2829      74566172 
 2829      00
 2830              	.LASF46:
 2831 02cb 53504953 		.ascii	"SPIS_PutArray\000"
 2831      5F507574 
 2831      41727261 
 2831      7900
 2832              	.LASF45:
 2833 02d9 53504953 		.ascii	"SPIS_ClearTxBuffer\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 75


 2833      5F436C65 
 2833      61725478 
 2833      42756666 
 2833      657200
 2834              	.LASF17:
 2835 02ec 73697A65 		.ascii	"sizetype\000"
 2835      74797065 
 2835      00
 2836              	.LASF16:
 2837 02f5 6C6F6E67 		.ascii	"long double\000"
 2837      20646F75 
 2837      626C6500 
 2838              	.LASF39:
 2839 0301 53504953 		.ascii	"SPIS_ReadRxData\000"
 2839      5F526561 
 2839      64527844 
 2839      61746100 
 2840              	.LASF35:
 2841 0311 74656D70 		.ascii	"tempStatus\000"
 2841      53746174 
 2841      757300
 2842              	.LASF11:
 2843 031c 666C6F61 		.ascii	"float\000"
 2843      7400
 2844              	.LASF21:
 2845 0322 53504953 		.ascii	"SPIS_Stop\000"
 2845      5F53746F 
 2845      7000
 2846              	.LASF56:
 2847 032c 53504953 		.ascii	"SPIS_swStatusTx\000"
 2847      5F737753 
 2847      74617475 
 2847      73547800 
 2848              	.LASF14:
 2849 033c 72656738 		.ascii	"reg8\000"
 2849      00
 2850              	.LASF24:
 2851 0341 53504953 		.ascii	"SPIS_EnableRxInt\000"
 2851      5F456E61 
 2851      626C6552 
 2851      78496E74 
 2851      00
 2852              	.LASF1:
 2853 0352 756E7369 		.ascii	"unsigned char\000"
 2853      676E6564 
 2853      20636861 
 2853      7200
 2854              	.LASF67:
 2855 0360 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIS.c\000"
 2855      72617465 
 2855      645F536F 
 2855      75726365 
 2855      5C50536F 
 2856              	.LASF54:
 2857 037e 53504953 		.ascii	"SPIS_ReadStatus\000"
 2857      5F526561 
 2857      64537461 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 76


 2857      74757300 
 2858              	.LASF2:
 2859 038e 73686F72 		.ascii	"short int\000"
 2859      7420696E 
 2859      7400
 2860              	.LASF48:
 2861 0398 62797465 		.ascii	"byteCount\000"
 2861      436F756E 
 2861      7400
 2862              	.LASF19:
 2863 03a2 53504953 		.ascii	"SPIS_Start\000"
 2863      5F537461 
 2863      727400
 2864              	.LASF28:
 2865 03ad 53504953 		.ascii	"SPIS_SetRxInterruptMode\000"
 2865      5F536574 
 2865      5278496E 
 2865      74657272 
 2865      7570744D 
 2866              	.LASF40:
 2867 03c5 72784461 		.ascii	"rxData\000"
 2867      746100
 2868              	.LASF13:
 2869 03cc 63686172 		.ascii	"char\000"
 2869      00
 2870              	.LASF32:
 2871 03d1 53504953 		.ascii	"SPIS_ReadRxStatus\000"
 2871      5F526561 
 2871      64527853 
 2871      74617475 
 2871      7300
 2872              	.LASF43:
 2873 03e3 53504953 		.ascii	"SPIS_GetTxBufferSize\000"
 2873      5F476574 
 2873      54784275 
 2873      66666572 
 2873      53697A65 
 2874              	.LASF47:
 2875 03f8 62756666 		.ascii	"buffer\000"
 2875      657200
 2876              	.LASF53:
 2877 03ff 53504953 		.ascii	"SPIS_SetInterruptMode\000"
 2877      5F536574 
 2877      496E7465 
 2877      72727570 
 2877      744D6F64 
 2878              	.LASF52:
 2879 0415 53504953 		.ascii	"SPIS_DisableInt\000"
 2879      5F446973 
 2879      61626C65 
 2879      496E7400 
 2880              	.LASF22:
 2881 0425 656E6162 		.ascii	"enableInterrupts\000"
 2881      6C65496E 
 2881      74657272 
 2881      75707473 
 2881      00
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cc23H9GX.s 			page 77


 2882              	.LASF23:
 2883 0436 53504953 		.ascii	"SPIS_EnableTxInt\000"
 2883      5F456E61 
 2883      626C6554 
 2883      78496E74 
 2883      00
 2884              	.LASF38:
 2885 0447 74784461 		.ascii	"txDataByte\000"
 2885      74614279 
 2885      746500
 2886              	.LASF64:
 2887 0452 53504953 		.ascii	"SPIS_txBufferWrite\000"
 2887      5F747842 
 2887      75666665 
 2887      72577269 
 2887      746500
 2888              	.LASF51:
 2889 0465 53504953 		.ascii	"SPIS_EnableInt\000"
 2889      5F456E61 
 2889      626C6549 
 2889      6E7400
 2890              	.LASF34:
 2891 0474 74784461 		.ascii	"txData\000"
 2891      746100
 2892              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
