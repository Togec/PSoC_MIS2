ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_TX_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	SPIM_TX_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPIM_TX_ISR, %function
  25              	SPIM_TX_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\SPIM_INT.c"
   1:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM_INT.c **** * File Name: SPIM_INT.c
   3:Generated_Source\PSoC5/SPIM_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM_INT.c **** *
   5:Generated_Source\PSoC5/SPIM_INT.c **** * Description:
   6:Generated_Source\PSoC5/SPIM_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC5/SPIM_INT.c **** *  component.
   8:Generated_Source\PSoC5/SPIM_INT.c **** *
   9:Generated_Source\PSoC5/SPIM_INT.c **** * Note:
  10:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  11:Generated_Source\PSoC5/SPIM_INT.c **** *
  12:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC5/SPIM_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/SPIM_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC5/SPIM_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC5/SPIM_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/SPIM_INT.c **** 
  19:Generated_Source\PSoC5/SPIM_INT.c **** #include "SPIM_PVT.h"
  20:Generated_Source\PSoC5/SPIM_INT.c **** 
  21:Generated_Source\PSoC5/SPIM_INT.c **** 
  22:Generated_Source\PSoC5/SPIM_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC5/SPIM_INT.c **** /* `#START SPIM_ISR_START_DEF` */
  24:Generated_Source\PSoC5/SPIM_INT.c **** 
  25:Generated_Source\PSoC5/SPIM_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/SPIM_INT.c **** 
  27:Generated_Source\PSoC5/SPIM_INT.c **** 
  28:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/SPIM_INT.c **** * Function Name: SPIM_TX_ISR
  30:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 2


  31:Generated_Source\PSoC5/SPIM_INT.c **** *
  32:Generated_Source\PSoC5/SPIM_INT.c **** * Summary:
  33:Generated_Source\PSoC5/SPIM_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC5/SPIM_INT.c **** *
  35:Generated_Source\PSoC5/SPIM_INT.c **** * Parameters:
  36:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  37:Generated_Source\PSoC5/SPIM_INT.c **** *
  38:Generated_Source\PSoC5/SPIM_INT.c **** * Return:
  39:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
  40:Generated_Source\PSoC5/SPIM_INT.c **** *
  41:Generated_Source\PSoC5/SPIM_INT.c **** * Global variables:
  42:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC5/SPIM_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC5/SPIM_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC5/SPIM_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC5/SPIM_INT.c **** *  data to sending.
  49:Generated_Source\PSoC5/SPIM_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC5/SPIM_INT.c **** *
  51:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/SPIM_INT.c **** CY_ISR(SPIM_TX_ISR)
  53:Generated_Source\PSoC5/SPIM_INT.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  54:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC5/SPIM_INT.c **** 
  58:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC5/SPIM_INT.c **** 
  62:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_TX_ISR_START` */
  64:Generated_Source\PSoC5/SPIM_INT.c **** 
  65:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC5/SPIM_INT.c ****     
  67:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC5/SPIM_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC5/SPIM_INT.c ****         while(SPIM_txBufferRead != SPIM_txBufferWrite)
  40              		.loc 1 69 0
  41 0006 35E0     		b	.L2
  42              	.L8:
  70:Generated_Source\PSoC5/SPIM_INT.c ****         {
  71:Generated_Source\PSoC5/SPIM_INT.c ****             tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
  43              		.loc 1 71 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 3


  44 0008 2A4B     		ldr	r3, .L12
  45 000a 1B78     		ldrb	r3, [r3]
  46 000c DAB2     		uxtb	r2, r3
  47 000e 2A4B     		ldr	r3, .L12+4
  48 0010 1B78     		ldrb	r3, [r3]
  49 0012 DBB2     		uxtb	r3, r3
  50 0014 03F00903 		and	r3, r3, #9
  51 0018 DBB2     		uxtb	r3, r3
  52 001a 1343     		orrs	r3, r3, r2
  53 001c FB71     		strb	r3, [r7, #7]
  72:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_swStatusTx = tmpStatus;
  54              		.loc 1 72 0
  55 001e 264A     		ldr	r2, .L12+4
  56 0020 FB79     		ldrb	r3, [r7, #7]
  57 0022 1370     		strb	r3, [r2]
  73:Generated_Source\PSoC5/SPIM_INT.c **** 
  74:Generated_Source\PSoC5/SPIM_INT.c ****             if(0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL))
  58              		.loc 1 74 0
  59 0024 244B     		ldr	r3, .L12+4
  60 0026 1B78     		ldrb	r3, [r3]
  61 0028 DBB2     		uxtb	r3, r3
  62 002a 03F00403 		and	r3, r3, #4
  63 002e 002B     		cmp	r3, #0
  64 0030 29D0     		beq	.L10
  75:Generated_Source\PSoC5/SPIM_INT.c ****             {
  76:Generated_Source\PSoC5/SPIM_INT.c ****                 if(0u == SPIM_txBufferFull)
  65              		.loc 1 76 0
  66 0032 224B     		ldr	r3, .L12+8
  67 0034 1B78     		ldrb	r3, [r3]
  68 0036 DBB2     		uxtb	r3, r3
  69 0038 002B     		cmp	r3, #0
  70 003a 0FD1     		bne	.L4
  77:Generated_Source\PSoC5/SPIM_INT.c ****                 {
  78:Generated_Source\PSoC5/SPIM_INT.c ****                    SPIM_txBufferRead++;
  71              		.loc 1 78 0
  72 003c 204B     		ldr	r3, .L12+12
  73 003e 1B78     		ldrb	r3, [r3]
  74 0040 DBB2     		uxtb	r3, r3
  75 0042 0133     		adds	r3, r3, #1
  76 0044 DAB2     		uxtb	r2, r3
  77 0046 1E4B     		ldr	r3, .L12+12
  78 0048 1A70     		strb	r2, [r3]
  79:Generated_Source\PSoC5/SPIM_INT.c **** 
  80:Generated_Source\PSoC5/SPIM_INT.c ****                     if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
  79              		.loc 1 80 0
  80 004a 1D4B     		ldr	r3, .L12+12
  81 004c 1B78     		ldrb	r3, [r3]
  82 004e DBB2     		uxtb	r3, r3
  83 0050 1F2B     		cmp	r3, #31
  84 0052 06D9     		bls	.L6
  81:Generated_Source\PSoC5/SPIM_INT.c ****                     {
  82:Generated_Source\PSoC5/SPIM_INT.c ****                         SPIM_txBufferRead = 0u;
  85              		.loc 1 82 0
  86 0054 1A4B     		ldr	r3, .L12+12
  87 0056 0022     		movs	r2, #0
  88 0058 1A70     		strb	r2, [r3]
  89 005a 02E0     		b	.L6
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 4


  90              	.L4:
  83:Generated_Source\PSoC5/SPIM_INT.c ****                     }
  84:Generated_Source\PSoC5/SPIM_INT.c ****                 }
  85:Generated_Source\PSoC5/SPIM_INT.c ****                 else
  86:Generated_Source\PSoC5/SPIM_INT.c ****                 {
  87:Generated_Source\PSoC5/SPIM_INT.c ****                     SPIM_txBufferFull = 0u;
  91              		.loc 1 87 0
  92 005c 174B     		ldr	r3, .L12+8
  93 005e 0022     		movs	r2, #0
  94 0060 1A70     		strb	r2, [r3]
  95              	.L6:
  88:Generated_Source\PSoC5/SPIM_INT.c ****                 }
  89:Generated_Source\PSoC5/SPIM_INT.c **** 
  90:Generated_Source\PSoC5/SPIM_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC5/SPIM_INT.c ****                 CY_SET_REG8(SPIM_TXDATA_PTR, 
  96              		.loc 1 91 0
  97 0062 184B     		ldr	r3, .L12+16
  98 0064 164A     		ldr	r2, .L12+12
  99 0066 1278     		ldrb	r2, [r2]
 100 0068 D2B2     		uxtb	r2, r2
 101 006a 1146     		mov	r1, r2
 102 006c 164A     		ldr	r2, .L12+20
 103 006e 525C     		ldrb	r2, [r2, r1]
 104 0070 D2B2     		uxtb	r2, r2
 105 0072 1A70     		strb	r2, [r3]
 106              	.L2:
  69:Generated_Source\PSoC5/SPIM_INT.c ****         {
 107              		.loc 1 69 0
 108 0074 124B     		ldr	r3, .L12+12
 109 0076 1B78     		ldrb	r3, [r3]
 110 0078 DAB2     		uxtb	r2, r3
 111 007a 144B     		ldr	r3, .L12+24
 112 007c 1B78     		ldrb	r3, [r3]
 113 007e DBB2     		uxtb	r3, r3
 114 0080 9A42     		cmp	r2, r3
 115 0082 C1D1     		bne	.L8
 116 0084 00E0     		b	.L7
 117              	.L10:
  92:Generated_Source\PSoC5/SPIM_INT.c ****                                              SPIM_txBuffer[SPIM_txBufferRead]);
  93:Generated_Source\PSoC5/SPIM_INT.c ****             }
  94:Generated_Source\PSoC5/SPIM_INT.c ****             else
  95:Generated_Source\PSoC5/SPIM_INT.c ****             {
  96:Generated_Source\PSoC5/SPIM_INT.c ****                 break;
 118              		.loc 1 96 0
 119 0086 00BF     		nop
 120              	.L7:
  97:Generated_Source\PSoC5/SPIM_INT.c ****             }
  98:Generated_Source\PSoC5/SPIM_INT.c ****         }
  99:Generated_Source\PSoC5/SPIM_INT.c **** 
 100:Generated_Source\PSoC5/SPIM_INT.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 121              		.loc 1 100 0
 122 0088 0D4B     		ldr	r3, .L12+12
 123 008a 1B78     		ldrb	r3, [r3]
 124 008c DAB2     		uxtb	r2, r3
 125 008e 0F4B     		ldr	r3, .L12+24
 126 0090 1B78     		ldrb	r3, [r3]
 127 0092 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 5


 128 0094 9A42     		cmp	r2, r3
 129 0096 07D1     		bne	.L11
 101:Generated_Source\PSoC5/SPIM_INT.c ****         {
 102:Generated_Source\PSoC5/SPIM_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 130              		.loc 1 103 0
 131 0098 0D4A     		ldr	r2, .L12+28
 132 009a 0D4B     		ldr	r3, .L12+28
 133 009c 1B78     		ldrb	r3, [r3]
 134 009e DBB2     		uxtb	r3, r3
 135 00a0 23F00403 		bic	r3, r3, #4
 136 00a4 DBB2     		uxtb	r3, r3
 137 00a6 1370     		strb	r3, [r2]
 138              	.L11:
 104:Generated_Source\PSoC5/SPIM_INT.c ****         }
 105:Generated_Source\PSoC5/SPIM_INT.c **** 
 106:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC5/SPIM_INT.c **** 
 108:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_TX_ISR_END` */
 110:Generated_Source\PSoC5/SPIM_INT.c **** 
 111:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC5/SPIM_INT.c ****     
 113:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC5/SPIM_INT.c **** }
 139              		.loc 1 116 0
 140 00a8 00BF     		nop
 141 00aa 0C37     		adds	r7, r7, #12
 142              		.cfi_def_cfa_offset 4
 143 00ac BD46     		mov	sp, r7
 144              		.cfi_def_cfa_register 13
 145              		@ sp needed
 146 00ae 80BC     		pop	{r7}
 147              		.cfi_restore 7
 148              		.cfi_def_cfa_offset 0
 149 00b0 7047     		bx	lr
 150              	.L13:
 151 00b2 00BF     		.align	2
 152              	.L12:
 153 00b4 66640040 		.word	1073767526
 154 00b8 00000000 		.word	SPIM_swStatusTx
 155 00bc 00000000 		.word	SPIM_txBufferFull
 156 00c0 00000000 		.word	SPIM_txBufferRead
 157 00c4 46640040 		.word	1073767494
 158 00c8 00000000 		.word	SPIM_txBuffer
 159 00cc 00000000 		.word	SPIM_txBufferWrite
 160 00d0 86640040 		.word	1073767558
 161              		.cfi_endproc
 162              	.LFE0:
 163              		.size	SPIM_TX_ISR, .-SPIM_TX_ISR
 164              		.section	.text.SPIM_RX_ISR,"ax",%progbits
 165              		.align	2
 166              		.global	SPIM_RX_ISR
 167              		.thumb
 168              		.thumb_func
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 6


 169              		.type	SPIM_RX_ISR, %function
 170              	SPIM_RX_ISR:
 171              	.LFB1:
 117:Generated_Source\PSoC5/SPIM_INT.c **** 
 118:Generated_Source\PSoC5/SPIM_INT.c **** 
 119:Generated_Source\PSoC5/SPIM_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/SPIM_INT.c **** * Function Name: SPIM_RX_ISR
 121:Generated_Source\PSoC5/SPIM_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC5/SPIM_INT.c **** *
 123:Generated_Source\PSoC5/SPIM_INT.c **** * Summary:
 124:Generated_Source\PSoC5/SPIM_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC5/SPIM_INT.c **** *
 126:Generated_Source\PSoC5/SPIM_INT.c **** * Parameters:
 127:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
 128:Generated_Source\PSoC5/SPIM_INT.c **** *
 129:Generated_Source\PSoC5/SPIM_INT.c **** * Return:
 130:Generated_Source\PSoC5/SPIM_INT.c **** *  None.
 131:Generated_Source\PSoC5/SPIM_INT.c **** *
 132:Generated_Source\PSoC5/SPIM_INT.c **** * Global variables:
 133:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC5/SPIM_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC5/SPIM_INT.c **** *  new data.
 136:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC5/SPIM_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC5/SPIM_INT.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC5/SPIM_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC5/SPIM_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC5/SPIM_INT.c **** *
 142:Generated_Source\PSoC5/SPIM_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/SPIM_INT.c **** CY_ISR(SPIM_RX_ISR)
 144:Generated_Source\PSoC5/SPIM_INT.c **** {
 172              		.loc 1 144 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC5/SPIM_INT.c ****         uint8 rxData;
 148:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC5/SPIM_INT.c **** 
 150:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC5/SPIM_INT.c **** 
 154:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_RX_ISR_START` */
 156:Generated_Source\PSoC5/SPIM_INT.c **** 
 157:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC5/SPIM_INT.c ****     
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 7


 159:Generated_Source\PSoC5/SPIM_INT.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 160:Generated_Source\PSoC5/SPIM_INT.c **** 
 161:Generated_Source\PSoC5/SPIM_INT.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 184              		.loc 1 161 0
 185 0006 2E4B     		ldr	r3, .L20
 186 0008 1B78     		ldrb	r3, [r3]
 187 000a DAB2     		uxtb	r2, r3
 188 000c 2D4B     		ldr	r3, .L20+4
 189 000e 1B78     		ldrb	r3, [r3]
 190 0010 DBB2     		uxtb	r3, r3
 191 0012 03F04003 		and	r3, r3, #64
 192 0016 DBB2     		uxtb	r3, r3
 193 0018 1343     		orrs	r3, r3, r2
 194 001a FB71     		strb	r3, [r7, #7]
 162:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_swStatusRx = tmpStatus;
 195              		.loc 1 162 0
 196 001c 294A     		ldr	r2, .L20+4
 197 001e FB79     		ldrb	r3, [r7, #7]
 198 0020 1370     		strb	r3, [r2]
 163:Generated_Source\PSoC5/SPIM_INT.c **** 
 164:Generated_Source\PSoC5/SPIM_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC5/SPIM_INT.c ****         while(0u != (SPIM_swStatusRx & SPIM_STS_RX_FIFO_NOT_EMPTY))
 199              		.loc 1 165 0
 200 0022 40E0     		b	.L15
 201              	.L19:
 166:Generated_Source\PSoC5/SPIM_INT.c ****         {
 167:Generated_Source\PSoC5/SPIM_INT.c ****             rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 202              		.loc 1 167 0
 203 0024 284B     		ldr	r3, .L20+8
 204 0026 1B78     		ldrb	r3, [r3]
 205 0028 BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/SPIM_INT.c **** 
 169:Generated_Source\PSoC5/SPIM_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_rxBufferWrite++;
 206              		.loc 1 170 0
 207 002a 284B     		ldr	r3, .L20+12
 208 002c 1B78     		ldrb	r3, [r3]
 209 002e DBB2     		uxtb	r3, r3
 210 0030 0133     		adds	r3, r3, #1
 211 0032 DAB2     		uxtb	r2, r3
 212 0034 254B     		ldr	r3, .L20+12
 213 0036 1A70     		strb	r2, [r3]
 171:Generated_Source\PSoC5/SPIM_INT.c ****             if(SPIM_rxBufferWrite >= SPIM_RX_BUFFER_SIZE)
 214              		.loc 1 171 0
 215 0038 244B     		ldr	r3, .L20+12
 216 003a 1B78     		ldrb	r3, [r3]
 217 003c DBB2     		uxtb	r3, r3
 218 003e 1F2B     		cmp	r3, #31
 219 0040 02D9     		bls	.L16
 172:Generated_Source\PSoC5/SPIM_INT.c ****             {
 173:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferWrite = 0u;
 220              		.loc 1 173 0
 221 0042 224B     		ldr	r3, .L20+12
 222 0044 0022     		movs	r2, #0
 223 0046 1A70     		strb	r2, [r3]
 224              	.L16:
 174:Generated_Source\PSoC5/SPIM_INT.c ****             }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 8


 175:Generated_Source\PSoC5/SPIM_INT.c **** 
 176:Generated_Source\PSoC5/SPIM_INT.c ****             if(SPIM_rxBufferWrite == SPIM_rxBufferRead)
 225              		.loc 1 176 0
 226 0048 204B     		ldr	r3, .L20+12
 227 004a 1B78     		ldrb	r3, [r3]
 228 004c DAB2     		uxtb	r2, r3
 229 004e 204B     		ldr	r3, .L20+16
 230 0050 1B78     		ldrb	r3, [r3]
 231 0052 DBB2     		uxtb	r3, r3
 232 0054 9A42     		cmp	r2, r3
 233 0056 11D1     		bne	.L17
 177:Generated_Source\PSoC5/SPIM_INT.c ****             {
 178:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferRead++;
 234              		.loc 1 178 0
 235 0058 1D4B     		ldr	r3, .L20+16
 236 005a 1B78     		ldrb	r3, [r3]
 237 005c DBB2     		uxtb	r3, r3
 238 005e 0133     		adds	r3, r3, #1
 239 0060 DAB2     		uxtb	r2, r3
 240 0062 1B4B     		ldr	r3, .L20+16
 241 0064 1A70     		strb	r2, [r3]
 179:Generated_Source\PSoC5/SPIM_INT.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 242              		.loc 1 179 0
 243 0066 1A4B     		ldr	r3, .L20+16
 244 0068 1B78     		ldrb	r3, [r3]
 245 006a DBB2     		uxtb	r3, r3
 246 006c 1F2B     		cmp	r3, #31
 247 006e 02D9     		bls	.L18
 180:Generated_Source\PSoC5/SPIM_INT.c ****                 {
 181:Generated_Source\PSoC5/SPIM_INT.c ****                     SPIM_rxBufferRead = 0u;
 248              		.loc 1 181 0
 249 0070 174B     		ldr	r3, .L20+16
 250 0072 0022     		movs	r2, #0
 251 0074 1A70     		strb	r2, [r3]
 252              	.L18:
 182:Generated_Source\PSoC5/SPIM_INT.c ****                 }
 183:Generated_Source\PSoC5/SPIM_INT.c **** 
 184:Generated_Source\PSoC5/SPIM_INT.c ****                 SPIM_rxBufferFull = 1u;
 253              		.loc 1 184 0
 254 0076 174B     		ldr	r3, .L20+20
 255 0078 0122     		movs	r2, #1
 256 007a 1A70     		strb	r2, [r3]
 257              	.L17:
 185:Generated_Source\PSoC5/SPIM_INT.c ****             }
 186:Generated_Source\PSoC5/SPIM_INT.c **** 
 187:Generated_Source\PSoC5/SPIM_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_rxBuffer[SPIM_rxBufferWrite] = rxData;
 258              		.loc 1 188 0
 259 007c 134B     		ldr	r3, .L20+12
 260 007e 1B78     		ldrb	r3, [r3]
 261 0080 DBB2     		uxtb	r3, r3
 262 0082 1946     		mov	r1, r3
 263 0084 144A     		ldr	r2, .L20+24
 264 0086 BB79     		ldrb	r3, [r7, #6]
 265 0088 5354     		strb	r3, [r2, r1]
 189:Generated_Source\PSoC5/SPIM_INT.c **** 
 190:Generated_Source\PSoC5/SPIM_INT.c ****             tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 9


 266              		.loc 1 190 0
 267 008a 0D4B     		ldr	r3, .L20
 268 008c 1B78     		ldrb	r3, [r3]
 269 008e DAB2     		uxtb	r2, r3
 270 0090 0C4B     		ldr	r3, .L20+4
 271 0092 1B78     		ldrb	r3, [r3]
 272 0094 DBB2     		uxtb	r3, r3
 273 0096 03F04003 		and	r3, r3, #64
 274 009a DBB2     		uxtb	r3, r3
 275 009c 1343     		orrs	r3, r3, r2
 276 009e FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/SPIM_INT.c ****             SPIM_swStatusRx = tmpStatus;
 277              		.loc 1 191 0
 278 00a0 084A     		ldr	r2, .L20+4
 279 00a2 FB79     		ldrb	r3, [r7, #7]
 280 00a4 1370     		strb	r3, [r2]
 281              	.L15:
 165:Generated_Source\PSoC5/SPIM_INT.c ****         {
 282              		.loc 1 165 0
 283 00a6 074B     		ldr	r3, .L20+4
 284 00a8 1B78     		ldrb	r3, [r3]
 285 00aa DBB2     		uxtb	r3, r3
 286 00ac 03F02003 		and	r3, r3, #32
 287 00b0 002B     		cmp	r3, #0
 288 00b2 B7D1     		bne	.L19
 192:Generated_Source\PSoC5/SPIM_INT.c ****         }
 193:Generated_Source\PSoC5/SPIM_INT.c **** 
 194:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC5/SPIM_INT.c **** 
 196:Generated_Source\PSoC5/SPIM_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#START SPIM_RX_ISR_END` */
 198:Generated_Source\PSoC5/SPIM_INT.c **** 
 199:Generated_Source\PSoC5/SPIM_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC5/SPIM_INT.c ****     
 201:Generated_Source\PSoC5/SPIM_INT.c ****     #ifdef SPIM_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC5/SPIM_INT.c ****         SPIM_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC5/SPIM_INT.c ****     #endif /* SPIM_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC5/SPIM_INT.c **** }
 289              		.loc 1 204 0
 290 00b4 00BF     		nop
 291 00b6 0C37     		adds	r7, r7, #12
 292              		.cfi_def_cfa_offset 4
 293 00b8 BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 00ba 80BC     		pop	{r7}
 297              		.cfi_restore 7
 298              		.cfi_def_cfa_offset 0
 299 00bc 7047     		bx	lr
 300              	.L21:
 301 00be 00BF     		.align	2
 302              	.L20:
 303 00c0 66650040 		.word	1073767782
 304 00c4 00000000 		.word	SPIM_swStatusRx
 305 00c8 56640040 		.word	1073767510
 306 00cc 00000000 		.word	SPIM_rxBufferWrite
 307 00d0 00000000 		.word	SPIM_rxBufferRead
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 10


 308 00d4 00000000 		.word	SPIM_rxBufferFull
 309 00d8 00000000 		.word	SPIM_rxBuffer
 310              		.cfi_endproc
 311              	.LFE1:
 312              		.size	SPIM_RX_ISR, .-SPIM_RX_ISR
 313              		.text
 314              	.Letext0:
 315              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 316              		.file 3 "Generated_Source\\PSoC5\\SPIM_PVT.h"
 317              		.section	.debug_info,"",%progbits
 318              	.Ldebug_info0:
 319 0000 86010000 		.4byte	0x186
 320 0004 0400     		.2byte	0x4
 321 0006 00000000 		.4byte	.Ldebug_abbrev0
 322 000a 04       		.byte	0x4
 323 000b 01       		.uleb128 0x1
 324 000c 0C000000 		.4byte	.LASF30
 325 0010 0C       		.byte	0xc
 326 0011 BB000000 		.4byte	.LASF31
 327 0015 6F010000 		.4byte	.LASF32
 328 0019 00000000 		.4byte	.Ldebug_ranges0+0
 329 001d 00000000 		.4byte	0
 330 0021 00000000 		.4byte	.Ldebug_line0
 331 0025 02       		.uleb128 0x2
 332 0026 01       		.byte	0x1
 333 0027 06       		.byte	0x6
 334 0028 8B020000 		.4byte	.LASF0
 335 002c 02       		.uleb128 0x2
 336 002d 01       		.byte	0x1
 337 002e 08       		.byte	0x8
 338 002f 19010000 		.4byte	.LASF1
 339 0033 02       		.uleb128 0x2
 340 0034 02       		.byte	0x2
 341 0035 05       		.byte	0x5
 342 0036 62020000 		.4byte	.LASF2
 343 003a 02       		.uleb128 0x2
 344 003b 02       		.byte	0x2
 345 003c 07       		.byte	0x7
 346 003d 9A000000 		.4byte	.LASF3
 347 0041 02       		.uleb128 0x2
 348 0042 04       		.byte	0x4
 349 0043 05       		.byte	0x5
 350 0044 6C020000 		.4byte	.LASF4
 351 0048 02       		.uleb128 0x2
 352 0049 04       		.byte	0x4
 353 004a 07       		.byte	0x7
 354 004b 39010000 		.4byte	.LASF5
 355 004f 02       		.uleb128 0x2
 356 0050 08       		.byte	0x8
 357 0051 05       		.byte	0x5
 358 0052 4F020000 		.4byte	.LASF6
 359 0056 02       		.uleb128 0x2
 360 0057 08       		.byte	0x8
 361 0058 07       		.byte	0x7
 362 0059 0B020000 		.4byte	.LASF7
 363 005d 03       		.uleb128 0x3
 364 005e 04       		.byte	0x4
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 11


 365 005f 05       		.byte	0x5
 366 0060 696E7400 		.ascii	"int\000"
 367 0064 02       		.uleb128 0x2
 368 0065 04       		.byte	0x4
 369 0066 07       		.byte	0x7
 370 0067 FE010000 		.4byte	.LASF8
 371 006b 04       		.uleb128 0x4
 372 006c 4B010000 		.4byte	.LASF12
 373 0070 02       		.byte	0x2
 374 0071 9201     		.2byte	0x192
 375 0073 2C000000 		.4byte	0x2c
 376 0077 02       		.uleb128 0x2
 377 0078 04       		.byte	0x4
 378 0079 04       		.byte	0x4
 379 007a 01010000 		.4byte	.LASF9
 380 007e 02       		.uleb128 0x2
 381 007f 08       		.byte	0x8
 382 0080 04       		.byte	0x4
 383 0081 58010000 		.4byte	.LASF10
 384 0085 02       		.uleb128 0x2
 385 0086 01       		.byte	0x1
 386 0087 08       		.byte	0x8
 387 0088 5D020000 		.4byte	.LASF11
 388 008c 04       		.uleb128 0x4
 389 008d 35020000 		.4byte	.LASF13
 390 0091 02       		.byte	0x2
 391 0092 3C02     		.2byte	0x23c
 392 0094 98000000 		.4byte	0x98
 393 0098 05       		.uleb128 0x5
 394 0099 6B000000 		.4byte	0x6b
 395 009d 02       		.uleb128 0x2
 396 009e 08       		.byte	0x8
 397 009f 04       		.byte	0x4
 398 00a0 7F020000 		.4byte	.LASF14
 399 00a4 02       		.uleb128 0x2
 400 00a5 04       		.byte	0x4
 401 00a6 07       		.byte	0x7
 402 00a7 3A020000 		.4byte	.LASF15
 403 00ab 06       		.uleb128 0x6
 404 00ac 43020000 		.4byte	.LASF16
 405 00b0 01       		.byte	0x1
 406 00b1 34       		.byte	0x34
 407 00b2 00000000 		.4byte	.LFB0
 408 00b6 D4000000 		.4byte	.LFE0-.LFB0
 409 00ba 01       		.uleb128 0x1
 410 00bb 9C       		.byte	0x9c
 411 00bc CF000000 		.4byte	0xcf
 412 00c0 07       		.uleb128 0x7
 413 00c1 75020000 		.4byte	.LASF18
 414 00c5 01       		.byte	0x1
 415 00c6 37       		.byte	0x37
 416 00c7 6B000000 		.4byte	0x6b
 417 00cb 02       		.uleb128 0x2
 418 00cc 91       		.byte	0x91
 419 00cd 77       		.sleb128 -9
 420 00ce 00       		.byte	0
 421 00cf 06       		.uleb128 0x6
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 12


 422 00d0 00000000 		.4byte	.LASF17
 423 00d4 01       		.byte	0x1
 424 00d5 8F       		.byte	0x8f
 425 00d6 00000000 		.4byte	.LFB1
 426 00da DC000000 		.4byte	.LFE1-.LFB1
 427 00de 01       		.uleb128 0x1
 428 00df 9C       		.byte	0x9c
 429 00e0 01010000 		.4byte	0x101
 430 00e4 07       		.uleb128 0x7
 431 00e5 75020000 		.4byte	.LASF18
 432 00e9 01       		.byte	0x1
 433 00ea 92       		.byte	0x92
 434 00eb 6B000000 		.4byte	0x6b
 435 00ef 02       		.uleb128 0x2
 436 00f0 91       		.byte	0x91
 437 00f1 77       		.sleb128 -9
 438 00f2 07       		.uleb128 0x7
 439 00f3 51010000 		.4byte	.LASF19
 440 00f7 01       		.byte	0x1
 441 00f8 93       		.byte	0x93
 442 00f9 6B000000 		.4byte	0x6b
 443 00fd 02       		.uleb128 0x2
 444 00fe 91       		.byte	0x91
 445 00ff 76       		.sleb128 -10
 446 0100 00       		.byte	0
 447 0101 08       		.uleb128 0x8
 448 0102 EE010000 		.4byte	.LASF20
 449 0106 03       		.byte	0x3
 450 0107 21       		.byte	0x21
 451 0108 98000000 		.4byte	0x98
 452 010c 08       		.uleb128 0x8
 453 010d 5F010000 		.4byte	.LASF21
 454 0111 03       		.byte	0x3
 455 0112 22       		.byte	0x22
 456 0113 98000000 		.4byte	0x98
 457 0117 09       		.uleb128 0x9
 458 0118 98000000 		.4byte	0x98
 459 011c 27010000 		.4byte	0x127
 460 0120 0A       		.uleb128 0xa
 461 0121 A4000000 		.4byte	0xa4
 462 0125 1F       		.byte	0x1f
 463 0126 00       		.byte	0
 464 0127 08       		.uleb128 0x8
 465 0128 AD000000 		.4byte	.LASF22
 466 012c 03       		.byte	0x3
 467 012d 25       		.byte	0x25
 468 012e 32010000 		.4byte	0x132
 469 0132 05       		.uleb128 0x5
 470 0133 17010000 		.4byte	0x117
 471 0137 08       		.uleb128 0x8
 472 0138 27010000 		.4byte	.LASF23
 473 013c 03       		.byte	0x3
 474 013d 26       		.byte	0x26
 475 013e 98000000 		.4byte	0x98
 476 0142 08       		.uleb128 0x8
 477 0143 97020000 		.4byte	.LASF24
 478 0147 03       		.byte	0x3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 13


 479 0148 27       		.byte	0x27
 480 0149 98000000 		.4byte	0x98
 481 014d 08       		.uleb128 0x8
 482 014e DD000000 		.4byte	.LASF25
 483 0152 03       		.byte	0x3
 484 0153 28       		.byte	0x28
 485 0154 98000000 		.4byte	0x98
 486 0158 08       		.uleb128 0x8
 487 0159 E0010000 		.4byte	.LASF26
 488 015d 03       		.byte	0x3
 489 015e 2C       		.byte	0x2c
 490 015f 63010000 		.4byte	0x163
 491 0163 05       		.uleb128 0x5
 492 0164 17010000 		.4byte	0x117
 493 0168 08       		.uleb128 0x8
 494 0169 07010000 		.4byte	.LASF27
 495 016d 03       		.byte	0x3
 496 016e 2D       		.byte	0x2d
 497 016f 98000000 		.4byte	0x98
 498 0173 08       		.uleb128 0x8
 499 0174 22020000 		.4byte	.LASF28
 500 0178 03       		.byte	0x3
 501 0179 2E       		.byte	0x2e
 502 017a 98000000 		.4byte	0x98
 503 017e 08       		.uleb128 0x8
 504 017f EF000000 		.4byte	.LASF29
 505 0183 03       		.byte	0x3
 506 0184 2F       		.byte	0x2f
 507 0185 98000000 		.4byte	0x98
 508 0189 00       		.byte	0
 509              		.section	.debug_abbrev,"",%progbits
 510              	.Ldebug_abbrev0:
 511 0000 01       		.uleb128 0x1
 512 0001 11       		.uleb128 0x11
 513 0002 01       		.byte	0x1
 514 0003 25       		.uleb128 0x25
 515 0004 0E       		.uleb128 0xe
 516 0005 13       		.uleb128 0x13
 517 0006 0B       		.uleb128 0xb
 518 0007 03       		.uleb128 0x3
 519 0008 0E       		.uleb128 0xe
 520 0009 1B       		.uleb128 0x1b
 521 000a 0E       		.uleb128 0xe
 522 000b 55       		.uleb128 0x55
 523 000c 17       		.uleb128 0x17
 524 000d 11       		.uleb128 0x11
 525 000e 01       		.uleb128 0x1
 526 000f 10       		.uleb128 0x10
 527 0010 17       		.uleb128 0x17
 528 0011 00       		.byte	0
 529 0012 00       		.byte	0
 530 0013 02       		.uleb128 0x2
 531 0014 24       		.uleb128 0x24
 532 0015 00       		.byte	0
 533 0016 0B       		.uleb128 0xb
 534 0017 0B       		.uleb128 0xb
 535 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 14


 536 0019 0B       		.uleb128 0xb
 537 001a 03       		.uleb128 0x3
 538 001b 0E       		.uleb128 0xe
 539 001c 00       		.byte	0
 540 001d 00       		.byte	0
 541 001e 03       		.uleb128 0x3
 542 001f 24       		.uleb128 0x24
 543 0020 00       		.byte	0
 544 0021 0B       		.uleb128 0xb
 545 0022 0B       		.uleb128 0xb
 546 0023 3E       		.uleb128 0x3e
 547 0024 0B       		.uleb128 0xb
 548 0025 03       		.uleb128 0x3
 549 0026 08       		.uleb128 0x8
 550 0027 00       		.byte	0
 551 0028 00       		.byte	0
 552 0029 04       		.uleb128 0x4
 553 002a 16       		.uleb128 0x16
 554 002b 00       		.byte	0
 555 002c 03       		.uleb128 0x3
 556 002d 0E       		.uleb128 0xe
 557 002e 3A       		.uleb128 0x3a
 558 002f 0B       		.uleb128 0xb
 559 0030 3B       		.uleb128 0x3b
 560 0031 05       		.uleb128 0x5
 561 0032 49       		.uleb128 0x49
 562 0033 13       		.uleb128 0x13
 563 0034 00       		.byte	0
 564 0035 00       		.byte	0
 565 0036 05       		.uleb128 0x5
 566 0037 35       		.uleb128 0x35
 567 0038 00       		.byte	0
 568 0039 49       		.uleb128 0x49
 569 003a 13       		.uleb128 0x13
 570 003b 00       		.byte	0
 571 003c 00       		.byte	0
 572 003d 06       		.uleb128 0x6
 573 003e 2E       		.uleb128 0x2e
 574 003f 01       		.byte	0x1
 575 0040 3F       		.uleb128 0x3f
 576 0041 19       		.uleb128 0x19
 577 0042 03       		.uleb128 0x3
 578 0043 0E       		.uleb128 0xe
 579 0044 3A       		.uleb128 0x3a
 580 0045 0B       		.uleb128 0xb
 581 0046 3B       		.uleb128 0x3b
 582 0047 0B       		.uleb128 0xb
 583 0048 27       		.uleb128 0x27
 584 0049 19       		.uleb128 0x19
 585 004a 11       		.uleb128 0x11
 586 004b 01       		.uleb128 0x1
 587 004c 12       		.uleb128 0x12
 588 004d 06       		.uleb128 0x6
 589 004e 40       		.uleb128 0x40
 590 004f 18       		.uleb128 0x18
 591 0050 9742     		.uleb128 0x2117
 592 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 15


 593 0053 01       		.uleb128 0x1
 594 0054 13       		.uleb128 0x13
 595 0055 00       		.byte	0
 596 0056 00       		.byte	0
 597 0057 07       		.uleb128 0x7
 598 0058 34       		.uleb128 0x34
 599 0059 00       		.byte	0
 600 005a 03       		.uleb128 0x3
 601 005b 0E       		.uleb128 0xe
 602 005c 3A       		.uleb128 0x3a
 603 005d 0B       		.uleb128 0xb
 604 005e 3B       		.uleb128 0x3b
 605 005f 0B       		.uleb128 0xb
 606 0060 49       		.uleb128 0x49
 607 0061 13       		.uleb128 0x13
 608 0062 02       		.uleb128 0x2
 609 0063 18       		.uleb128 0x18
 610 0064 00       		.byte	0
 611 0065 00       		.byte	0
 612 0066 08       		.uleb128 0x8
 613 0067 34       		.uleb128 0x34
 614 0068 00       		.byte	0
 615 0069 03       		.uleb128 0x3
 616 006a 0E       		.uleb128 0xe
 617 006b 3A       		.uleb128 0x3a
 618 006c 0B       		.uleb128 0xb
 619 006d 3B       		.uleb128 0x3b
 620 006e 0B       		.uleb128 0xb
 621 006f 49       		.uleb128 0x49
 622 0070 13       		.uleb128 0x13
 623 0071 3F       		.uleb128 0x3f
 624 0072 19       		.uleb128 0x19
 625 0073 3C       		.uleb128 0x3c
 626 0074 19       		.uleb128 0x19
 627 0075 00       		.byte	0
 628 0076 00       		.byte	0
 629 0077 09       		.uleb128 0x9
 630 0078 01       		.uleb128 0x1
 631 0079 01       		.byte	0x1
 632 007a 49       		.uleb128 0x49
 633 007b 13       		.uleb128 0x13
 634 007c 01       		.uleb128 0x1
 635 007d 13       		.uleb128 0x13
 636 007e 00       		.byte	0
 637 007f 00       		.byte	0
 638 0080 0A       		.uleb128 0xa
 639 0081 21       		.uleb128 0x21
 640 0082 00       		.byte	0
 641 0083 49       		.uleb128 0x49
 642 0084 13       		.uleb128 0x13
 643 0085 2F       		.uleb128 0x2f
 644 0086 0B       		.uleb128 0xb
 645 0087 00       		.byte	0
 646 0088 00       		.byte	0
 647 0089 00       		.byte	0
 648              		.section	.debug_aranges,"",%progbits
 649 0000 24000000 		.4byte	0x24
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 16


 650 0004 0200     		.2byte	0x2
 651 0006 00000000 		.4byte	.Ldebug_info0
 652 000a 04       		.byte	0x4
 653 000b 00       		.byte	0
 654 000c 0000     		.2byte	0
 655 000e 0000     		.2byte	0
 656 0010 00000000 		.4byte	.LFB0
 657 0014 D4000000 		.4byte	.LFE0-.LFB0
 658 0018 00000000 		.4byte	.LFB1
 659 001c DC000000 		.4byte	.LFE1-.LFB1
 660 0020 00000000 		.4byte	0
 661 0024 00000000 		.4byte	0
 662              		.section	.debug_ranges,"",%progbits
 663              	.Ldebug_ranges0:
 664 0000 00000000 		.4byte	.LFB0
 665 0004 D4000000 		.4byte	.LFE0
 666 0008 00000000 		.4byte	.LFB1
 667 000c DC000000 		.4byte	.LFE1
 668 0010 00000000 		.4byte	0
 669 0014 00000000 		.4byte	0
 670              		.section	.debug_line,"",%progbits
 671              	.Ldebug_line0:
 672 0000 A6000000 		.section	.debug_str,"MS",%progbits,1
 672      02005300 
 672      00000201 
 672      FB0E0D00 
 672      01010101 
 673              	.LASF17:
 674 0000 5350494D 		.ascii	"SPIM_RX_ISR\000"
 674      5F52585F 
 674      49535200 
 675              	.LASF30:
 676 000c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 676      43313120 
 676      352E342E 
 676      31203230 
 676      31363036 
 677 003f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 677      20726576 
 677      6973696F 
 677      6E203233 
 677      37373135 
 678 0072 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 678      66756E63 
 678      74696F6E 
 678      2D736563 
 678      74696F6E 
 679              	.LASF3:
 680 009a 73686F72 		.ascii	"short unsigned int\000"
 680      7420756E 
 680      7369676E 
 680      65642069 
 680      6E7400
 681              	.LASF22:
 682 00ad 5350494D 		.ascii	"SPIM_txBuffer\000"
 682      5F747842 
 682      75666665 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 17


 682      7200
 683              	.LASF31:
 684 00bb 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM_INT.c\000"
 684      72617465 
 684      645F536F 
 684      75726365 
 684      5C50536F 
 685              	.LASF25:
 686 00dd 5350494D 		.ascii	"SPIM_txBufferFull\000"
 686      5F747842 
 686      75666665 
 686      7246756C 
 686      6C00
 687              	.LASF29:
 688 00ef 5350494D 		.ascii	"SPIM_rxBufferFull\000"
 688      5F727842 
 688      75666665 
 688      7246756C 
 688      6C00
 689              	.LASF9:
 690 0101 666C6F61 		.ascii	"float\000"
 690      7400
 691              	.LASF27:
 692 0107 5350494D 		.ascii	"SPIM_rxBufferRead\000"
 692      5F727842 
 692      75666665 
 692      72526561 
 692      6400
 693              	.LASF1:
 694 0119 756E7369 		.ascii	"unsigned char\000"
 694      676E6564 
 694      20636861 
 694      7200
 695              	.LASF23:
 696 0127 5350494D 		.ascii	"SPIM_txBufferRead\000"
 696      5F747842 
 696      75666665 
 696      72526561 
 696      6400
 697              	.LASF5:
 698 0139 6C6F6E67 		.ascii	"long unsigned int\000"
 698      20756E73 
 698      69676E65 
 698      6420696E 
 698      7400
 699              	.LASF12:
 700 014b 75696E74 		.ascii	"uint8\000"
 700      3800
 701              	.LASF19:
 702 0151 72784461 		.ascii	"rxData\000"
 702      746100
 703              	.LASF10:
 704 0158 646F7562 		.ascii	"double\000"
 704      6C6500
 705              	.LASF21:
 706 015f 5350494D 		.ascii	"SPIM_swStatusRx\000"
 706      5F737753 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 18


 706      74617475 
 706      73527800 
 707              	.LASF32:
 708 016f 453A5C5F 		.ascii	"E:\\_Axis projektai\\workspace180601\\workspace\\mi"
 708      41786973 
 708      2070726F 
 708      6A656B74 
 708      61695C77 
 709 019e 6E756E69 		.ascii	"nunit_arch stendo 0927\\minunit_arch\\minunit_arch\\"
 709      745F6172 
 709      63682073 
 709      74656E64 
 709      6F203039 
 710 01cf 7374656E 		.ascii	"stendo_MIS.cydsn\000"
 710      646F5F4D 
 710      49532E63 
 710      7964736E 
 710      00
 711              	.LASF26:
 712 01e0 5350494D 		.ascii	"SPIM_rxBuffer\000"
 712      5F727842 
 712      75666665 
 712      7200
 713              	.LASF20:
 714 01ee 5350494D 		.ascii	"SPIM_swStatusTx\000"
 714      5F737753 
 714      74617475 
 714      73547800 
 715              	.LASF8:
 716 01fe 756E7369 		.ascii	"unsigned int\000"
 716      676E6564 
 716      20696E74 
 716      00
 717              	.LASF7:
 718 020b 6C6F6E67 		.ascii	"long long unsigned int\000"
 718      206C6F6E 
 718      6720756E 
 718      7369676E 
 718      65642069 
 719              	.LASF28:
 720 0222 5350494D 		.ascii	"SPIM_rxBufferWrite\000"
 720      5F727842 
 720      75666665 
 720      72577269 
 720      746500
 721              	.LASF13:
 722 0235 72656738 		.ascii	"reg8\000"
 722      00
 723              	.LASF15:
 724 023a 73697A65 		.ascii	"sizetype\000"
 724      74797065 
 724      00
 725              	.LASF16:
 726 0243 5350494D 		.ascii	"SPIM_TX_ISR\000"
 726      5F54585F 
 726      49535200 
 727              	.LASF6:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccxKVWQE.s 			page 19


 728 024f 6C6F6E67 		.ascii	"long long int\000"
 728      206C6F6E 
 728      6720696E 
 728      7400
 729              	.LASF11:
 730 025d 63686172 		.ascii	"char\000"
 730      00
 731              	.LASF2:
 732 0262 73686F72 		.ascii	"short int\000"
 732      7420696E 
 732      7400
 733              	.LASF4:
 734 026c 6C6F6E67 		.ascii	"long int\000"
 734      20696E74 
 734      00
 735              	.LASF18:
 736 0275 746D7053 		.ascii	"tmpStatus\000"
 736      74617475 
 736      7300
 737              	.LASF14:
 738 027f 6C6F6E67 		.ascii	"long double\000"
 738      20646F75 
 738      626C6500 
 739              	.LASF0:
 740 028b 7369676E 		.ascii	"signed char\000"
 740      65642063 
 740      68617200 
 741              	.LASF24:
 742 0297 5350494D 		.ascii	"SPIM_txBufferWrite\000"
 742      5F747842 
 742      75666665 
 742      72577269 
 742      746500
 743              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
